var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/AbstractQueueService.html",[0,0.621,1,3.068]],["body/injectables/AbstractQueueService.html",[0,0.654,1,3.233,2,1.095,3,0.051,4,0.045,5,0.045,6,2.801,7,0.481,8,5.133,9,0.221,10,4.932,11,5.729,12,3.233,13,3.891,14,4.248,15,1.589,16,1.589,17,0.139,18,0.953,19,0.745,20,2.188,21,3.233,22,3.624,23,4.886,24,4.598,25,4.598,26,3.289,27,3.624,28,3.624,29,3.233,30,0.832,31,4.791,32,0.45,33,4.791,34,1.083,35,0.008,36,0.802,37,0.36,38,0.926,39,3.624,40,3.871,41,3.159,42,3.311,43,1.193,44,2.586,45,3.624,46,2.225,47,3.159,48,3.25,49,3.159,50,3.159,51,3.159,52,1.943,53,1.107,54,3.923,55,3.159,56,2.1,57,2.1,58,4.823,59,3.624,60,3.159,61,3.624,62,3.159,63,3.624,64,3.159,65,0.085,66,0.35,67,4.928,68,2.031,69,0.051,70,3.159,71,2.241,72,3.159,73,3.159,74,4.791,75,4.791,76,3.159,77,2.801,78,1.658,79,4.813,80,6.461,81,2.801,82,6.461,83,4.791,84,5.729,85,4.791,86,3.159,87,4.791,88,3.159,89,3.159,90,1.494,91,4.248,92,2.801,93,2.801,94,2.801,95,2.801,96,2.801,97,2.801,98,2.801,99,2.801,100,2.801,101,2.801,102,4.378,103,2.801,104,3.159,105,2.801,106,3.891,107,2.801,108,2.801,109,2.801,110,1.422,111,4.248,112,2.801,113,4.248,114,3.074,115,4.791,116,1.003,117,3.159,118,2.131,119,2.801,120,3.159,121,3.159,122,3.159,123,3.159,124,2.801,125,3.159,126,0.006,127,2.801,128,3.159,129,1.699,130,3.891,131,5.133,132,2.801,133,2.801,134,3.159,135,0.004]],["title/guards/AdminGuard.html",[136,1.222,137,1.689]],["body/guards/AdminGuard.html",[0,1.19,3,0.06,4,0.054,5,0.054,7,0.57,9,0.33,15,1.243,16,1.243,17,0.165,19,0.845,32,0.203,34,0.535,35,0.008,36,0.396,37,0.173,38,0.457,43,0.558,65,0.097,66,0.416,69,0.14,78,1.762,110,1.614,126,0.004,135,0.004,136,2.343,137,2.02,138,1.573,139,1.984,140,4.469,141,2.76,142,2.344,143,4.779,144,3.631,145,3.569,146,3.542,147,3.747,148,1.496,149,2.711,150,1.806,151,3.53,152,2.517,153,3.717,154,4.727,155,2.054,156,1.806,157,1.754,158,2.054,159,1.754,160,2.054,161,1.705,162,2.054,163,1.861,164,1.754,165,2.054,166,1.705,167,2.054,168,1.806,169,1.861,170,1.754,171,2.054,172,1.861,173,1.861,174,2.054,175,1.36,176,1.806,177,2.054,178,1.861,179,1.659,180,2.054]],["title/guards/AnonymizeGuard.html",[136,1.222,157,2.128]],["body/guards/AnonymizeGuard.html",[0,1.19,3,0.06,4,0.054,5,0.054,7,0.57,9,0.33,15,1.243,16,1.243,17,0.165,19,0.845,32,0.203,34,0.535,35,0.008,36,0.396,37,0.173,38,0.457,43,0.558,65,0.097,66,0.416,69,0.14,78,1.762,110,1.614,126,0.004,135,0.004,136,2.343,137,1.392,138,1.573,139,1.984,140,4.469,141,2.76,142,1.615,143,4.779,144,3.631,145,3.569,146,3.542,148,1.496,149,2.711,150,1.806,151,3.53,152,2.517,153,3.717,154,4.727,155,2.054,156,2.621,157,2.545,158,2.054,159,1.754,160,2.054,161,1.705,162,2.054,163,1.861,164,1.754,165,2.054,166,1.705,167,2.054,168,1.806,169,1.861,170,1.754,171,2.054,172,1.861,173,1.861,174,2.054,175,1.36,176,1.806,177,2.054,178,1.861,179,1.659,180,2.054,181,3.747]],["title/controllers/AppController.html",[182,1.198,183,3.439]],["body/controllers/AppController.html",[3,0.104,4,0.092,5,0.092,9,0.246,17,0.284,19,1.214,20,2.002,30,1.698,32,0.35,35,0.008,43,0.96,65,0.15,66,0.715,69,0.104,110,1.207,126,0.006,135,0.006,182,2.058,183,5.909,184,1.962,185,5.716,186,8.74,187,1.207,188,6.447,189,6.447,190,8.74,191,6.447,192,6.447,193,3.966,194,6.447,195,4.004,196,5.235,197,7.813,198,1.207,199,6.447,200,6.447,201,6.447,202,4.349,203,6.447]],["title/modules/AppModule.html",[204,1.444,205,3.439]],["body/modules/AppModule.html",[3,0.062,4,0.055,5,0.055,9,0.148,19,0.6,32,0.209,34,0.55,35,0.008,36,0.407,37,0.256,38,0.47,43,0.575,56,1.4,65,0.166,66,0.428,69,0.062,90,1.838,126,0.005,135,0.005,151,1.579,183,4.923,184,1.981,204,2.067,205,7.168,206,2.459,207,1.755,208,1.859,209,1.859,210,1.859,211,3.136,212,1.806,213,3.421,214,3.421,215,3.421,216,5.594,217,5.594,218,5.594,219,5.594,220,5.594,221,5.594,222,5.594,223,5.594,224,5.594,225,5.594,226,5.053,227,5.594,228,5.594,229,5.302,230,5.302,231,2.677,232,1.859,233,1.859,234,3.858,235,3.136,236,3.858,237,5.555,238,7.121,239,3.858,240,3.858,241,1.806,242,5.555,243,3.858,244,2.192,245,1.708,246,4.925,247,3.771,248,2.043,249,3.133,250,3.858,251,5.555,252,2.746,253,4.201,254,3.858,255,3.858,256,3.133,257,3.858,258,3.858,259,3.858,260,2.918,261,3.858,262,2.192,263,2.043,264,3.858,265,3.858,266,2.746,267,2.746,268,3.858,269,3.421,270,3.133,271,3.858,272,3.858,273,3.858,274,3.858,275,3.858,276,3.858,277,3.858,278,3.858,279,3.858,280,3.858,281,3.858,282,3.858,283,3.858,284,3.858,285,3.858,286,3.858,287,3.858,288,2.918,289,3.133,290,3.858,291,3.858,292,6.691,293,2.603,294,3.858,295,2.746,296,2.603,297,3.858,298,3.858,299,3.421,300,3.858,301,1.977,302,3.858,303,2.115,304,3.858,305,2.48,306,2.918,307,3.858,308,3.858,309,3.421,310,3.421,311,3.858,312,3.133,313,3.133,314,3.858]],["title/controllers/AuthController.html",[182,1.198,315,3.439]],["body/controllers/AuthController.html",[3,0.049,4,0.044,5,0.044,7,1.37,9,0.118,17,0.135,19,0.73,20,2.056,30,0.81,32,0.372,34,0.979,35,0.008,36,0.725,37,0.366,38,0.837,43,1.022,44,1.37,48,2.197,65,0.149,66,0.341,69,0.049,71,2.369,78,1.549,110,0.879,114,2.078,116,1.491,126,0.004,135,0.004,141,2.003,152,2.32,182,2.136,184,0.936,187,1.284,193,2.887,195,3.707,196,2.497,198,0.575,301,4.075,315,3.55,316,2.726,317,4.694,318,2.331,319,2.573,320,5.693,321,7.192,322,4.694,323,4.694,324,6.372,325,3.075,326,5.867,327,5.048,328,4.096,329,3.075,330,5.649,331,5.649,332,4.694,333,3.075,334,3.075,335,3.075,336,3.965,337,5.693,338,3.374,339,3.075,340,3.075,341,3.075,342,4.299,343,3.075,344,5.19,345,3.075,346,3.385,347,3.075,348,3.075,349,3.075,350,3.408,351,3.075,352,3.075,353,4.162,354,5.19,355,2.772,356,2.565,357,3.341,358,3.55,359,2.772,360,4.694,361,3.075,362,3.075,363,3.075,364,3.075,365,3.075,366,5.69,367,3.811,368,3.075,369,3.075,370,3.075,371,1.399,372,3.075,373,3.075,374,2.325,375,1.891,376,2.074,377,1.325,378,5.572,379,3.075,380,4.694,381,4.52,382,1.325,383,2.074,384,3.075,385,2.074,386,3.075,387,2.726,388,3.66,389,2.497,390,2.918,391,1.977,392,3.55,393,3.075,394,3.075,395,4.694,396,3.841,397,2.726,398,3.075,399,3.075,400,3.075,401,2.165,402,4.446,403,5.693,404,2.573,405,5.693,406,3.075,407,3.075,408,3.075,409,3.075,410,3.075,411,3.075,412,3.075,413,3.075,414,3.811,415,3.075,416,3.811,417,2.453,418,1.974,419,2.497,420,6.372,421,4.694,422,4.694,423,2.667,424,3.075,425,2.667,426,3.075,427,2.772,428,3.075,429,2.726,430,3.075,431,3.075,432,3.075,433,4.694,434,3.075,435,1.816,436,2.726,437,3.075,438,3.075,439,3.075,440,4.162,441,3.075,442,3.075,443,3.075,444,3.075,445,3.075,446,3.075,447,4.623,448,4.162,449,3.075,450,3.075,451,2.726,452,3.075,453,3.075,454,2.726,455,3.075,456,3.075,457,2.726,458,3.075,459,3.075,460,2.497]],["title/modules/AuthModule.html",[204,1.444,216,3.237]],["body/modules/AuthModule.html",[3,0.076,4,0.068,5,0.068,9,0.18,35,0.008,65,0.167,66,0.524,69,0.076,126,0.005,135,0.005,141,1.378,184,1.947,204,2.304,206,2.089,207,2.148,208,2.275,209,2.275,210,2.275,211,3.496,212,3.395,216,6.706,229,5.653,231,3.082,232,2.275,233,2.275,235,3.082,244,2.683,245,2.089,247,3.842,248,2.5,252,3.36,262,3.635,263,3.387,269,4.186,288,3.57,289,3.833,309,4.186,310,4.186,315,5.486,355,2.788,388,5.84,389,3.833,390,4.294,391,3.035,396,5.653,397,4.186,461,4.186,462,4.721,463,4.186,464,4.186,465,5.653,466,5.964,467,5.964,468,4.592,469,4.721,470,6.396,471,4.721,472,3.36,473,6.396,474,3.57,475,4.721,476,3.57,477,4.721,478,4.721,479,4.315,480,4.721,481,4.112,482,3.57,483,4.721,484,3.035,485,4.721,486,2.904,487,4.721,488,4.721,489,4.721,490,4.721,491,4.721,492,4.186]],["title/injectables/AuthService.html",[0,0.621,388,2.924]],["body/injectables/AuthService.html",[0,0.835,2,1.533,3,0.071,4,0.063,5,0.063,7,0.673,9,0.169,16,1.466,17,0.195,19,0.951,20,2.139,30,1.611,32,0.431,34,1.133,35,0.008,36,0.839,37,0.366,38,0.968,43,1.127,44,2.397,46,2.134,48,3.717,53,1.27,65,0.142,66,0.49,69,0.071,71,2.31,78,1.517,90,1.141,110,1.487,114,2.707,126,0.005,135,0.005,141,2.658,193,2.72,303,3.352,321,5.423,346,2.862,356,2.683,375,2.72,388,3.932,390,4.21,391,2.843,401,2.326,417,2.635,418,2.431,440,5.423,451,3.92,457,3.92,460,5.693,472,3.147,476,3.344,493,3.92,494,3.134,495,5.423,496,6.116,497,6.116,498,7.012,499,4.421,500,6.838,501,4.421,502,6.116,503,4.421,504,6.116,505,4.421,506,6.116,507,6.217,508,4.421,509,4.421,510,4.421,511,3.59,512,4.966,513,4.966,514,2.843,515,4.421,516,7.012,517,3.147,518,3.59,519,3.92,520,1.642,521,3.92,522,4.421,523,4.421,524,5.423,525,6.116,526,6.116,527,4.421,528,3.147,529,4.421,530,4.421,531,6.116,532,4.421,533,4.421]],["title/guards/AutoQueryGuard.html",[136,1.222,164,2.128]],["body/guards/AutoQueryGuard.html",[0,1.19,3,0.06,4,0.054,5,0.054,7,0.57,9,0.33,15,1.243,16,1.243,17,0.165,19,0.845,32,0.203,34,0.535,35,0.008,36,0.396,37,0.173,38,0.457,43,0.558,65,0.097,66,0.416,69,0.14,78,1.762,110,1.614,126,0.004,135,0.004,136,2.343,137,1.392,138,1.573,139,1.984,140,4.469,141,2.76,142,1.615,143,4.779,144,3.631,145,3.569,146,3.542,148,1.496,149,2.711,150,1.806,151,3.53,152,2.517,153,3.717,154,4.727,155,2.054,156,1.806,157,1.754,158,2.054,159,1.754,160,2.054,161,1.705,162,2.054,163,2.701,164,2.545,165,2.054,166,1.705,167,2.054,168,1.806,169,1.861,170,1.754,171,2.054,172,1.861,173,1.861,174,2.054,175,1.36,176,1.806,177,2.054,178,1.861,179,1.659,180,2.054,534,3.747]],["title/guards/AutoRoutingGuard.html",[136,1.222,176,2.191]],["body/guards/AutoRoutingGuard.html",[0,1.19,3,0.06,4,0.054,5,0.054,7,0.57,9,0.33,15,1.243,16,1.243,17,0.165,19,0.845,32,0.203,34,0.535,35,0.008,36,0.396,37,0.173,38,0.457,43,0.558,65,0.097,66,0.416,69,0.14,78,1.762,110,1.614,126,0.004,135,0.004,136,2.343,137,1.392,138,1.573,139,1.984,140,4.469,141,2.76,142,1.615,143,4.779,144,3.631,145,3.569,146,3.542,148,1.496,149,2.711,150,1.806,151,3.53,152,2.517,153,3.717,154,4.727,155,2.054,156,1.806,157,1.754,158,2.054,159,1.754,160,2.054,161,1.705,162,2.054,163,1.861,164,1.754,165,2.054,166,1.705,167,2.054,168,1.806,169,1.861,170,1.754,171,2.054,172,1.861,173,1.861,174,2.054,175,1.974,176,2.621,177,2.054,178,1.861,179,1.659,180,2.054,535,3.747]],["title/entities/Autorouting.html",[175,1.65,536,2.128]],["body/entities/Autorouting.html",[3,0.068,4,0.061,5,0.061,9,0.31,17,0.186,18,1.179,32,0.424,35,0.008,36,0.984,37,0.417,38,0.723,46,2.258,53,1.082,57,2.835,65,0.144,69,0.119,90,1.53,126,0.005,129,2.771,135,0.005,149,1.843,175,2.151,187,1.463,198,0.791,359,2.497,536,2.774,537,2.718,538,3.009,539,5.281,540,4.873,541,5.546,542,5.559,543,4.228,544,4.228,545,4.211,546,1.402,547,3.198,548,4.228,549,4.228,550,3.749,551,4.228,552,3.433,553,4.228,554,4.228,555,4.228,556,5.565,557,4,558,1.871,559,2.712,560,3.501,561,2.403,562,2.603,563,5.612,564,1.372,565,5.272,566,4,567,5.281,568,4.619,569,5.006,570,2.718,571,2.601,572,2.718,573,3.198,574,4.401,575,2.583,576,4.483,577,3.198,578,3.198,579,4.219,580,3.198,581,3.198,582,3.198,583,4.483,584,3.198,585,5.024,586,4.483,587,3.198,588,3.198,589,3.198,590,3.198,591,4.219,592,5.177,593,3.501,594,4.483,595,3.009,596,3.198,597,3.009]],["title/injectables/AutoroutingHandler.html",[0,0.621,598,3.237]],["body/injectables/AutoroutingHandler.html",[0,0.572,2,0.92,3,0.043,4,0.038,5,0.038,7,0.404,9,0.101,17,0.117,18,0.832,19,0.651,20,1.891,30,1.102,32,0.45,34,1.133,35,0.008,36,0.838,37,0.377,38,0.968,40,1.405,42,3.49,43,1.183,46,2.552,53,1.245,56,1.519,57,2.759,65,0.139,66,0.294,69,0.043,71,1.615,78,1.487,79,1.632,90,0.685,110,1.552,116,1.87,126,0.003,129,1.485,135,0.003,149,2.51,175,2.825,187,0.783,266,1.888,267,1.888,353,3.712,401,3.385,454,2.352,517,4.846,541,3.785,545,1.632,565,1.79,566,1.79,568,1.79,569,1.79,570,1.706,574,5.9,579,3.69,585,4.119,591,2.979,595,2.979,598,2.979,599,2.352,600,4.186,601,2.691,602,3.399,603,5.185,604,5.185,605,5.887,606,4.186,607,4.186,608,4.186,609,4.186,610,4.186,611,4.186,612,5.887,613,5.185,614,4.186,615,4.186,616,2.653,617,3.785,618,4.385,619,2.917,620,2.653,621,3.712,622,4.186,623,2.653,624,4.186,625,5.391,626,4.186,627,2.653,628,4.186,629,2.653,630,4.186,631,2.653,632,4.186,633,2.653,634,4.186,635,2.653,636,4.186,637,2.653,638,2.653,639,2.653,640,2.653,641,2.653,642,2.653,643,2.653,644,2.653,645,3.783,646,4.597,647,3.921,648,2.653,649,3.399,650,2.653,651,4.186,652,4.186,653,5.887,654,4.186,655,6.407,656,4.186,657,5.887,658,4.186,659,4.186,660,4.186,661,2.653,662,2.653,663,2.653,664,2.154,665,2.653,666,2.154,667,1.888,668,1.207,669,1.174,670,3.712,671,2.352,672,1.706,673,2.006,674,1.79,675,1.36,676,2.653,677,2.653,678,2.352,679,7.388,680,5.185,681,4.186,682,2.653,683,4.186,684,2.653,685,4.186,686,4.186,687,2.653,688,4.186,689,1.888,690,4.186,691,5.185,692,3.712,693,2.653,694,2.653,695,3.783,696,2.352,697,2.653,698,4.186,699,2.653,700,5.185,701,2.653,702,2.006,703,2.653,704,2.653,705,2.653,706,2.653,707,3.712,708,4.186,709,2.653,710,3.712,711,2.653,712,2.006,713,2.653,714,2.154,715,2.653,716,2.006,717,2.006,718,2.154,719,2.352,720,2.352,721,2.154,722,2.653,723,1.318,724,2.653,725,2.653,726,2.352,727,2.653,728,2.653,729,4.186,730,2.653,731,2.653,732,2.653,733,2.653,734,2.653,735,2.653,736,2.653,737,2.352,738,2.653,739,2.653]],["title/controllers/AutoroutingsController.html",[182,1.198,740,3.439]],["body/controllers/AutoroutingsController.html",[3,0.06,4,0.054,5,0.054,7,1.399,9,0.143,16,2.122,17,0.165,19,0.845,20,2.127,32,0.404,34,1.002,35,0.008,36,0.847,37,0.402,38,0.856,43,1.111,44,2.484,46,2.653,65,0.139,66,0.415,69,0.06,71,2.133,90,2.071,110,1.198,126,0.004,129,3.168,135,0.004,175,3.219,176,1.803,182,0.986,184,1.947,187,1.396,198,0.701,318,2.699,328,3.494,336,4.506,338,4.508,350,2.699,356,2.644,371,2.472,377,1.613,381,4.726,382,1.613,402,4.665,404,4.087,617,3.494,621,3.318,666,3.039,667,2.664,678,3.318,740,4.11,741,3.318,742,2.127,743,4.413,744,3.209,745,6.398,746,5.434,747,5.434,748,5.434,749,7.021,750,3.743,751,5.882,752,3.767,753,4.403,754,2.978,755,3.743,756,3.743,757,3.743,758,3.743,759,3.743,760,6.398,761,6.398,762,3.105,763,3.743,764,3.743,765,3.743,766,4.818,767,3.743,768,3.743,769,3.743,770,4.818,771,3.743,772,3.743,773,2.302,774,3.743,775,3.743,776,1.859,777,3.743,778,5.434,779,2.664,780,1.656,781,4.514,782,1.656,783,3.039,784,3.743,785,3.743,786,3.743,787,1.571,788,7.456,789,3.743,790,3.318,791,3.743,792,3.318,793,3.743,794,3.743,795,3.743,796,3.743,797,3.743,798,3.743,799,3.743,800,3.743,801,3.743]],["title/modules/AutoroutingsModule.html",[204,1.444,217,3.237]],["body/modules/AutoroutingsModule.html",[3,0.095,4,0.084,5,0.084,9,0.226,35,0.008,65,0.163,66,0.654,69,0.095,126,0.006,135,0.006,175,2.141,184,2.252,204,2.567,206,2.612,207,2.685,208,2.843,209,2.843,210,2.843,211,3.895,212,2.762,217,6.679,231,3.565,232,2.843,233,2.843,235,2.843,244,3.353,245,2.612,598,6.339,617,5.726,618,5.478,619,3.645,666,4.792,667,4.2,668,2.685,669,2.612,671,5.232,672,3.794,740,6.113,802,5.232,803,5.232,804,5.901,805,5.901,806,5.901,807,5.901]],["title/injectables/AutoroutingsService.html",[0,0.621,617,2.924]],["body/injectables/AutoroutingsService.html",[0,0.795,2,1.43,3,0.066,4,0.059,5,0.059,7,0.627,9,0.158,17,0.182,19,0.905,20,2.23,30,1.534,32,0.465,34,1.203,35,0.008,36,0.891,37,0.389,38,1.028,42,2.985,43,1.256,44,2.66,46,2.759,65,0.143,66,0.457,69,0.066,71,2.385,78,1.113,90,1.503,110,1.264,116,1.31,126,0.005,129,2.929,135,0.005,175,3.338,245,1.825,266,2.935,267,2.935,303,3.192,401,2.215,494,2.985,539,2.935,540,5.223,545,4.514,558,1.825,570,2.651,617,3.745,667,2.935,737,5.165,754,3.192,766,5.165,770,5.165,808,3.656,809,4.951,810,6.754,811,5.825,812,3.192,813,3.745,814,4.123,815,4.514,816,5.988,817,6.507,818,4.123,819,5.825,820,5.825,821,4.123,822,5.825,823,4.123,824,5.825,825,4.123,826,4.123,827,4.123,828,4.123,829,5.825,830,4.123,831,5.165,832,4.123,833,4.73,834,4.123,835,2.651,836,4.123,837,5.825,838,4.123,839,4.123,840,6.754,841,4.123,842,4.123,843,5.825,844,5.165]],["title/guards/CdBurnerGuard.html",[136,1.222,173,2.259]],["body/guards/CdBurnerGuard.html",[0,1.19,3,0.06,4,0.054,5,0.054,7,0.57,9,0.33,15,1.243,16,1.243,17,0.165,19,0.845,32,0.203,34,0.535,35,0.008,36,0.396,37,0.173,38,0.457,43,0.558,65,0.097,66,0.416,69,0.14,78,1.762,110,1.614,126,0.004,135,0.004,136,2.343,137,1.392,138,1.573,139,1.984,140,4.469,141,2.76,142,1.615,143,4.779,144,3.631,145,3.569,146,3.542,148,1.496,149,2.711,150,1.806,151,3.53,152,2.517,153,3.717,154,4.727,155,2.054,156,1.806,157,1.754,158,2.054,159,1.754,160,2.054,161,1.705,162,2.054,163,1.861,164,1.754,165,2.054,166,1.705,167,2.054,168,1.806,169,1.861,170,1.754,171,2.054,172,2.701,173,2.701,174,2.054,175,1.36,176,1.806,177,2.054,178,1.861,179,1.659,180,2.054,845,3.747]],["title/classes/ChangePasswordDto.html",[9,0.174,326,3.439]],["body/classes/ChangePasswordDto.html",[3,0.089,4,0.079,5,0.079,9,0.272,17,0.244,18,1.414,32,0.449,35,0.008,37,0.382,46,2.164,48,3.674,53,1.277,65,0.127,69,0.089,126,0.006,135,0.006,187,1.55,198,1.037,301,3.644,326,5.376,356,2.784,447,6.374,448,6.96,546,2.358,559,2.552,562,3.149,564,1.798,575,2.164,846,1.489,847,7.593,848,4.499,849,5.541,850,5.541,851,5.541,852,7.109,853,7.109,854,7.109,855,7.109,856,6.304,857,7.109,858,7.329,859,7.109,860,8.281,861,7.109,862,7.109,863,7.109,864,7.109,865,5.541,866,5.541,867,5.541,868,5.541,869,5.541,870,6.476,871,5.376,872,4.913,873,5.541,874,7.109,875,5.541,876,5.541]],["title/guards/CheckLabelInRole.html",[136,1.222,877,3.237]],["body/guards/CheckLabelInRole.html",[0,1.002,3,0.094,4,0.083,5,0.083,7,0.886,9,0.223,17,0.257,19,1.14,20,1.913,30,1.533,32,0.398,34,1.046,35,0.008,36,0.775,37,0.338,38,0.894,43,0.867,44,2.141,65,0.131,66,0.646,69,0.094,71,1.597,78,1.611,110,1.089,126,0.006,135,0.006,136,1.971,138,2.444,144,3.451,145,3.002,146,3.366,148,2.323,151,2.382,152,1.699,153,2.508,520,2.724,787,2.444,877,5.221,878,5.717,879,3.632,880,4.727,881,4.512,882,5.956,883,7.335,884,5.956,885,4.727,886,4.408,887,5.821,888,5.821,889,3.742,890,4.143,891,5.821,892,3.927,893,3.927,894,5.161,895,5.821,896,4.143,897,5.821]],["title/guards/CheckUserIdParamsGuard.html",[136,1.222,898,3.237]],["body/guards/CheckUserIdParamsGuard.html",[0,1.022,3,0.097,4,0.086,5,0.086,7,0.914,9,0.23,17,0.265,19,1.163,30,2.146,32,0.406,34,0.857,35,0.008,36,0.634,37,0.277,38,0.732,43,0.895,48,3.991,54,2.659,57,2.957,65,0.107,66,0.666,69,0.097,78,1.556,110,1.124,126,0.006,129,3.112,135,0.006,136,2.011,138,2.522,141,2.378,144,3.49,145,3.062,146,3.404,148,2.398,149,2.326,151,2.459,152,1.753,153,2.589,776,3.716,878,5.8,881,4.602,882,6.075,898,5.325,899,5.327,900,6.075,901,4.81,902,6.007,903,6.007,904,4.543,905,5.327]],["title/guards/CheckUserIdQueryGuard.html",[136,1.222,906,3.237]],["body/guards/CheckUserIdQueryGuard.html",[0,1.022,3,0.097,4,0.086,5,0.086,7,0.914,9,0.23,15,2.482,17,0.265,19,1.163,30,2.146,32,0.406,34,0.857,35,0.008,36,0.634,37,0.277,38,0.732,43,0.895,48,3.991,54,2.659,57,2.957,65,0.107,66,0.666,69,0.097,78,1.556,110,1.124,126,0.006,129,3.112,135,0.006,136,2.011,138,2.522,141,2.378,144,3.49,145,3.062,146,3.404,148,2.398,149,2.326,151,2.459,152,1.753,153,2.589,878,5.8,881,4.602,882,6.075,900,6.075,901,4.81,905,5.327,906,5.325,907,5.327,908,6.007,909,6.007,910,6.007]],["title/guards/CheckUserRoleGuard.html",[136,1.222,911,3.237]],["body/guards/CheckUserRoleGuard.html",[0,1.023,3,0.097,4,0.086,5,0.086,7,0.916,9,0.23,17,0.265,19,1.164,30,2.148,32,0.406,34,0.859,35,0.008,36,0.861,37,0.277,38,0.734,43,0.897,54,2.664,57,2.96,65,0.107,66,0.668,69,0.097,78,1.558,110,1.127,126,0.006,135,0.006,136,2.013,138,2.527,141,2.562,144,3.493,145,3.066,146,3.407,148,2.403,149,2.329,151,2.464,152,1.757,153,2.594,520,3.17,776,3.721,878,5.805,880,4.888,881,4.608,892,5.054,893,4.061,900,6.083,901,4.816,911,5.332,912,6.019,913,6.019,914,6.019]],["title/classes/CreateAutoroutingDto.html",[9,0.174,751,3.439]],["body/classes/CreateAutoroutingDto.html",[3,0.111,4,0.099,5,0.099,9,0.265,35,0.008,65,0.146,69,0.111,78,1.559,126,0.007,129,2.896,135,0.007,175,2.518,198,1.299,667,4.939,751,6.174,846,1.865,915,6.153,916,6.153,917,3.614,918,8.165,919,6.939]],["title/classes/CreateOptionDto.html",[9,0.174,920,3.237]],["body/classes/CreateOptionDto.html",[3,0.056,4,0.05,5,0.05,9,0.198,17,0.155,18,1.031,32,0.486,35,0.008,37,0.413,46,2.552,53,1.312,56,3.362,65,0.092,69,0.056,90,1.591,116,2.979,126,0.004,135,0.004,149,2.364,187,1.676,198,0.657,546,2.97,559,2.683,560,4.021,562,3.307,564,1.139,575,2.725,762,3.699,846,0.943,871,5.75,920,3.69,921,7.983,922,2.655,923,5.006,924,5.006,925,5.006,926,5.006,927,5.467,928,5.467,929,5.467,930,5.467,931,5.467,932,5.467,933,5.467,934,5.467,935,5.467,936,5.467,937,5.467,938,5.467,939,5.467,940,3.51,941,3.51,942,3.51,943,3.51,944,5.185,945,3.51,946,3.51,947,4.597,948,3.51,949,5.467,950,3.51,951,3.51,952,3.51,953,3.51,954,5.467,955,3.51,956,3.51,957,3.51,958,3.504,959,3.51,960,3.51,961,2.85,962,3.51,963,5.467,964,3.51,965,3.51,966,6.742,967,5.185,968,3.51,969,3.51,970,3.51,971,5.006,972,3.51,973,3.51,974,2.85,975,3.062,976,2.498]],["title/classes/CreateRoleDto.html",[9,0.174,977,3.237]],["body/classes/CreateRoleDto.html",[3,0.069,4,0.061,5,0.061,9,0.228,15,2.283,16,2.283,17,0.188,18,1.187,32,0.485,35,0.008,36,0.727,37,0.411,53,0.87,65,0.14,69,0.12,90,2.463,126,0.005,135,0.005,142,3.379,149,2.908,156,3.316,163,3.418,169,3.418,172,3.418,175,2.498,178,3.418,187,1.672,198,0.799,546,2.962,559,2.682,560,5.274,562,2.27,564,1.386,575,2.718,762,3.751,846,1.148,961,7.188,977,4.249,978,7.98,979,3.468,980,4.27,981,4.27,982,4.27,983,4.27,984,4.27,985,4.27,986,4.27,987,4.27,988,4.27,989,2.881,990,3.786,991,4.27,992,4.27]],["title/classes/CreateUserDto.html",[9,0.174,993,3.439]],["body/classes/CreateUserDto.html",[3,0.086,4,0.077,5,0.077,9,0.267,17,0.237,18,1.387,32,0.46,35,0.008,37,0.391,53,1.333,65,0.124,69,0.086,90,2.114,126,0.006,135,0.006,142,3.007,187,1.588,198,1.007,301,4.349,346,3.623,423,4.399,425,4.399,427,4.571,546,2.815,559,2.591,562,3.227,564,1.747,575,2.583,762,3.581,846,1.446,856,6.186,872,4.772,989,5.223,993,5.276,994,7.71,995,4.07,996,5.665,997,4.772,998,4.772,999,5.276,1000,4.772,1001,5.276,1002,4.772,1003,5.382,1004,6.977,1005,6.977,1006,6.977,1007,6.186,1008,6.977,1009,5.382,1010,4.772,1011,5.665,1012,5.382,1013,5.382]],["title/guards/DeleteGuard.html",[136,1.222,166,2.069]],["body/guards/DeleteGuard.html",[0,1.19,3,0.06,4,0.054,5,0.054,7,0.57,9,0.33,15,1.243,16,1.804,17,0.165,19,0.845,32,0.203,34,0.535,35,0.008,36,0.396,37,0.173,38,0.457,43,0.558,65,0.097,66,0.416,69,0.14,78,1.762,110,1.614,126,0.004,135,0.004,136,2.343,137,1.392,138,1.573,139,1.984,140,4.469,141,2.76,142,1.615,143,4.779,144,3.631,145,3.569,146,3.542,148,1.496,149,2.711,150,1.806,151,3.53,152,2.517,153,3.717,154,4.727,155,2.054,156,1.806,157,1.754,158,2.054,159,1.754,160,2.054,161,1.705,162,2.054,163,1.861,164,1.754,165,2.054,166,2.474,167,2.054,168,1.806,169,1.861,170,1.754,171,2.054,172,1.861,173,1.861,174,2.054,175,1.36,176,1.806,177,2.054,178,1.861,179,1.659,180,2.054,1014,3.747]],["title/classes/Destination.html",[9,0.174,585,2.924]],["body/classes/Destination.html",[3,0.072,4,0.064,5,0.064,9,0.315,17,0.197,18,1.224,32,0.334,35,0.008,36,0.989,37,0.407,46,2.144,53,1.107,57,2.891,65,0.147,69,0.122,90,1.588,126,0.005,129,2.182,135,0.005,149,1.387,175,1.619,187,1.152,198,0.835,359,2.634,536,2.88,538,3.175,539,4.38,540,3.175,541,5.122,542,3.622,545,3.785,546,1.48,547,3.374,552,3.622,556,5.61,557,4.152,558,1.974,559,2.732,560,3.633,561,2.535,562,2.679,563,5.743,564,1.448,565,5.375,566,4.753,567,5.405,568,4.753,569,5.124,570,2.868,571,2.744,572,2.868,573,3.374,574,4.529,575,2.618,576,4.654,577,3.374,578,3.374,579,4.38,580,3.374,581,3.374,582,3.374,583,4.654,584,3.374,585,5.53,586,4.654,587,3.374,588,3.374,589,3.374,590,3.374,591,4.38,592,5.327,593,3.633,594,4.654,595,3.175,596,3.374,597,3.175,846,1.199,1015,4.461,1016,4.461,1017,4.461]],["title/guards/DicomWebGuard.html",[136,1.222,1018,3.237]],["body/guards/DicomWebGuard.html",[0,0.62,3,0.047,4,0.042,5,0.042,7,0.448,9,0.112,13,2.389,15,1.505,17,0.13,18,0.585,19,0.705,20,1.319,30,1.195,32,0.415,34,0.888,35,0.008,36,0.71,37,0.255,38,0.759,43,1.215,44,1.324,53,1.292,65,0.111,66,0.326,69,0.047,71,1.708,78,1.558,90,1.429,110,1.603,114,2.008,116,1.759,126,0.004,129,1.043,135,0.004,138,1.235,140,2.326,144,2.548,145,1.857,146,2.485,148,1.174,151,1.204,152,1.324,153,1.268,202,1.985,241,2.124,401,3.456,417,1.268,418,1.573,520,2.057,575,1.895,619,2.909,645,4.517,668,1.338,669,2.008,695,4.197,702,3.432,723,2.254,744,2.679,879,2.548,884,3.685,886,3.679,889,1.891,892,3.061,893,1.985,901,2.917,958,3.148,975,3.271,1018,3.23,1019,6.959,1020,2.608,1021,3.685,1022,4.538,1023,3.061,1024,4.023,1025,5.52,1026,4.538,1027,3.432,1028,4.538,1029,6.226,1030,6.727,1031,6.727,1032,4.538,1033,4.708,1034,4.538,1035,2.389,1036,2.942,1037,2.942,1038,2.942,1039,2.942,1040,2.942,1041,4.538,1042,2.942,1043,4.538,1044,4.023,1045,4.538,1046,2.942,1047,2.942,1048,4.538,1049,5.539,1050,6.226,1051,2.942,1052,4.538,1053,3.061,1054,2.225,1055,2.608,1056,2.008,1057,4.538,1058,4.538,1059,6.782,1060,4.911,1061,2.942,1062,2.942,1063,4.201,1064,2.942,1065,2.942,1066,2.942,1067,2.942,1068,5.539,1069,1.985,1070,4.538,1071,4.538,1072,4.538,1073,5.539,1074,2.942,1075,2.942,1076,5.539,1077,2.942,1078,3.538,1079,2.942,1080,2.942,1081,2.608,1082,4.538,1083,2.942,1084,2.942,1085,2.942,1086,2.942,1087,2.942,1088,5.087,1089,2.942,1090,2.608,1091,2.942,1092,2.942,1093,2.608,1094,2.942,1095,2.608,1096,2.942,1097,2.942,1098,2.942,1099,2.389,1100,2.942,1101,2.942,1102,2.942,1103,2.942,1104,5.462,1105,3.685,1106,2.942,1107,2.389,1108,2.608,1109,1.985,1110,2.942,1111,2.389,1112,2.942,1113,2.942,1114,2.942,1115,2.942,1116,2.942,1117,2.225,1118,2.942,1119,2.389,1120,2.942,1121,2.942,1122,2.942,1123,2.608,1124,2.942,1125,2.942,1126,2.942,1127,2.942,1128,5.539,1129,7.407,1130,6.727,1131,4.538,1132,2.942,1133,2.942,1134,2.942,1135,2.942,1136,4.538,1137,4.538,1138,4.538,1139,2.942,1140,4.538,1141,6.226,1142,2.942,1143,2.942,1144,2.942]],["title/guards/ExportGuard.html",[136,1.222,159,2.128]],["body/guards/ExportGuard.html",[0,1.19,3,0.06,4,0.054,5,0.054,7,0.57,9,0.33,15,1.243,16,1.243,17,0.165,19,0.845,32,0.203,34,0.535,35,0.008,36,0.396,37,0.173,38,0.457,43,0.558,65,0.097,66,0.416,69,0.141,78,1.762,110,1.614,126,0.004,135,0.004,136,2.343,137,1.392,138,1.573,139,1.984,140,4.469,141,2.76,142,1.615,143,4.779,144,3.631,145,3.569,146,3.542,148,1.496,149,2.711,150,1.806,151,3.53,152,2.517,153,3.717,154,4.727,155,2.054,156,1.806,157,1.754,158,2.054,159,2.545,160,2.054,161,1.705,162,2.054,163,1.861,164,1.754,165,2.054,166,1.705,167,2.054,168,1.806,169,1.861,170,1.754,171,2.054,172,1.861,173,1.861,174,2.054,175,1.36,176,1.806,177,2.054,178,1.861,179,1.659,180,2.054,1145,3.747]],["title/classes/GetOptionDto.html",[9,0.174,1146,3.439]],["body/classes/GetOptionDto.html",[3,0.091,4,0.081,5,0.081,9,0.275,17,0.249,18,1.431,32,0.467,35,0.008,37,0.397,53,1.344,65,0.141,69,0.091,126,0.006,135,0.006,187,1.612,198,1.057,546,2.857,559,2.624,562,3.528,564,1.832,575,2.621,754,3.094,846,1.517,917,3.184,920,4.018,922,4.269,1146,5.441,1147,7.808,1148,6.379,1149,7.022,1150,7.022,1151,7.022,1152,7.022,1153,7.022,1154,5.645,1155,5.645,1156,5.645,1157,5.645,1158,5.645,1159,4.584,1160,4.269]],["title/classes/GetRoleDto.html",[9,0.174,1161,3.439]],["body/classes/GetRoleDto.html",[3,0.105,4,0.094,5,0.094,9,0.25,17,0.288,18,1.566,32,0.354,35,0.008,37,0.301,38,0.96,54,2.891,56,2.858,65,0.151,69,0.105,114,2.891,116,2.501,126,0.006,135,0.006,187,1.222,198,1.222,559,2.347,754,3.579,762,2.607,846,1.755,879,3.46,917,3.485,977,4.648,979,5.303,990,5.791,1159,5.303,1161,5.956,1162,6.982,1163,7.875,1164,6.018,1165,5.303,1166,5.791,1167,4.406]],["title/classes/GetUserDto.html",[9,0.174,1168,3.439]],["body/classes/GetUserDto.html",[3,0.086,4,0.077,5,0.077,9,0.267,17,0.237,18,1.387,32,0.472,35,0.008,37,0.401,38,0.851,46,2.123,53,1.308,65,0.138,69,0.086,90,2.114,126,0.006,129,2.746,135,0.006,142,3.007,187,1.627,198,1.007,346,3.623,423,4.399,425,4.399,427,4.571,520,3.229,546,2.717,559,2.637,562,3.115,564,1.747,575,2.493,762,3.581,846,1.446,871,5.276,989,5.223,995,4.07,996,5.665,997,4.772,999,5.276,1001,5.276,1011,5.665,1168,5.276,1169,7.848,1170,5.382,1171,5.382,1172,5.382,1173,5.382,1174,5.382,1175,5.382,1176,5.382,1177,5.382,1178,5.382,1179,3.46,1180,5.382]],["title/modules/GuardsModule.html",[204,1.444,218,3.237]],["body/modules/GuardsModule.html",[3,0.08,4,0.071,5,0.071,9,0.189,15,1.643,35,0.008,65,0.166,66,0.55,69,0.08,126,0.005,129,2.343,135,0.005,137,2.454,141,2.17,150,3.184,157,3.092,159,3.092,161,3.006,164,3.092,166,3.006,170,3.092,173,3.282,176,3.184,179,2.925,184,1.508,204,2.361,206,2.193,207,2.254,208,2.388,209,2.388,210,2.388,211,3.582,212,2.319,218,6.686,226,5.463,231,3.184,232,2.388,233,2.388,235,3.184,270,4.023,355,2.926,383,5.733,385,5.733,387,4.393,479,5.733,619,3.478,668,2.254,669,2.193,877,4.703,879,2.028,898,4.703,906,4.703,911,4.703,1018,4.703,1023,3.343,1090,7.032,1181,4.393,1182,4.955,1183,4.393,1184,5.733,1185,5.733,1186,4.955,1187,5.366,1188,4.393,1189,4.393,1190,4.955,1191,4.955,1192,4.955,1193,4.955,1194,4.955,1195,4.248,1196,4.023,1197,4.393]],["title/classes/HttpClient.html",[9,0.174,1198,3.693]],["body/classes/HttpClient.html",[3,0.044,4,0.039,5,0.039,7,0.417,9,0.105,17,0.121,18,0.854,19,0.667,20,1.829,32,0.47,34,1.066,35,0.008,36,0.789,37,0.389,38,0.911,40,4.615,42,2.713,43,1.113,44,1.749,53,1.389,54,2.343,56,2.619,57,2.619,65,0.077,69,0.044,71,1.178,78,1.378,110,1.398,114,2.343,126,0.004,135,0.004,152,1.545,193,1.686,202,5.84,241,3.377,299,6.121,301,3.538,313,7.229,338,1.451,350,4.355,358,6.057,417,2.582,418,2.078,486,1.686,669,1.9,846,0.736,1099,6.855,1198,3.487,1199,2.43,1200,4.294,1201,2.761,1202,3.807,1203,4.294,1204,4.294,1205,2.133,1206,2.761,1207,5.294,1208,5.294,1209,4.299,1210,5.294,1211,5.294,1212,5.294,1213,5.294,1214,5.294,1215,4.294,1216,4.294,1217,4.294,1218,4.294,1219,4.294,1220,5.294,1221,2.74,1222,2.74,1223,2.74,1224,2.74,1225,2.74,1226,2.74,1227,2.74,1228,2.74,1229,2.74,1230,2.74,1231,2.74,1232,2.74,1233,2.74,1234,2.74,1235,4.294,1236,2.74,1237,4.294,1238,4.294,1239,2.74,1240,4.294,1241,4.294,1242,2.74,1243,4.294,1244,2.74,1245,4.294,1246,2.74,1247,2.74,1248,5.294,1249,5.993,1250,2.74,1251,5.314,1252,3.071,1253,1.557,1254,2.74,1255,3.126,1256,2.74,1257,4.294,1258,2.43,1259,4.294,1260,4.294,1261,2.74,1262,2.74,1263,4.294,1264,2.74,1265,4.294,1266,3.405,1267,6.508,1268,5.294,1269,5.993,1270,2.74,1271,5.294,1272,2.74,1273,3.807,1274,2.74,1275,4.294,1276,2.74,1277,2.74,1278,2.74,1279,4.294,1280,3.247,1281,2.74,1282,2.74,1283,2.74,1284,2.74,1285,2.74,1286,2.74,1287,2.74,1288,2.74,1289,2.74,1290,2.74,1291,2.74,1292,2.74,1293,2.74,1294,2.74]],["title/guards/ImportGuard.html",[136,1.222,150,2.191]],["body/guards/ImportGuard.html",[0,1.19,3,0.06,4,0.054,5,0.054,7,0.57,9,0.33,15,1.243,16,1.243,17,0.165,19,0.845,32,0.203,34,0.535,35,0.008,36,0.396,37,0.173,38,0.457,43,0.558,65,0.114,66,0.416,69,0.14,78,1.762,110,1.614,126,0.004,135,0.004,136,2.343,137,1.392,138,1.573,139,1.984,140,4.469,141,2.76,142,1.615,143,4.779,144,3.631,145,3.569,146,3.542,148,1.496,149,2.711,150,2.621,151,3.53,152,2.517,153,3.717,154,4.727,155,2.054,156,1.806,157,1.754,158,2.054,159,1.754,160,2.054,161,1.705,162,2.054,163,1.861,164,1.754,165,2.054,166,1.705,167,2.054,168,1.806,169,1.861,170,1.754,171,2.054,172,1.861,173,1.861,174,2.054,175,1.36,176,1.806,177,2.054,178,1.861,179,1.659,180,2.054,1295,3.747]],["title/injectables/InstanceGuard.html",[0,0.621,1184,3.068]],["body/injectables/InstanceGuard.html",[0,0.994,2,1.995,3,0.092,4,0.082,5,0.082,7,0.875,9,0.22,17,0.254,19,1.132,20,1.902,32,0.312,34,0.821,35,0.008,36,0.608,37,0.265,38,0.702,43,0.857,44,2.125,65,0.142,66,0.638,69,0.092,71,1.578,78,1.604,110,1.363,114,2.547,116,1.827,126,0.006,135,0.006,140,3.732,144,2.98,145,2.98,146,3.352,148,2.297,152,1.679,153,2.479,520,2.967,647,5.507,723,3.617,879,3.27,884,5.913,892,4.913,893,3.882,901,4.682,904,4.351,917,3.223,958,4.54,1021,5.913,1025,6.457,1027,5.507,1044,6.457,1053,4.913,1054,4.351,1107,5.913,1109,3.882,1111,4.672,1117,4.351,1184,4.913,1195,5.137,1196,4.672,1205,3.617,1296,5.102,1297,6.457,1298,5.754,1299,5.754]],["title/classes/IsNumberOrString.html",[9,0.174,572,2.924]],["body/classes/IsNumberOrString.html",[3,0.098,4,0.087,5,0.087,9,0.289,17,0.269,19,1.173,20,1.451,32,0.409,34,1.077,35,0.008,36,0.866,37,0.348,38,0.92,43,1.124,46,2.496,53,1.249,57,2.211,65,0.109,69,0.098,110,1.413,116,1.935,126,0.006,135,0.006,149,1.894,151,3.089,359,4.457,564,1.977,572,4.853,846,1.638,1300,7.271,1301,5.402,1302,8.201,1303,7.548,1304,7.548,1305,9.1,1306,6.093,1307,8.571,1308,7.548,1309,6.093,1310,8.201,1311,7.548,1312,7.548]],["title/injectables/JwtAuthGuard.html",[0,0.621,479,3.068]],["body/injectables/JwtAuthGuard.html",[0,1.014,2,2.058,3,0.095,4,0.085,5,0.085,7,0.903,9,0.227,17,0.262,19,1.154,30,1.563,32,0.403,34,1.059,35,0.008,36,0.784,37,0.342,38,0.905,43,0.884,65,0.151,66,0.658,69,0.095,78,1.134,90,1.532,110,1.39,126,0.006,135,0.006,136,1.996,144,3.039,145,3.039,146,3.39,148,2.369,195,3.806,252,4.225,479,5.01,744,4.385,787,2.492,917,3.287,1313,5.263,1314,6.585,1315,7.426,1316,7.426,1317,5.936,1318,8.919,1319,5.936,1320,5.936,1321,4.82,1322,3.652,1323,4.82,1324,5.936,1325,3.816,1326,6.585,1327,5.936,1328,5.936,1329,5.936,1330,5.936]],["title/injectables/JwtOAuthGuard.html",[0,0.621,385,3.068]],["body/injectables/JwtOAuthGuard.html",[0,1.095,2,2.336,3,0.108,4,0.096,5,0.096,7,1.025,9,0.258,35,0.008,65,0.143,66,0.747,69,0.108,126,0.007,135,0.007,136,2.156,262,4.559,355,4.737,356,2.845,385,5.413,917,3.551,1202,7.113,1321,5.47,1322,4.144,1331,5.973,1332,5.973,1333,7.113,1334,5.413,1335,7.113,1336,8.023]],["title/injectables/JwtOauthStrategy.html",[0,0.621,465,3.068]],["body/injectables/JwtOauthStrategy.html",[0,0.764,2,1.352,3,0.063,4,0.056,5,0.056,7,0.593,9,0.25,17,0.172,19,0.87,20,2.141,30,1.474,32,0.428,34,1.125,35,0.008,36,0.858,37,0.363,38,0.962,40,4.177,43,1.129,44,2.507,53,1.311,65,0.145,66,0.432,69,0.063,71,2.28,78,1.588,110,1.418,126,0.005,135,0.005,149,1.212,202,2.63,262,2.215,263,2.064,346,2.619,354,4.232,355,3.305,356,2.797,357,3.983,358,2.948,359,3.305,374,2.948,401,2.49,414,5.316,416,3.165,417,3.083,418,2.481,419,5.316,423,2.215,425,2.215,465,3.776,468,4.453,472,2.775,474,2.948,484,2.506,486,3.443,500,6.404,518,3.165,917,2.477,1056,2.898,1109,3.776,1201,2.506,1252,1.998,1280,4.232,1322,2.398,1325,2.506,1334,4.417,1337,6.597,1338,3.165,1339,4.66,1340,4.232,1341,3.983,1342,4.232,1343,5.596,1344,5.596,1345,5.596,1346,5.596,1347,3.898,1348,7.203,1349,3.898,1350,4.962,1351,3.898,1352,6.344,1353,4.962,1354,3.898,1355,3.898,1356,4.962,1357,3.898,1358,4.962,1359,3.898,1360,4.962,1361,3.898,1362,2.948,1363,5.805,1364,2.775,1365,2.63,1366,2.948,1367,3.456,1368,3.456,1369,3.456,1370,3.456,1371,4.962,1372,3.456,1373,3.456,1374,3.456,1375,3.456,1376,3.456,1377,2.775,1378,3.456,1379,3.456,1380,3.456,1381,3.456,1382,3.456,1383,3.456,1384,3.456,1385,3.456,1386,3.456,1387,3.456,1388,3.456,1389,3.456,1390,3.456,1391,3.456,1392,3.456,1393,3.456]],["title/injectables/JwtStrategy.html",[0,0.621,466,3.237]],["body/injectables/JwtStrategy.html",[0,1.006,2,2.034,3,0.094,4,0.084,5,0.084,7,0.893,9,0.308,17,0.259,19,1.146,20,1.919,30,1.545,32,0.4,34,1.052,35,0.008,36,0.778,37,0.34,38,0.899,43,0.874,48,2.745,65,0.151,66,0.651,69,0.094,110,1.098,116,1.863,126,0.006,135,0.006,193,3.609,247,4.709,248,3.107,346,2.745,355,4.76,359,4.353,466,5.247,517,4.175,520,2.179,787,2.463,917,3.263,1056,2.596,1322,3.609,1325,3.772,1334,5.438,1339,5.737,1340,5.575,1342,5.575,1362,4.436,1394,5.201,1395,5.986,1396,4.175,1397,5.866,1398,7.372,1399,5.866,1400,5.866,1401,5.866,1402,5.866,1403,5.866,1404,5.866,1405,5.866,1406,5.866,1407,5.866,1408,5.866]],["title/entities/Label.html",[536,2.128,879,1.861]],["body/entities/Label.html",[3,0.098,4,0.088,5,0.088,9,0.234,17,0.27,18,1.505,32,0.41,35,0.008,36,0.962,37,0.349,38,0.923,53,1.103,54,2.708,56,2.746,65,0.146,69,0.098,116,2.403,126,0.006,135,0.006,187,1.416,198,1.145,520,3.337,536,3.541,537,3.933,546,2.51,558,2.708,559,2.448,575,2.303,762,3.02,879,3.097,1179,3.933,1409,5.424,1410,6.671,1411,6.118,1412,6.118,1413,5.424,1414,6.709,1415,6.118,1416,5.424,1417,6.709,1418,6.144]],["title/classes/LabelDto.html",[9,0.174,1419,3.237]],["body/classes/LabelDto.html",[3,0.109,4,0.097,5,0.097,9,0.308,17,0.299,18,1.602,32,0.368,35,0.008,36,0.939,37,0.312,53,1.174,65,0.144,69,0.109,126,0.007,135,0.007,187,1.269,198,1.269,546,2.249,552,5.507,559,2.4,562,3.063,564,2.201,575,2.064,846,1.823,1419,5.733,1420,6.013,1421,6.782]],["title/controllers/LabelsController.html",[182,1.198,1422,3.439]],["body/controllers/LabelsController.html",[3,0.067,4,0.06,5,0.06,7,1.397,9,0.16,13,4.786,16,1.391,17,0.185,19,0.916,20,2.12,32,0.401,34,0.972,35,0.008,36,0.781,37,0.382,38,0.831,43,1.101,44,2.472,53,1.235,65,0.144,66,0.465,69,0.067,71,2.028,78,0.801,110,1.384,126,0.005,135,0.005,137,1.557,179,2.608,182,1.795,184,1.276,187,1.384,198,0.785,318,2.927,319,3.23,328,3.789,336,4.427,338,4.486,350,2.082,356,2.622,371,2.681,376,2.829,377,1.807,381,4.719,382,1.807,402,4.643,404,4.052,417,1.807,418,1.454,435,2.476,520,2.531,742,2.383,752,3.749,753,4.365,754,4.052,773,3.625,776,2.082,780,1.856,782,1.856,787,1.76,809,4.988,812,4.052,879,2.412,890,5.262,896,2.984,1056,1.856,1164,5.906,1419,5.749,1422,4.457,1423,3.717,1424,6.815,1425,4.193,1426,5.893,1427,4.193,1428,4.193,1429,4.193,1430,4.193,1431,4.193,1432,4.193,1433,4.193,1434,3.717,1435,4.193,1436,4.193,1437,4.192,1438,3.717,1439,3.717,1440,2.22,1441,2.476,1442,4.193,1443,4.193,1444,2.579,1445,4.193,1446,4.193,1447,4.193,1448,3.873,1449,4.193,1450,4.193,1451,4.193,1452,3.717,1453,4.193,1454,4.193,1455,4.193,1456,4.193,1457,4.193,1458,4.193,1459,3.717,1460,3.171,1461,4.193]],["title/modules/LabelsModule.html",[204,1.444,219,3.237]],["body/modules/LabelsModule.html",[3,0.102,4,0.091,5,0.091,9,0.242,35,0.008,65,0.162,66,0.703,69,0.102,126,0.006,135,0.006,184,2.353,204,2.65,206,2.805,207,2.883,208,3.054,209,3.054,210,3.054,211,4.021,212,2.966,219,6.45,231,3.726,232,3.054,233,3.054,235,3.054,244,3.601,245,2.805,520,2.872,879,2.594,1179,4.075,1422,6.311,1437,5.575,1438,5.619,1462,5.619,1463,5.619,1464,6.338,1465,6.338,1466,5.619,1467,6.338]],["title/injectables/LabelsService.html",[0,0.621,1437,2.797]],["body/injectables/LabelsService.html",[0,0.866,2,1.616,3,0.075,4,0.067,5,0.067,7,0.709,9,0.178,17,0.205,19,0.986,20,2.222,30,1.67,32,0.463,34,1.191,35,0.008,36,0.93,37,0.385,38,1.018,42,3.25,43,1.243,44,2.645,53,1.321,65,0.144,66,0.517,69,0.075,71,2.22,78,0.89,110,1.448,114,2.063,126,0.005,135,0.005,245,2.063,303,3.476,318,3.15,401,1.773,494,3.25,520,1.732,558,2.063,754,3.476,809,5.219,812,3.476,815,4.759,835,2.997,879,3.495,890,6.079,1179,2.997,1410,5.15,1434,5.623,1437,3.901,1466,4.134,1468,4.134,1469,6.342,1470,5.623,1471,6.342,1472,4.662,1473,4.662,1474,5.623,1475,6.342,1476,4.662,1477,4.662,1478,6.342,1479,4.662,1480,6.342,1481,4.662,1482,6.342,1483,4.662,1484,4.662,1485,4.134,1486,4.662,1487,4.134,1488,3.786,1489,4.662,1490,6.342,1491,4.662,1492,4.662,1493,4.662]],["title/injectables/LocalAuthGuard.html",[0,0.621,383,3.068]],["body/injectables/LocalAuthGuard.html",[0,1.1,2,2.351,3,0.109,4,0.097,5,0.097,7,1.032,9,0.259,35,0.008,65,0.144,66,0.752,69,0.109,126,0.007,135,0.007,136,2.165,301,4.128,303,4.415,383,5.434,917,3.565,1321,5.507,1322,4.172,1333,7.142,1334,5.434,1335,7.142,1494,6.013,1495,8.055,1496,8.055]],["title/injectables/LocalStrategy.html",[0,0.621,467,3.237]],["body/injectables/LocalStrategy.html",[0,0.987,2,1.972,3,0.091,4,0.081,5,0.081,7,0.866,9,0.304,17,0.251,19,1.124,20,1.892,30,1.498,32,0.392,34,1.031,35,0.008,36,0.763,37,0.333,38,0.881,43,0.847,44,2.11,53,1.286,65,0.149,66,0.631,69,0.091,71,1.56,78,1.086,110,1.065,126,0.006,135,0.006,141,2.519,301,4.594,346,3.913,359,4.269,374,5.467,388,5.672,389,4.619,417,2.451,418,1.972,467,5.145,787,2.388,917,3.2,1322,3.499,1325,3.657,1334,5.362,1339,5.656,1340,5.467,1342,5.467,1362,4.302,1395,6.453,1497,5.044,1498,5.688,1499,5.688,1500,7.229,1501,5.688,1502,5.688,1503,5.688,1504,5.688]],["title/classes/LoginDto.html",[9,0.174,392,3.439]],["body/classes/LoginDto.html",[3,0.105,4,0.093,5,0.093,9,0.301,17,0.287,18,1.564,32,0.427,35,0.008,37,0.362,53,1.279,65,0.14,69,0.105,126,0.006,135,0.006,187,1.472,198,1.22,301,4.329,346,3.953,392,5.948,546,2.609,559,2.517,564,2.115,575,2.393,846,1.751,870,6.388,1505,5.778,1506,6.517,1507,6.517,1508,6.517,1509,6.517,1510,5.778,1511,6.517]],["title/classes/LostPassworDto.html",[9,0.174,344,3.439]],["body/classes/LostPassworDto.html",[3,0.108,4,0.097,5,0.097,9,0.307,17,0.298,18,1.597,32,0.366,35,0.008,37,0.311,53,1.171,65,0.143,69,0.108,126,0.007,135,0.007,187,1.264,198,1.264,344,6.075,346,4.013,546,2.239,559,2.394,564,2.191,575,2.055,846,1.815,848,5.482,870,6.075,1512,7.123,1513,6.751,1514,6.751,1515,6.751]],["title/modules/MailModule.html",[204,1.444,220,3.237]],["body/modules/MailModule.html",[3,0.097,4,0.086,5,0.086,9,0.231,20,1.436,35,0.008,65,0.157,66,0.669,69,0.097,90,1.557,116,1.916,126,0.006,135,0.006,141,1.76,204,2.382,206,2.67,212,2.823,220,5.338,235,3.614,246,6.651,247,4.323,248,3.194,288,4.561,289,4.898,293,4.069,296,4.069,312,4.898,418,2.091,486,3.71,507,5.348,1258,5.348,1314,6.651,1516,6.032,1517,5.348,1518,7.501,1519,6.091,1520,4.898,1521,7.501,1522,6.032,1523,6.032,1524,6.032,1525,6.032,1526,6.032,1527,6.032,1528,6.032,1529,6.032,1530,6.032,1531,6.032,1532,6.032,1533,6.032,1534,6.032,1535,6.032,1536,6.032,1537,6.032,1538,6.032,1539,4.561,1540,5.348]],["title/injectables/MailService.html",[0,0.621,396,3.068]],["body/injectables/MailService.html",[0,1.002,2,2.018,3,0.094,4,0.083,5,0.083,9,0.223,17,0.257,19,1.14,20,1.913,30,1.932,32,0.398,34,1.046,35,0.008,36,0.775,37,0.338,38,0.894,43,0.867,44,2.141,46,2.444,48,3.759,53,1.294,65,0.143,66,0.646,69,0.094,71,1.597,78,1.112,126,0.006,135,0.006,247,4.772,248,3.083,301,3.759,305,3.742,306,4.402,346,3.759,356,2.849,396,4.949,401,2.79,1519,4.727,1520,4.727,1541,5.161,1542,8.032,1543,5.821,1544,8.875,1545,5.821,1546,5.821,1547,5.821,1548,7.335,1549,5.821,1550,5.821,1551,5.821,1552,5.821,1553,5.821,1554,5.821,1555,5.821,1556,5.821,1557,5.821]],["title/injectables/MaskProcessingService.html",[0,0.621,1558,3.439]],["body/injectables/MaskProcessingService.html",[0,0.768,2,1.36,3,0.063,4,0.056,5,0.056,7,0.597,9,0.251,17,0.173,18,1.118,19,0.874,20,2.095,30,1.033,32,0.472,34,1.024,35,0.008,36,0.758,37,0.401,38,0.875,43,1.212,44,2.43,53,1.343,56,2.04,57,1.424,65,0.117,66,0.435,69,0.063,71,2.36,78,1.59,90,1.451,110,1.524,114,2.489,126,0.005,135,0.005,230,4.842,241,3.358,256,3.186,401,3.224,417,1.691,418,2.278,601,3.615,674,4.842,675,2.011,692,5.826,719,3.479,720,3.479,787,1.647,1056,1.737,1206,3.615,1558,4.252,1559,7.799,1560,3.479,1561,4.566,1562,5.826,1563,6.735,1564,7.596,1565,8.14,1566,7.176,1567,6.571,1568,7.176,1569,7.176,1570,5.623,1571,5.623,1572,7.176,1573,3.924,1574,5.623,1575,5.623,1576,3.924,1577,3.924,1578,7.176,1579,3.924,1580,3.924,1581,3.924,1582,5.623,1583,3.924,1584,5.623,1585,3.924,1586,3.924,1587,3.924,1588,3.924,1589,8.326,1590,7.176,1591,7.596,1592,3.924,1593,3.924,1594,3.924,1595,5.623,1596,3.924,1597,5.623,1598,3.924,1599,3.924,1600,5.623,1601,3.924,1602,5.623,1603,3.924,1604,3.924,1605,3.924,1606,3.924,1607,3.479,1608,3.924,1609,4.985,1610,5.623,1611,3.479,1612,3.924,1613,3.924,1614,3.924,1615,3.924,1616,5.623,1617,3.924,1618,3.924]],["title/guards/ModifyGuard.html",[136,1.222,170,2.128]],["body/guards/ModifyGuard.html",[0,1.19,3,0.06,4,0.054,5,0.054,7,0.57,9,0.33,15,1.243,16,1.243,17,0.165,19,0.845,32,0.203,34,0.535,35,0.008,36,0.396,37,0.173,38,0.457,43,0.558,65,0.097,66,0.416,69,0.14,78,1.762,110,1.614,126,0.004,135,0.004,136,2.343,137,1.392,138,1.573,139,1.984,140,4.469,141,2.76,142,1.615,143,4.779,144,3.631,145,3.569,146,3.542,148,1.496,149,2.711,150,1.806,151,3.53,152,2.517,153,3.717,154,4.727,155,2.054,156,1.806,157,1.754,158,2.054,159,1.754,160,2.054,161,1.705,162,2.054,163,1.861,164,1.754,165,2.054,166,1.705,167,2.054,168,1.806,169,2.701,170,2.545,171,2.054,172,1.861,173,1.861,174,2.054,175,1.36,176,1.806,177,2.054,178,1.861,179,1.659,180,2.054,1619,3.747]],["title/injectables/NotFoundInterceptor.html",[0,0.621,253,3.439]],["body/injectables/NotFoundInterceptor.html",[0,0.999,2,2.01,3,0.093,4,0.083,5,0.083,7,0.882,9,0.307,17,0.256,19,1.137,32,0.315,34,0.827,35,0.008,36,0.612,37,0.267,38,0.707,43,0.864,65,0.143,66,0.643,69,0.093,110,1.085,126,0.006,135,0.006,146,3.361,148,2.314,151,2.373,204,2.324,253,5.534,417,3.153,418,2.01,558,2.566,1201,4.705,1280,5.534,1364,4.127,1620,6.488,1621,5.141,1622,8.421,1623,7.318,1624,8.421,1625,7.318,1626,7.318,1627,5.707,1628,7.318,1629,7.318,1630,7.318,1631,5.942,1632,7.318,1633,7.318,1634,5.409,1635,8.421,1636,5.798,1637,7.109,1638,7.318,1639,5.141,1640,5.798,1641,5.798,1642,5.798,1643,5.798]],["title/entities/OauthConfig.html",[481,2.924,536,2.128]],["body/entities/OauthConfig.html",[3,0.093,4,0.083,5,0.083,9,0.222,17,0.256,18,1.457,32,0.457,35,0.008,36,0.89,37,0.388,53,1.328,65,0.131,69,0.093,126,0.006,129,2.598,135,0.006,187,1.577,198,1.087,263,4.601,481,4.71,536,3.429,537,3.735,546,2.795,556,5.184,558,2.571,559,2.589,575,2.565,1341,5.712,1377,5.712,1418,5.949,1644,5.861,1645,5.151,1646,6.516,1647,6.496,1648,5.809,1649,5.809,1650,6.496,1651,5.809,1652,5.809,1653,5.809,1654,5.809,1655,5.809,1656,5.809,1657,6.496,1658,5.151,1659,5.151]],["title/controllers/OauthConfigController.html",[182,1.198,1660,3.439]],["body/controllers/OauthConfigController.html",[3,0.068,4,0.06,5,0.06,7,1.384,9,0.161,16,1.396,17,0.186,19,0.919,20,2.052,32,0.371,34,0.843,35,0.008,36,0.877,37,0.359,38,0.721,43,1.017,44,1.725,53,0.996,65,0.144,66,0.467,69,0.068,71,1.874,78,1.129,90,1.525,110,1.278,126,0.005,135,0.005,137,1.564,182,1.799,184,1.281,187,1.278,193,3.636,195,3.029,196,3.419,198,0.788,262,5.168,263,3.922,318,2.936,319,3.24,327,6.056,328,3.8,336,4.059,338,3.922,350,2.091,356,2.096,367,4.8,371,2.689,376,2.841,377,1.814,378,4.8,381,4.647,382,1.814,402,4.553,404,3.24,417,2.547,418,2.049,435,4.033,468,3.744,484,2.707,486,5.694,742,2.393,752,2.616,762,2.359,776,2.091,780,1.863,781,3.8,782,1.863,787,1.768,1056,1.863,1069,3.988,1448,3.359,1460,5.601,1627,2.997,1644,4.997,1660,4.47,1661,3.733,1662,5.241,1663,5.241,1664,6.567,1665,3.733,1666,6.134,1667,4.21,1668,3.988,1669,4.21,1670,4.21,1671,4.21,1672,4.21,1673,3.733,1674,4.21,1675,5.241,1676,4.21,1677,3.733,1678,4.21,1679,4.21,1680,5.911,1681,3.8,1682,4.21,1683,4.21,1684,3.733,1685,4.21,1686,4.21,1687,4.21,1688,4.21,1689,4.21,1690,4.21,1691,4.21,1692,4.21,1693,4.21,1694,4.21,1695,4.21,1696,4.21,1697,4.21,1698,4.21,1699,4.21]],["title/classes/OauthConfigDto.html",[9,0.174,1666,3.237]],["body/classes/OauthConfigDto.html",[3,0.098,4,0.088,5,0.088,9,0.289,17,0.27,18,1.505,32,0.466,35,0.008,36,0.867,37,0.395,53,1.341,65,0.135,69,0.098,126,0.006,135,0.006,187,1.607,198,1.145,263,4.671,559,2.628,562,3.354,564,1.985,846,1.644,1341,5.847,1377,5.847,1644,5.951,1646,6.671,1666,5.386,1700,5.424,1701,8.584,1702,6.118,1703,6.118,1704,6.118,1705,6.118]],["title/modules/OauthConfigModule.html",[204,1.444,221,3.237]],["body/modules/OauthConfigModule.html",[3,0.102,4,0.091,5,0.091,9,0.243,35,0.008,65,0.159,66,0.704,69,0.102,126,0.006,135,0.006,184,2.356,204,2.653,206,2.811,207,2.889,208,3.06,209,3.06,210,3.06,211,4.025,212,2.972,221,6.454,231,3.731,232,3.06,233,3.06,235,3.06,244,3.609,245,2.811,262,4.747,263,3.363,468,4.97,481,4.083,482,4.803,484,4.083,1644,4.285,1660,6.317,1706,6.351,1707,6.351,1708,6.351,1709,6.351,1710,6.351]],["title/injectables/OauthConfigService.html",[0,0.621,468,2.492]],["body/injectables/OauthConfigService.html",[0,0.826,2,1.509,3,0.07,4,0.062,5,0.062,7,0.662,9,0.166,17,0.192,19,0.94,20,2.204,30,1.593,32,0.455,34,1.126,35,0.008,36,0.928,37,0.364,38,0.963,42,3.1,43,1.217,44,2.385,53,1.266,65,0.141,66,0.483,69,0.07,71,2.242,78,1.435,110,1.301,126,0.005,135,0.005,195,4.745,245,1.926,262,4.27,263,4.527,303,3.315,318,3.004,401,1.655,468,3.315,481,2.797,482,3.29,486,5.157,494,3.1,558,1.926,815,4.622,835,2.797,1266,2.472,1341,3.097,1377,5.347,1634,2.935,1644,5.768,1646,3.533,1647,3.858,1650,3.858,1657,5.363,1658,3.858,1659,3.858,1662,5.363,1663,5.363,1664,6.662,1665,5.363,1666,5.62,1673,5.363,1684,3.858,1711,3.858,1712,6.952,1713,6.048,1714,5.347,1715,4.351,1716,4.351,1717,6.048,1718,4.351,1719,4.351,1720,4.351,1721,4.351,1722,6.048,1723,4.351,1724,4.351,1725,4.351,1726,4.351,1727,6.048,1728,4.351,1729,4.351,1730,4.351,1731,4.351,1732,3.29,1733,3.29,1734,4.351,1735,4.351]],["title/entities/Option.html",[536,2.128,1266,2.584]],["body/entities/Option.html",[3,0.049,4,0.044,5,0.044,9,0.179,17,0.135,18,0.932,32,0.479,35,0.008,36,0.977,37,0.406,46,2.545,53,1.286,56,3.382,65,0.101,69,0.049,116,2.974,126,0.004,129,2.257,135,0.004,149,2.247,187,1.651,198,0.574,536,2.193,537,1.973,546,2.926,556,5.427,557,3.162,558,1.358,559,2.644,571,1.888,575,2.685,762,3.645,923,4.617,924,4.617,925,4.617,926,4.617,927,5.042,928,5.042,929,5.042,930,5.042,931,5.042,932,5.042,933,5.042,934,5.042,935,5.042,936,5.042,937,5.042,938,5.042,939,5.042,949,6.079,954,6.079,958,3.896,963,6.079,966,7.188,971,5.168,974,2.492,975,2.767,976,2.184,1104,2.492,1266,2.663,1736,2.721,1737,3.068,1738,4.687,1739,3.068,1740,3.068,1741,4.687,1742,3.068,1743,4.687,1744,4.687,1745,3.068,1746,4.687,1747,3.068,1748,6.365,1749,4.687,1750,3.068,1751,3.068,1752,4.687,1753,3.068,1754,4.687,1755,3.068,1756,5.686,1757,4.687,1758,3.068,1759,3.068,1760,4.687,1761,3.068,1762,4.687,1763,3.068,1764,3.068,1765,4.687,1766,3.068,1767,4.687,1768,3.068,1769,3.068,1770,4.687,1771,3.068,1772,4.687,1773,4.687,1774,3.068,1775,4.687,1776,3.068,1777,4.687,1778,3.068,1779,3.068,1780,3.068,1781,3.068,1782,4.687,1783,3.068,1784,4.155]],["title/controllers/OptionsController.html",[182,1.198,1785,3.439]],["body/controllers/OptionsController.html",[3,0.079,4,0.07,5,0.07,7,1.354,9,0.187,17,0.216,19,1.018,20,2.016,30,1.288,32,0.355,34,0.698,35,0.008,36,0.516,37,0.379,38,0.596,43,0.976,44,2.302,65,0.154,66,0.542,69,0.079,71,1.797,78,1.251,110,1.226,126,0.005,129,1.734,135,0.005,137,1.816,182,1.945,184,1.488,187,1.226,198,0.915,247,3.911,248,2.59,318,3.253,319,3.59,336,4.324,338,4.178,350,2.429,356,2.323,377,2.107,381,4.508,382,2.107,401,2.491,402,4.324,404,3.59,742,2.779,752,3.492,753,3.868,780,2.164,782,2.164,813,5.072,1056,2.899,1146,6.22,1149,4.336,1150,4.336,1151,4.336,1152,4.336,1153,4.336,1160,4.954,1209,6.406,1448,3.722,1539,6.858,1785,4.954,1786,4.336,1787,4.89,1788,3.971,1789,4.89,1790,4.89,1791,5.854,1792,4.89,1793,4.89,1794,4.89,1795,6.55,1796,4.029,1797,4.336,1798,3.971,1799,3.971,1800,4.89,1801,4.89,1802,4.336,1803,4.89,1804,4.89,1805,4.89,1806,4.89,1807,4.336,1808,4.336,1809,4.89,1810,4.89]],["title/modules/OptionsModule.html",[204,1.444,222,3.237]],["body/modules/OptionsModule.html",[3,0.102,4,0.091,5,0.091,9,0.242,35,0.008,65,0.162,66,0.703,69,0.102,126,0.006,135,0.006,184,2.353,204,2.65,206,2.805,207,2.883,208,3.054,209,3.054,210,3.054,211,4.021,212,2.966,222,6.45,231,3.726,232,3.054,233,3.054,235,3.054,244,3.601,245,2.805,247,4.095,248,3.356,1266,3.601,1785,6.311,1796,5.575,1797,5.619,1811,5.619,1812,5.619,1813,6.338,1814,6.338,1815,5.619,1816,5.619]],["title/injectables/OptionsService.html",[0,0.621,1796,2.797]],["body/injectables/OptionsService.html",[0,0.942,2,1.833,3,0.085,4,0.076,5,0.076,7,0.804,9,0.202,17,0.233,19,1.072,20,2.152,30,1.816,32,0.441,34,0.984,35,0.008,36,0.728,37,0.318,38,0.841,42,3.535,43,1.143,44,2.374,65,0.15,66,0.586,69,0.085,71,2.106,78,1.01,110,0.99,126,0.006,129,1.875,135,0.006,195,3.934,245,2.34,303,3.78,318,3.425,401,2.011,494,3.535,558,2.34,813,4.434,815,5.004,835,3.399,858,5.6,923,4.293,924,4.293,925,4.293,926,4.293,974,4.293,975,4.072,976,3.763,1055,6.115,1104,4.293,1160,3.998,1209,6.606,1266,4.917,1539,5.216,1634,3.567,1714,5.79,1732,3.998,1733,3.998,1791,5.79,1796,4.243,1798,4.293,1815,4.688,1817,4.688,1818,6.115,1819,6.897,1820,5.287,1821,5.287,1822,6.897,1823,5.287,1824,5.287,1825,6.897,1826,5.287,1827,4.688,1828,5.287,1829,5.287,1830,5.287,1831,5.287]],["title/interfaces/OrGuardOptions.html",[1365,3.068,1832,3.439]],["body/interfaces/OrGuardOptions.html",[3,0.075,4,0.067,5,0.067,9,0.178,17,0.205,18,1.259,35,0.008,37,0.332,38,0.877,43,0.692,44,1.847,65,0.138,66,0.515,69,0.075,78,1.375,90,1.199,110,1.696,116,2.01,126,0.005,135,0.005,136,2.451,138,3.501,144,3.162,145,1.902,146,2.873,148,2.526,149,2.513,151,1.902,195,2.382,252,3.308,288,3.515,401,3.074,649,6.274,776,3.143,1056,2.057,1119,3.774,1364,3.308,1365,3.136,1440,2.461,1540,4.121,1637,7.395,1639,4.121,1832,6.113,1833,3.774,1834,3.774,1835,8.083,1836,6.329,1837,4.648,1838,6.329,1839,6.329,1840,6.329,1841,6.329,1842,6.329,1843,4.648,1844,4.648,1845,4.648,1846,5.612,1847,4.121,1848,4.121,1849,4.121,1850,4.121,1851,3.774,1852,4.648,1853,4.648,1854,4.648,1855,4.648,1856,4.648,1857,4.648,1858,4.648,1859,4.648,1860,4.648,1861,4.648,1862,4.648,1863,4.648,1864,4.648,1865,4.648,1866,4.648,1867,4.648,1868,4.648,1869,6.329,1870,4.648,1871,4.648,1872,4.648,1873,4.648,1874,4.648,1875,4.648,1876,4.648,1877,4.648,1878,4.648,1879,4.648,1880,4.648,1881,4.648,1882,4.648,1883,4.648,1884,4.648]],["title/controllers/OrthancAdminController.html",[182,1.198,1885,3.439]],["body/controllers/OrthancAdminController.html",[3,0.047,4,0.042,5,0.042,7,0.444,9,0.112,16,0.968,17,0.129,19,0.701,32,0.454,34,1.194,35,0.008,36,0.884,37,0.386,38,1.021,43,1.247,65,0.126,66,0.324,69,0.047,126,0.004,135,0.004,137,1.084,152,2.734,182,1.633,184,0.888,187,1.567,198,0.546,241,3.918,356,2.969,371,1.328,377,1.258,382,1.258,619,2.256,645,2.663,668,1.328,669,1.292,723,4.158,752,4.018,779,2.078,780,1.292,782,1.292,787,1.225,1205,2.24,1252,4.906,1253,1.659,1255,5.524,1448,4.758,1885,3.411,1886,5.208,1887,2.588,1888,2.774,1889,2.9,1890,2.9,1891,4.51,1892,4.51,1893,5.512,1894,5.512,1895,5.512,1896,5.512,1897,5.512,1898,5.512,1899,5.512,1900,5.512,1901,5.512,1902,5.512,1903,5.512,1904,5.512,1905,5.512,1906,2.919,1907,5.755,1908,2.919,1909,2.919,1910,2.919,1911,2.919,1912,2.919,1913,2.919,1914,2.919,1915,2.919,1916,2.919,1917,2.919,1918,2.919,1919,2.919,1920,2.919,1921,2.919,1922,2.919,1923,2.919,1924,2.919,1925,2.919,1926,2.919,1927,4.51,1928,2.919,1929,2.919,1930,2.919,1931,2.919,1932,2.919,1933,2.919,1934,2.919,1935,2.919,1936,2.919,1937,2.919,1938,2.919,1939,2.919,1940,2.919,1941,2.919,1942,2.919,1943,2.919,1944,2.919,1945,2.919,1946,2.919,1947,1.659,1948,1.724,1949,1.796,1950,2.919,1951,5.15,1952,2.919,1953,2.919,1954,2.919,1955,2.919,1956,2.919,1957,2.919,1958,2.919,1959,2.919,1960,2.919,1961,2.919,1962,2.919,1963,2.919]],["title/controllers/OrthancController.html",[182,1.198,1964,3.439]],["body/controllers/OrthancController.html",[3,0.051,4,0.046,5,0.046,7,0.888,9,0.122,17,0.141,19,0.752,20,1.389,26,2.749,32,0.436,34,1.147,35,0.008,36,0.865,37,0.37,38,0.98,43,1.198,53,0.85,54,3.476,65,0.15,66,0.355,67,2.976,69,0.051,71,0.878,78,0.611,90,0.826,110,0.599,116,1.536,126,0.004,129,2.306,135,0.004,137,1.797,152,2.67,157,2.264,159,2.73,161,2.654,164,2.73,166,2.201,170,2.264,179,2.141,182,1.713,184,0.974,187,1.505,193,1.968,198,0.599,241,3.676,356,2.851,371,1.455,377,2.085,382,1.379,619,2.387,668,1.455,669,1.416,723,3.901,752,3.93,762,1.931,776,1.589,780,1.416,781,3.11,782,1.416,787,1.343,877,2.277,879,1.309,890,4.152,958,1.818,1018,3.443,1021,3.928,1024,2.837,1184,3.264,1185,3.936,1187,2.598,1189,2.837,1195,3.751,1205,2.403,1252,4.84,1253,1.818,1255,5.401,1440,2.562,1441,1.889,1444,1.968,1677,2.837,1888,2.976,1889,3.11,1890,3.11,1907,5.627,1947,1.818,1948,1.889,1949,1.968,1951,4.832,1964,3.659,1965,2.837,1966,4.838,1967,4.838,1968,5.834,1969,5.834,1970,5.834,1971,5.834,1972,5.834,1973,5.834,1974,5.834,1975,4.838,1976,3.199,1977,3.199,1978,3.199,1979,3.199,1980,3.199,1981,3.199,1982,3.199,1983,3.199,1984,3.199,1985,3.199,1986,3.199,1987,4.838,1988,4.838,1989,3.199,1990,3.199,1991,3.199,1992,3.199,1993,3.199,1994,3.199,1995,3.199,1996,3.199,1997,3.199,1998,3.199,1999,3.199,2000,3.199,2001,3.199,2002,3.199,2003,3.199,2004,3.199,2005,3.199,2006,3.199,2007,3.199,2008,3.199,2009,3.199,2010,2.42,2011,3.199,2012,3.199,2013,3.199,2014,4.838,2015,3.199,2016,3.199,2017,7.346,2018,3.199,2019,3.199,2020,3.199,2021,3.199,2022,3.199,2023,3.199,2024,3.199,2025,3.199]],["title/controllers/OrthancDeleteController.html",[182,1.198,2026,3.439]],["body/controllers/OrthancDeleteController.html",[3,0.08,4,0.071,5,0.071,7,0.756,9,0.19,16,1.649,17,0.219,19,1.029,32,0.404,34,1.062,35,0.008,36,0.786,37,0.343,38,0.908,43,1.109,65,0.152,66,0.551,69,0.08,126,0.005,135,0.005,152,2.654,166,2.262,182,2.091,184,1.513,187,1.394,198,0.931,241,3.485,356,2.641,377,2.142,382,2.142,619,3.048,668,2.262,669,2.2,723,3.699,744,3.91,752,3.765,780,2.2,782,2.2,787,2.087,1205,3.289,1252,4.801,1253,2.825,1255,5.325,1886,4.885,1888,4.074,1889,4.258,1890,4.258,1907,5.548,1947,2.825,1948,2.935,1949,3.058,1951,4.581,2026,5.008,2027,4.408,2028,6.622,2029,4.713,2030,7.447,2031,7.447,2032,7.447,2033,4.971,2034,4.971,2035,4.971,2036,4.971,2037,4.971,2038,4.971,2039,4.971,2040,4.971,2041,4.971,2042,4.971,2043,6.603,2044,4.971,2045,4.971]],["title/classes/OrthancEventPayloadDto.html",[9,0.174,625,3.439]],["body/classes/OrthancEventPayloadDto.html",[3,0.083,4,0.074,5,0.074,9,0.261,17,0.229,18,1.356,32,0.467,35,0.008,37,0.397,46,2.075,53,1.298,65,0.136,69,0.083,90,2.222,126,0.006,129,2.699,135,0.006,187,1.612,198,0.972,312,6.18,528,5.417,545,4.682,546,2.856,559,2.615,561,2.952,562,3.191,564,1.686,570,3.34,575,2.621,597,3.698,625,5.156,664,7.127,762,3.68,846,1.396,871,5.156,975,4.026,989,5.452,2046,7.782,2047,4.607,2048,7.611,2049,7.611,2050,7.611,2051,6.046,2052,5.195,2053,5.195,2054,6.818,2055,5.195,2056,5.195,2057,5.195,2058,5.195,2059,5.195,2060,5.195]],["title/controllers/OrthancExportController.html",[182,1.198,2061,3.439]],["body/controllers/OrthancExportController.html",[3,0.062,4,0.055,5,0.055,7,0.586,9,0.147,17,0.17,19,0.862,32,0.439,34,1.154,35,0.008,36,0.855,37,0.373,38,0.987,43,1.205,65,0.14,66,0.427,69,0.062,126,0.005,135,0.005,152,2.708,159,1.801,182,1.873,184,1.171,187,1.515,198,0.72,241,3.787,356,2.87,371,1.751,377,1.658,382,1.658,619,2.66,668,1.751,669,1.703,723,4.019,744,3.274,752,3.945,780,1.703,782,1.703,787,1.616,1205,2.754,1252,4.874,1253,2.187,1255,5.463,1886,5.095,1888,3.411,1889,3.565,1890,3.565,1907,5.692,1947,2.187,1948,2.272,1949,2.367,1951,4.978,2029,3.946,2061,4.193,2062,3.412,2063,5.545,2064,6.5,2065,6.5,2066,6.5,2067,6.5,2068,6.5,2069,6.5,2070,6.5,2071,3.848,2072,5.763,2073,3.848,2074,3.848,2075,3.848,2076,3.848,2077,3.848,2078,3.848,2079,6.5,2080,3.848,2081,3.848,2082,3.848,2083,3.848,2084,3.848,2085,3.848,2086,3.848,2087,3.848,2088,3.848,2089,3.848,2090,3.848,2091,3.848,2092,3.848,2093,3.848,2094,3.848,2095,8.093,2096,5.763,2097,3.848,2098,3.848,2099,3.848,2100,3.848,2101,3.848]],["title/controllers/OrthancImportController.html",[182,1.198,2102,3.439]],["body/controllers/OrthancImportController.html",[3,0.085,4,0.076,5,0.076,7,0.809,9,0.203,17,0.234,19,1.076,32,0.375,34,0.987,35,0.008,36,0.731,37,0.319,38,0.844,43,1.031,65,0.154,66,0.589,69,0.085,126,0.006,135,0.006,150,2.561,152,2.611,182,2.147,184,1.618,187,1.295,198,0.995,241,3.239,356,2.454,371,2.418,377,2.29,382,2.29,619,3.149,668,2.418,669,2.352,723,3.437,744,4.086,752,3.608,780,2.352,782,2.352,787,2.231,1023,3.586,1205,3.437,1252,4.74,1253,3.02,1255,5.211,1886,4.734,1888,4.257,1889,4.449,1890,4.449,1907,5.015,1947,3.02,1948,3.138,1949,3.27,1951,4.257,2029,4.926,2072,4.713,2096,4.713,2102,5.234,2103,4.713,2104,6.921,2105,7.695,2106,7.695,2107,5.315,2108,5.315,2109,5.315,2110,5.315,2111,7.228,2112,5.315,2113,5.315,2114,5.315,2115,6.921]],["title/controllers/OrthancModifyController.html",[182,1.198,2116,3.439]],["body/controllers/OrthancModifyController.html",[3,0.08,4,0.071,5,0.071,7,0.759,9,0.191,17,0.22,19,1.032,32,0.405,34,1.064,35,0.008,36,0.788,37,0.344,38,0.91,43,1.111,65,0.152,66,0.553,69,0.08,126,0.005,135,0.005,152,2.655,170,2.334,182,2.094,184,1.518,187,1.396,198,0.934,241,3.491,318,3.296,319,3.638,356,2.645,371,2.269,377,2.149,382,2.149,619,3.053,668,2.269,669,2.208,723,3.705,744,3.919,752,3.768,780,2.208,782,2.208,787,2.094,1205,3.296,1252,4.803,1253,2.834,1255,5.329,1886,4.892,1907,5.551,1947,2.834,1948,2.945,1949,3.068,1951,4.589,2116,5.019,2117,4.423,2118,6.637,2119,6.637,2120,7.459,2121,7.459,2122,7.459,2123,4.988,2124,4.988,2125,4.988,2126,4.988,2127,4.988,2128,4.988,2129,4.988,2130,4.988,2131,4.988,2132,4.988,2133,7.459,2134,4.988,2135,4.988]],["title/modules/OrthancModule.html",[204,1.444,223,3.237]],["body/modules/OrthancModule.html",[3,0.091,4,0.081,5,0.081,9,0.217,35,0.008,65,0.165,66,0.628,69,0.091,126,0.006,135,0.006,184,2.195,204,2.519,206,2.508,207,2.578,208,2.731,209,2.731,210,2.731,211,3.823,212,2.652,223,6.453,226,5.667,231,3.475,232,2.731,233,2.731,235,3.475,270,4.601,619,3.607,668,2.578,669,2.508,1205,4.448,1885,5.999,1964,5.999,2026,5.999,2061,5.999,2102,5.999,2116,5.999,2136,5.667,2137,5.667,2138,5.667,2139,5.667,2140,5.999,2141,5.999,2142,5.667,2143,5.667,2144,5.667,2145,5.667,2146,5.667,2147,5.667,2148,5.024,2149,4.285,2150,5.667]],["title/injectables/OrthancMonitoringTask.html",[0,0.621,2151,3.237]],["body/injectables/OrthancMonitoringTask.html",[0,0.949,2,1.856,3,0.086,4,0.077,5,0.077,7,0.815,9,0.205,11,6.165,17,0.236,18,1.383,19,1.081,20,1.839,30,1.831,32,0.419,34,0.764,35,0.008,36,0.565,37,0.32,38,0.653,43,0.797,46,2.116,56,1.942,57,1.942,65,0.146,66,0.594,69,0.086,71,1.907,78,1.022,114,3.418,126,0.006,135,0.006,187,1.002,260,4.048,266,3.81,267,3.81,305,4.47,306,5.258,401,3.222,619,3.553,668,2.435,669,2.369,743,5.646,816,6.847,817,7.248,881,4.277,1035,4.347,1201,4.47,1205,3.453,2151,4.948,2152,7.248,2153,4.746,2154,6.165,2155,8.174,2156,6.953,2157,7.722,2158,6.953,2159,6.953,2160,7.722,2161,8.174,2162,6.953,2163,6.953,2164,5.353,2165,4.746,2166,4.746,2167,7.722,2168,5.353,2169,5.353,2170,5.353,2171,5.353,2172,5.353,2173,5.353,2174,5.353,2175,5.353]],["title/controllers/OrthancQueryController.html",[182,1.198,2141,3.439]],["body/controllers/OrthancQueryController.html",[3,0.067,4,0.059,5,0.059,7,0.631,9,0.159,15,1.375,17,0.183,19,0.909,20,1.613,32,0.399,34,1.049,35,0.008,36,0.777,37,0.339,38,0.897,43,1.096,53,0.987,65,0.153,66,0.46,69,0.067,71,1.604,78,1.405,110,1.094,126,0.005,129,2.609,135,0.005,152,2.569,161,1.886,164,3.63,182,1.937,184,1.262,187,1.377,193,2.551,198,0.776,241,3.17,350,2.904,356,2.402,371,1.886,377,1.787,382,1.787,619,2.772,668,1.886,669,1.835,675,2.125,696,5.185,723,3.364,744,3.453,752,3.563,776,2.059,780,1.835,782,1.835,787,1.741,1023,3.945,1095,6.006,1205,2.904,1252,4.697,1253,2.356,1255,5.14,1440,2.196,1441,2.448,1886,4.772,1888,3.597,1889,3.759,1890,3.759,1907,5.355,1947,2.356,1948,2.448,1949,2.551,1951,4.167,2029,4.162,2141,4.422,2176,3.367,2177,5.847,2178,6.774,2179,6.774,2180,6.774,2181,4.146,2182,4.146,2183,4.146,2184,4.146,2185,4.146,2186,4.146,2187,4.146,2188,6.774,2189,4.963,2190,4.146,2191,4.146,2192,4.146,2193,4.146,2194,4.146,2195,4.146,2196,3.945,2197,3.945,2198,4.146,2199,2.951,2200,4.146,2201,2.951,2202,4.146,2203,7.357,2204,4.146,2205,4.146,2206,4.146,2207,3.676,2208,5.847,2209,3.136,2210,4.146,2211,5.847,2212,4.146,2213,4.146,2214,4.146,2215,4.146,2216,4.146,2217,4.146,2218,4.146,2219,4.146,2220,4.146,2221,5.847,2222,4.146,2223,4.146,2224,4.146,2225,4.146,2226,4.146,2227,4.146,2228,4.146,2229,4.146]],["title/controllers/OrthancReadAllController.html",[182,1.198,2140,3.439]],["body/controllers/OrthancReadAllController.html",[3,0.069,4,0.062,5,0.062,7,0.656,9,0.165,16,1.431,17,0.19,19,0.934,32,0.427,34,1.123,35,0.008,36,0.831,37,0.363,38,0.96,43,1.172,65,0.145,66,0.478,69,0.069,126,0.005,135,0.005,152,2.676,179,1.909,182,1.971,184,1.313,187,1.473,198,0.807,241,3.684,356,2.791,371,1.962,377,1.859,382,1.859,494,3.081,619,2.832,668,1.962,669,1.909,723,3.909,744,3.55,752,3.884,779,3.07,780,1.909,782,1.909,787,1.811,1023,4.056,1205,2.986,1252,4.849,1253,2.451,1255,5.415,1886,5.014,1888,3.698,1889,3.865,1890,3.865,1907,5.642,1947,2.451,1948,2.547,1949,2.653,1951,4.842,2029,4.279,2140,4.546,2149,6.164,2230,3.824,2231,6.92,2232,6.012,2233,6.92,2234,6.92,2235,6.92,2236,4.313,2237,4.313,2238,4.313,2239,4.313,2240,4.313,2241,4.313,2242,4.313,2243,4.313,2244,4.313,2245,4.313,2246,4.313,2247,4.313,2248,4.313,2249,4.313,2250,4.313,2251,4.313,2252,6.979,2253,4.313,2254,4.313,2255,4.313,2256,4.313,2257,4.313]],["title/controllers/ProcessingController.html",[182,1.198,2258,3.439]],["body/controllers/ProcessingController.html",[3,0.052,4,0.046,5,0.046,7,1.401,9,0.124,10,2.769,15,1.071,16,1.616,17,0.142,19,0.757,20,2.075,21,3.959,26,3.335,29,3.288,30,0.851,32,0.38,34,0.932,35,0.008,36,0.778,37,0.378,38,0.797,40,2.581,43,1.14,44,2.398,46,1.786,48,3.282,52,1.987,53,1.116,58,4.851,65,0.14,66,0.358,67,4.314,68,2.077,69,0.052,71,2.022,78,1.408,79,3.61,81,2.864,90,0.834,102,2.443,106,2.623,110,1.223,116,1.026,118,3.288,126,0.006,129,1.728,130,2.623,131,2.864,132,2.864,133,2.864,135,0.004,137,1.2,141,1.907,152,2.58,168,2.348,179,1.43,182,1.545,184,0.983,187,1.313,198,0.605,305,3.133,319,2.671,328,3.133,336,4.318,338,4.351,342,4.409,350,2.42,356,2.487,371,2.217,375,1.987,377,1.392,381,4.735,382,1.392,401,1.228,402,4.688,404,3.844,417,2.1,418,1.69,494,1.656,618,3.61,672,2.077,712,4.438,742,1.836,752,3.636,753,4.141,762,2.799,773,1.987,776,1.604,780,1.43,781,3.133,782,1.43,812,2.671,906,3.468,1056,1.43,1197,2.864,1206,4.509,1440,1.711,1441,1.907,1444,1.987,1448,2.769,1668,3.959,2010,2.443,2252,2.864,2258,3.685,2259,2.864,2260,3.685,2261,3.685,2262,4.942,2263,4.438,2264,3.23,2265,5.315,2266,3.468,2267,3.685,2268,3.23,2269,3.23,2270,2.443,2271,2.443,2272,3.23,2273,5.576,2274,2.443,2275,3.23,2276,3.23,2277,2.443,2278,2.443,2279,2.443,2280,3.23,2281,2.864,2282,2.443,2283,3.23,2284,3.23,2285,2.299,2286,3.685,2287,2.864,2288,3.23,2289,3.23,2290,2.443,2291,3.23,2292,4.438,2293,2.443,2294,4.438,2295,3.23,2296,3.23,2297,2.443,2298,2.443,2299,2.443,2300,3.23,2301,3.23,2302,3.685,2303,3.23,2304,3.23,2305,3.23,2306,2.443,2307,2.443,2308,2.443,2309,3.23,2310,2.443,2311,3.23,2312,3.23]],["title/classes/ProcessingFile.html",[9,0.174,2313,3.439]],["body/classes/ProcessingFile.html",[3,0.096,4,0.086,5,0.086,9,0.229,17,0.264,18,1.484,19,1.16,30,1.576,32,0.475,34,0.854,35,0.008,36,0.632,37,0.429,38,0.73,43,1.112,53,1.381,69,0.096,110,1.397,126,0.006,129,3.108,135,0.006,195,4.58,401,3.399,846,1.608,2313,5.644,2314,5.305,2315,8.517,2316,8.517,2317,7.463,2318,7.463,2319,5.983,2320,5.983,2321,5.983,2322,7.463,2323,7.463]],["title/classes/ProcessingJobDto.html",[9,0.174,2265,3.068]],["body/classes/ProcessingJobDto.html",[3,0.094,4,0.084,5,0.084,9,0.308,17,0.259,18,1.466,32,0.4,35,0.008,37,0.34,53,1.075,56,2.129,65,0.144,69,0.118,90,2.249,116,2.56,126,0.006,135,0.006,149,1.824,187,1.38,198,1.098,517,5.737,559,2.69,560,4.353,561,3.334,562,3.065,564,1.904,673,6.395,674,4.973,675,3.007,714,6.546,716,4.436,717,4.436,718,4.764,721,4.764,762,3.55,846,1.577,1165,5.986,2265,4.973,2324,6.096,2325,4.764,2326,5.247,2327,5.866,2328,5.866,2329,6.096,2330,5.866,2331,5.866,2332,4.189,2333,5.201,2334,5.201]],["title/modules/ProcessingModule.html",[204,1.444,224,3.237]],["body/modules/ProcessingModule.html",[3,0.105,4,0.094,5,0.094,9,0.25,35,0.008,65,0.151,66,0.726,69,0.105,126,0.006,135,0.006,184,2.4,204,2.688,206,2.897,207,2.978,208,3.154,209,3.154,210,3.154,211,4.078,212,3.063,224,6.5,231,3.8,232,3.154,233,3.154,235,3.154,618,5.618,672,4.208,1206,4.208,2258,6.4,2335,6.545,2336,6.545,2337,6.545,2338,6.545]],["title/injectables/ProcessingQueueService.html",[0,0.621,618,2.797]],["body/injectables/ProcessingQueueService.html",[0,0.745,2,1.306,3,0.061,4,0.054,5,0.054,7,0.573,9,0.245,10,4.248,17,0.166,18,1.086,19,0.848,20,2.165,21,4.332,24,5.012,25,5.012,26,3.649,29,3.683,30,0.992,32,0.447,34,1.066,35,0.008,36,0.789,37,0.359,38,0.911,42,2.798,43,1.161,44,2.547,46,2.554,48,3.928,53,1.136,54,3.45,56,1.367,57,1.367,58,2.224,65,0.133,66,0.418,67,4.598,68,2.421,69,0.061,71,2.138,78,1.628,79,4.598,84,4.84,90,0.972,91,4.84,92,3.339,93,3.339,94,3.339,95,3.339,96,3.339,97,3.339,98,3.339,99,3.339,100,3.339,101,3.339,102,4.128,103,3.339,105,3.339,106,3.058,107,3.339,108,3.339,109,3.339,110,1.459,111,4.84,112,3.339,118,4.751,119,3.339,124,3.339,126,0.004,127,3.339,130,5.214,135,0.004,247,4.128,248,1.994,293,2.541,295,2.68,296,2.541,305,3.51,418,1.306,514,2.421,601,3.51,618,3.358,712,6.347,787,1.581,1056,1.667,1206,4.128,1396,2.68,1561,4.433,1807,3.339,1808,3.339,2265,5.556,2281,4.84,2287,3.339,2324,6.347,2339,3.339,2340,6.421,2341,5.459,2342,5.459,2343,3.766,2344,3.766,2345,3.766,2346,3.766,2347,3.766,2348,3.766,2349,5.459,2350,3.766,2351,3.766,2352,3.683,2353,3.766,2354,3.766,2355,2.848,2356,2.848,2357,3.766,2358,3.766,2359,3.766,2360,3.766,2361,3.766,2362,5.459,2363,3.766]],["title/classes/QueryAnswer.html",[9,0.174,2364,3.237]],["body/classes/QueryAnswer.html",[3,0.053,4,0.047,5,0.047,8,2.94,9,0.127,17,0.146,18,0.988,30,1.309,32,0.491,34,0.473,35,0.008,36,0.35,37,0.387,38,0.404,46,2.266,53,1.388,56,3.047,57,3.001,65,0.059,69,0.053,114,4.107,126,0.004,135,0.004,241,3.87,645,4.689,675,1.7,846,0.891,1033,4.508,1059,4.407,2364,3.537,2365,6.877,2366,2.94,2367,6.141,2368,6.594,2369,6.594,2370,6.594,2371,4.614,2372,4.614,2373,6.141,2374,4.841,2375,4.841,2376,4.841,2377,4.841,2378,4.841,2379,4.841,2380,4.841,2381,4.841,2382,4.841,2383,4.614,2384,4.614,2385,3.316,2386,5.839,2387,4.97,2388,3.316,2389,3.316,2390,3.316,2391,3.316,2392,3.316,2393,3.316,2394,3.316,2395,3.316,2396,3.316,2397,3.316,2398,3.316,2399,3.316,2400,3.316,2401,3.316,2402,3.316,2403,3.316,2404,3.316,2405,3.316,2406,3.316,2407,4.97,2408,4.97,2409,4.97,2410,4.97,2411,4.97,2412,4.97,2413,4.97,2414,4.97,2415,4.97]],["title/guards/QueryGuard.html",[136,1.222,161,2.069]],["body/guards/QueryGuard.html",[0,1.19,3,0.06,4,0.054,5,0.054,7,0.57,9,0.33,15,1.804,16,1.243,17,0.165,19,0.845,32,0.203,34,0.535,35,0.008,36,0.396,37,0.173,38,0.457,43,0.558,65,0.097,66,0.416,69,0.14,78,1.762,110,1.614,126,0.004,135,0.004,136,2.343,137,1.392,138,1.573,139,1.984,140,4.469,141,2.76,142,1.615,143,4.779,144,3.631,145,3.569,146,3.542,148,1.496,149,2.711,150,1.806,151,3.53,152,2.517,153,3.717,154,4.727,155,2.054,156,1.806,157,1.754,158,2.054,159,1.754,160,2.054,161,2.474,162,2.054,163,1.861,164,1.754,165,2.054,166,1.705,167,2.054,168,1.806,169,1.861,170,1.754,171,2.054,172,1.861,173,1.861,174,2.054,175,1.36,176,1.806,177,2.054,178,1.861,179,1.659,180,2.054,2416,3.747]],["title/classes/QueryParsedAnswerDto.html",[9,0.174,2189,3.068]],["body/classes/QueryParsedAnswerDto.html",[3,0.083,4,0.074,5,0.074,9,0.309,15,2.522,17,0.229,18,1.354,32,0.369,35,0.008,37,0.314,53,1.351,54,2.295,65,0.136,69,0.122,126,0.006,135,0.006,187,1.275,198,0.971,546,1.72,559,2.796,561,2.947,562,3.54,564,1.683,575,2.833,645,4.49,675,2.658,846,1.394,1078,3.87,2189,4.595,2196,5.13,2197,5.13,2199,5.412,2201,5.747,2209,3.922,2326,4.847,2332,3.87,2371,2.947,2372,2.947,2383,2.947,2384,2.947,2417,5.751,2418,3.922,2419,5.186,2420,5.186,2421,5.186,2422,5.186,2423,3.499,2424,4.967,2425,3.334,2426,3.334,2427,3.334,2428,3.19,2429,3.334,2430,3.19,2431,3.334,2432,3.19,2433,3.334,2434,3.334,2435,3.334,2436,3.334,2437,3.499,2438,3.499,2439,3.334,2440,4.211]],["title/injectables/QueryQueueTask.html",[0,0.621,2441,3.237]],["body/injectables/QueryQueueTask.html",[0,0.946,2,1.846,3,0.086,4,0.076,5,0.076,7,0.81,9,0.204,10,3.937,17,0.235,19,1.077,20,1.834,30,1.825,32,0.376,34,0.76,35,0.008,36,0.562,37,0.245,38,0.649,43,0.793,65,0.157,66,0.591,69,0.086,71,2.238,78,1.615,102,5.24,126,0.006,135,0.006,187,0.997,245,2.357,260,4.027,401,2.635,418,2.402,558,2.357,815,5.018,835,3.423,881,4.262,1266,3.937,1539,5.825,1827,4.721,2154,6.143,2165,4.721,2166,4.721,2441,4.931,2442,6.829,2443,4.721,2444,6.929,2445,6.929,2446,8.157,2447,5.325,2448,7.702,2449,5.018,2450,5.325,2451,6.929,2452,6.929,2453,5.325,2454,4.721,2455,4.027,2456,4.324,2457,5.626,2458,5.325,2459,4.324,2460,5.325,2461,5.325,2462,6.143,2463,5.325,2464,6.143,2465,5.325,2466,7.702,2467,5.325,2468,5.325,2469,5.325,2470,5.325,2471,7.702,2472,5.325,2473,5.325,2474,5.325]],["title/classes/QuerySeriesAnswer.html",[9,0.174,2475,3.693]],["body/classes/QuerySeriesAnswer.html",[3,0.044,4,0.039,5,0.039,9,0.104,12,5.907,17,0.12,18,0.848,30,1.123,32,0.498,34,0.387,35,0.008,36,0.287,37,0.395,38,0.331,46,2.589,53,1.379,56,3.195,57,3.177,65,0.076,69,0.044,114,4.2,126,0.003,135,0.003,241,3.218,645,2.517,675,1.392,846,0.73,917,1.887,1033,3.224,1078,4.352,1325,1.746,2364,6.328,2365,6.305,2367,5.201,2368,5.261,2369,5.584,2370,5.584,2371,3.908,2372,3.908,2373,5.201,2374,3.462,2375,3.462,2376,3.462,2377,3.462,2378,3.462,2379,3.462,2380,3.462,2381,3.462,2382,3.462,2383,3.908,2384,3.908,2386,3.224,2424,4.712,2428,4.712,2430,4.712,2432,4.712,2475,3.462,2476,6.77,2477,2.408,2478,7.659,2479,5.263,2480,5.263,2481,5.263,2482,5.263,2483,5.263,2484,4.667,2485,2.408,2486,4.263,2487,2.715,2488,2.715,2489,2.715,2490,2.715,2491,2.715,2492,2.715,2493,2.715,2494,2.715,2495,2.715,2496,2.715,2497,2.715,2498,2.408,2499,2.408,2500,2.408,2501,2.408,2502,2.408,2503,2.408,2504,2.408,2505,2.408,2506,2.408,2507,2.408,2508,2.408,2509,2.408,2510,2.408,2511,2.408,2512,2.408,2513,2.408,2514,2.408,2515,2.408,2516,2.408,2517,2.408,2518,2.408,2519,2.715,2520,2.715,2521,3.78,2522,4.263,2523,4.263,2524,4.263,2525,4.263,2526,4.263]],["title/classes/QuerySeriesDto.html",[9,0.174,2196,3.068]],["body/classes/QuerySeriesDto.html",[3,0.077,4,0.068,5,0.068,9,0.299,15,1.586,17,0.211,18,1.283,32,0.456,35,0.008,37,0.387,53,1.368,65,0.13,69,0.117,126,0.005,135,0.005,187,1.574,198,0.895,546,2.79,559,2.769,561,2.717,562,3.502,564,1.552,575,2.803,645,2.823,675,2.45,846,1.285,1078,4.442,2189,3.226,2196,4.926,2197,4.353,2199,6.119,2201,5.197,2209,3.616,2326,3.403,2332,3.666,2371,2.717,2372,2.717,2383,2.717,2384,2.717,2417,6.501,2418,3.616,2423,3.226,2424,5.174,2425,3.074,2426,4.694,2427,3.074,2428,4.492,2429,3.074,2430,4.492,2431,3.074,2432,4.492,2433,3.074,2434,3.074,2435,3.074,2436,3.074,2437,3.226,2438,3.226,2439,3.074,2440,3.882,2527,3.616,2528,4.781,2529,4.239,2530,4.781,2531,4.239,2532,4.781,2533,4.239,2534,4.781,2535,4.239,2536,4.781,2537,4.239,2538,4.781]],["title/classes/QueryStudyAnswer.html",[9,0.174,2539,3.693]],["body/classes/QueryStudyAnswer.html",[3,0.048,4,0.043,5,0.043,9,0.114,12,5.996,17,0.132,18,0.914,30,1.211,32,0.498,34,0.427,35,0.008,36,0.316,37,0.396,38,0.365,46,2.636,53,1.373,56,3.188,57,3.167,65,0.082,69,0.048,114,4.198,126,0.004,135,0.004,241,2.94,645,2.714,675,1.533,846,0.804,917,2.035,1033,3.476,1078,4.482,1325,1.923,2364,6.412,2365,6.09,2367,5.412,2368,5.504,2369,5.811,2370,5.811,2371,4.066,2372,4.066,2373,5.412,2374,3.733,2375,3.733,2376,3.733,2377,3.733,2378,3.733,2379,3.733,2380,3.733,2381,3.733,2382,3.733,2383,4.066,2384,4.066,2386,3.476,2476,6.539,2484,4.963,2485,2.653,2498,2.653,2499,2.653,2500,2.653,2501,2.653,2502,2.653,2503,2.653,2504,2.653,2505,2.653,2506,2.653,2507,2.653,2508,2.653,2509,2.653,2510,2.653,2511,2.653,2512,2.653,2513,2.653,2514,2.653,2515,2.653,2516,2.653,2517,2.653,2518,2.653,2521,4.076,2539,3.733,2540,2.653,2541,7.888,2542,7.888,2543,7.888,2544,5.598,2545,5.598,2546,5.598,2547,4.597,2548,2.992,2549,2.992,2550,2.992,2551,2.992,2552,2.992,2553,2.992,2554,2.992,2555,2.992,2556,4.597,2557,4.597,2558,4.597]],["title/classes/QueryStudyDto.html",[9,0.174,2197,3.068]],["body/classes/QueryStudyDto.html",[3,0.075,4,0.067,5,0.067,9,0.296,15,1.554,17,0.206,18,1.265,32,0.464,35,0.008,37,0.394,53,1.369,65,0.129,69,0.116,126,0.005,135,0.005,187,1.601,198,0.877,546,2.836,559,2.762,561,2.662,562,3.492,564,1.52,575,2.795,645,2.766,675,2.401,846,1.259,1078,4.405,2189,3.16,2196,4.293,2197,4.875,2199,6.193,2201,5.143,2209,3.542,2326,3.334,2332,3.616,2371,4.106,2372,4.106,2383,4.106,2384,4.106,2417,6.58,2418,3.542,2423,3.16,2424,5.142,2425,3.011,2426,3.011,2427,3.011,2428,2.881,2429,3.011,2430,2.881,2431,3.011,2432,2.881,2433,3.011,2434,3.011,2435,3.011,2436,3.011,2437,3.16,2438,4.875,2439,3.011,2440,3.803,2527,3.542,2559,4.153,2560,4.684,2561,4.684,2562,4.153,2563,4.684,2564,4.153,2565,4.684,2566,4.153,2567,4.684,2568,4.153,2569,4.684,2570,4.153,2571,4.684]],["title/modules/QueueModule.html",[204,1.444,225,3.237]],["body/modules/QueueModule.html",[3,0.095,4,0.085,5,0.085,9,0.227,35,0.008,65,0.161,66,0.658,69,0.095,126,0.006,135,0.006,184,2.26,204,2.574,206,2.627,207,2.7,208,2.86,209,2.86,210,2.86,211,3.905,212,2.778,225,6.614,231,3.578,232,2.86,233,2.86,235,2.86,2148,5.263,2449,5.487,2455,4.489,2572,5.263,2573,5.263,2574,6.017,2575,6.017,2576,5.936,2577,6.129,2578,6.129,2579,6.129,2580,7.426,2581,5.936,2582,7.426,2583,5.936,2584,7.426,2585,5.263,2586,5.263]],["title/controllers/QueuesAnonController.html",[182,1.198,2577,3.439]],["body/controllers/QueuesAnonController.html",[3,0.049,4,0.044,5,0.044,7,1.394,9,0.118,10,4.112,14,4.165,15,1.021,16,1.558,17,0.136,19,0.73,20,2.056,26,3.237,32,0.372,34,0.909,35,0.008,36,0.764,37,0.374,38,0.777,40,2.488,43,1.023,44,2.368,46,1.734,48,3.632,52,1.893,53,1.097,58,5.27,65,0.134,66,0.341,67,3.504,69,0.049,71,1.985,78,1.438,79,3.922,90,0.794,110,1.193,114,1.362,116,0.977,118,3.169,126,0.005,135,0.004,137,1.143,141,2.004,152,2.576,156,1.483,157,2.666,168,2.745,182,1.5,184,0.937,187,1.285,198,0.576,319,2.575,336,4.447,338,4.297,342,4.301,350,2.333,356,2.435,371,2.137,375,1.893,377,1.326,381,4.69,382,1.326,402,4.641,404,3.763,417,2.747,418,2.21,435,3.364,494,2.408,514,1.979,742,1.749,752,3.591,753,4.054,762,2.74,773,1.893,776,1.529,780,1.362,781,3.02,782,1.362,787,1.292,812,2.575,1056,1.362,1088,2.328,1440,1.63,1441,1.817,1444,2.89,1448,1.749,1668,3.844,2260,3.553,2261,3.553,2262,4.821,2263,4.308,2266,3.343,2267,3.553,2270,2.328,2271,2.328,2273,5.473,2274,2.328,2277,2.328,2278,2.328,2279,2.328,2282,2.328,2285,2.191,2286,3.553,2290,2.328,2292,4.821,2293,2.328,2294,4.308,2297,2.328,2298,2.328,2299,2.328,2302,3.553,2306,3.553,2307,3.553,2308,3.553,2310,2.328,2352,3.169,2574,3.844,2577,3.553,2585,2.729,2587,5.15,2588,2.729,2589,3.078,2590,5.697,2591,4.698,2592,3.078,2593,5.15,2594,3.078,2595,3.078,2596,3.078,2597,2.499,2598,3.078,2599,3.078,2600,3.078,2601,3.078,2602,3.078,2603,3.078,2604,3.078,2605,3.078,2606,3.078,2607,3.078,2608,3.078,2609,3.814,2610,3.078,2611,3.078,2612,4.698,2613,3.078,2614,2.499,2615,2.499,2616,3.078,2617,3.078,2618,3.078,2619,3.078,2620,2.499,2621,3.078,2622,2.499,2623,3.078,2624,2.499,2625,3.078,2626,2.499,2627,3.078,2628,2.499,2629,3.078,2630,3.078,2631,3.078]],["title/classes/QueuesAnonDto.html",[9,0.174,2632,3.439]],["body/classes/QueuesAnonDto.html",[3,0.087,4,0.077,5,0.077,9,0.296,17,0.238,18,1.389,32,0.472,35,0.008,37,0.401,53,1.351,65,0.125,69,0.087,90,1.391,126,0.006,135,0.006,187,1.628,198,1.009,546,2.885,559,2.674,562,3.367,564,1.75,575,2.695,593,3.184,846,1.449,1088,5.86,1681,4.491,2332,3.969,2587,6.302,2593,3.837,2615,4.378,2620,6.656,2622,6.292,2624,6.292,2626,6.292,2628,6.292,2632,6.199,2633,4.378,2634,5.392,2635,5.392,2636,5.392,2637,5.392,2638,5.392,2639,5.392,2640,5.392,2641,5.392,2642,5.392,2643,5.392,2644,5.392,2645,5.392,2646,4.781,2647,4.781,2648,4.781,2649,4.781,2650,4.781]],["title/injectables/QueuesAnonService.html",[0,0.621,2574,3.068]],["body/injectables/QueuesAnonService.html",[0,0.839,1,6.113,2,1.544,3,0.072,4,0.064,5,0.064,7,0.678,9,0.17,10,4.679,12,5.959,17,0.196,18,1.222,19,0.955,20,2.21,21,4.147,22,4.649,23,5.323,24,5.01,25,5.01,26,3.493,27,4.649,28,4.649,29,4.147,30,1.173,32,0.484,34,1.204,35,0.008,36,0.891,37,0.396,38,1.029,39,3.369,40,4.019,42,3.15,43,1.3,44,2.547,45,3.369,46,2.31,48,2.877,52,2.74,53,1.106,54,3.735,56,2.554,57,2.554,58,3.63,59,3.369,61,3.369,63,3.369,65,0.135,66,0.494,68,2.864,69,0.072,78,0.851,126,0.005,135,0.005,247,4.217,248,2.359,293,3.005,295,3.17,296,3.005,418,1.544,601,3.952,672,2.864,917,2.721,1396,4.375,2355,3.369,2356,3.369,2574,4.147,2587,4.375,2651,3.949,2652,4.992,2653,5.451,2654,4.454,2655,3.617,2656,3.617,2657,3.617,2658,3.617,2659,3.617,2660,3.617,2661,3.617,2662,3.617,2663,3.617,2664,3.617,2665,4.454,2666,4.454,2667,3.617,2668,3.617,2669,3.617,2670,3.617,2671,4.454]],["title/classes/QueuesAnonsDto.html",[9,0.174,2593,3.237]],["body/classes/QueuesAnonsDto.html",[3,0.097,4,0.086,5,0.086,9,0.312,17,0.266,18,1.492,32,0.327,35,0.008,37,0.278,53,1.305,65,0.134,69,0.097,90,1.936,126,0.006,135,0.006,187,1.129,198,1.129,546,2.001,559,2.735,562,3.453,564,1.957,575,2.763,593,3.561,846,1.621,1088,4.561,1681,4.822,2332,4.262,2587,5.338,2593,5.338,2615,6.629,2620,6.091,2622,4.898,2624,4.898,2626,4.898,2628,4.898,2632,6.459,2633,4.898,2646,5.348,2647,5.348,2648,5.348,2649,5.348,2650,5.348,2672,6.032,2673,6.032]],["title/controllers/QueuesDeleteController.html",[182,1.198,2578,3.439]],["body/controllers/QueuesDeleteController.html",[3,0.05,4,0.045,5,0.045,7,1.397,9,0.12,10,4.14,15,1.039,16,2.134,17,0.138,19,0.74,20,2.063,26,3.273,32,0.375,34,0.918,35,0.008,36,0.769,37,0.375,38,0.784,40,2.521,43,1.031,44,2.379,46,1.753,48,3.652,52,1.927,53,1.104,58,5.283,65,0.135,66,0.347,67,3.543,69,0.05,71,1.999,78,1.446,79,3.957,90,0.808,110,1.204,114,1.386,116,0.995,118,3.212,126,0.005,135,0.004,137,1.163,141,2.019,152,2.583,166,2.62,168,2.775,182,1.517,184,0.953,187,1.295,198,0.586,319,2.609,336,4.467,338,4.317,342,4.34,350,2.365,356,2.454,371,2.166,375,1.927,377,1.35,381,4.707,382,1.35,402,4.659,404,3.792,417,2.772,418,2.231,435,3.4,494,2.44,514,2.014,742,1.78,752,3.608,753,4.086,762,2.762,773,1.927,776,1.556,780,1.386,781,3.061,782,1.386,787,1.315,812,2.609,1056,1.386,1105,3.866,1440,1.659,1441,1.85,1444,2.929,1448,1.78,1668,3.885,2043,4.221,2260,3.6,2261,3.6,2262,4.865,2263,4.355,2266,3.389,2267,3.6,2270,2.369,2271,2.369,2273,5.51,2274,2.369,2277,2.369,2278,2.369,2279,2.369,2282,2.369,2285,2.229,2286,3.6,2290,2.369,2292,4.865,2293,2.369,2294,4.355,2297,2.369,2298,2.369,2299,2.369,2302,4.355,2306,3.6,2307,3.6,2308,3.6,2310,2.369,2352,3.212,2575,3.885,2578,3.6,2586,2.777,2597,2.544,2609,3.866,2614,2.544,2674,5.51,2675,2.777,2676,3.132,2677,5.759,2678,4.761,2679,3.132,2680,5.51,2681,3.132,2682,3.132,2683,3.132,2684,3.132,2685,3.132,2686,3.132,2687,3.132,2688,3.132,2689,3.132,2690,3.132,2691,3.132,2692,3.132,2693,3.132,2694,3.132,2695,3.132,2696,3.132,2697,3.132,2698,2.777,2699,3.132,2700,3.132,2701,3.132,2702,3.132,2703,3.132]],["title/classes/QueuesDeleteDto.html",[9,0.174,2680,3.439]],["body/classes/QueuesDeleteDto.html",[3,0.108,4,0.096,5,0.096,9,0.307,17,0.297,18,1.595,32,0.365,35,0.008,37,0.31,53,1.169,65,0.143,69,0.108,126,0.007,135,0.007,187,1.261,198,1.261,546,2.234,559,2.391,564,2.186,575,2.05,846,1.81,1681,5.158,2674,6.067,2680,6.067,2698,7.597,2704,5.973,2705,6.736,2706,6.736,2707,6.736,2708,6.736]],["title/injectables/QueuesDeleteService.html",[0,0.621,2575,3.068]],["body/injectables/QueuesDeleteService.html",[0,0.839,1,6.113,2,1.544,3,0.072,4,0.064,5,0.064,7,0.678,9,0.17,10,4.679,12,5.959,16,2.039,17,0.196,18,1.222,19,0.955,20,2.21,21,4.147,22,4.649,23,5.323,24,5.01,25,5.01,26,3.493,27,4.649,28,4.649,29,4.147,30,1.173,32,0.484,34,1.204,35,0.008,36,0.891,37,0.396,38,1.029,39,3.369,40,4.019,42,3.15,43,1.3,44,2.547,45,3.369,46,2.31,48,2.877,52,2.74,53,1.106,54,3.735,56,2.554,57,2.554,58,3.63,59,3.369,61,3.369,63,3.369,65,0.135,66,0.494,68,2.864,69,0.072,78,0.851,126,0.005,135,0.005,247,4.217,248,2.359,293,3.005,295,3.17,296,3.005,418,1.544,601,3.952,672,2.864,917,2.721,1396,4.375,2355,3.369,2356,3.369,2575,4.147,2652,4.992,2655,3.617,2656,3.617,2657,3.617,2658,3.617,2659,3.617,2660,3.617,2661,3.617,2662,3.617,2663,3.617,2664,3.617,2667,3.617,2668,3.617,2669,3.617,2670,3.617,2674,4.649,2709,3.949,2710,4.454,2711,4.454,2712,4.454,2713,4.454]],["title/controllers/QueuesQueryController.html",[182,1.198,2579,3.439]],["body/controllers/QueuesQueryController.html",[3,0.049,4,0.043,5,0.043,7,1.392,9,0.116,10,4.086,15,1.871,16,1.539,17,0.133,19,0.721,20,2.05,26,3.205,32,0.37,34,0.902,35,0.008,36,0.759,37,0.372,38,0.771,40,2.457,43,1.015,44,2.358,46,1.716,48,3.704,52,1.863,53,1.091,58,5.306,65,0.133,66,0.336,67,3.469,69,0.049,71,1.972,78,1.475,79,3.888,90,0.781,110,1.183,114,2.053,116,0.962,118,3.13,126,0.005,135,0.004,137,1.125,141,1.989,152,2.569,161,2.566,168,2.718,182,1.485,184,0.922,187,1.276,198,0.567,319,2.543,336,4.428,338,4.278,342,4.265,350,2.304,356,2.417,371,2.111,375,1.863,377,1.305,381,4.675,382,1.305,402,4.625,404,3.735,417,2.937,418,2.363,435,3.33,494,2.378,514,1.947,695,3.33,742,1.721,752,3.575,753,4.024,762,2.72,773,1.863,776,1.504,780,1.34,781,2.983,782,1.34,787,1.271,812,2.543,958,2.636,975,2.739,1056,1.34,1063,2.043,1069,2.043,1440,1.604,1441,1.788,1444,2.854,1448,1.721,1668,3.805,2176,2.459,2260,3.509,2261,3.509,2262,4.78,2263,4.265,2266,3.302,2267,3.509,2270,2.29,2271,2.29,2273,5.438,2274,2.29,2277,2.29,2278,2.29,2279,2.29,2282,2.29,2285,2.155,2286,3.509,2290,2.29,2292,4.78,2293,2.29,2294,4.265,2297,2.29,2298,2.29,2299,2.29,2302,4.265,2306,3.509,2307,3.509,2308,3.509,2310,2.29,2352,3.13,2449,3.469,2455,2.29,2579,3.509,2597,2.459,2609,3.767,2614,2.459,2714,4.851,2715,3.028,2716,5.64,2717,4.639,2718,3.028,2719,4.851,2720,3.028,2721,3.028,2722,3.028,2723,3.028,2724,3.028,2725,3.028,2726,3.028,2727,3.028,2728,3.13,2729,3.13,2730,3.028,2731,3.028,2732,3.028,2733,3.028,2734,3.028,2735,3.028,2736,3.028,2737,3.028,2738,4.639,2739,3.028,2740,3.028,2741,3.028,2742,3.028,2743,3.028,2744,3.028,2745,3.028,2746,3.028,2747,3.028,2748,4.639,2749,3.028,2750,3.028,2751,3.028]],["title/classes/QueuesQueryDto.html",[9,0.174,2719,3.068]],["body/classes/QueuesQueryDto.html",[3,0.075,4,0.066,5,0.066,9,0.295,17,0.205,18,1.257,32,0.343,35,0.008,37,0.291,53,1.344,54,2.798,56,2.294,57,2.294,65,0.113,69,0.116,90,1.993,116,2.008,126,0.005,135,0.005,187,1.183,198,0.869,546,2.097,559,2.779,562,3.521,564,1.506,575,2.829,593,3.733,689,6.179,695,4.246,762,3.082,846,1.247,1063,4.851,1078,4.388,1681,4.623,2332,4.086,2371,3.593,2372,3.593,2383,3.593,2384,3.593,2423,4.265,2424,5.341,2425,4.065,2426,4.065,2427,4.065,2428,3.889,2429,4.065,2430,3.889,2431,4.065,2432,3.889,2433,4.065,2434,4.065,2435,4.065,2436,4.065,2437,4.265,2438,4.265,2439,4.065,2714,4.851,2719,4.265,2728,4.851,2729,4.851,2752,3.509,2753,6.322,2754,4.64,2755,4.64]],["title/classes/QueuesQuerySeriesDto.html",[9,0.174,2729,3.068]],["body/classes/QueuesQuerySeriesDto.html",[3,0.07,4,0.062,5,0.062,9,0.287,17,0.191,18,1.199,32,0.454,35,0.008,37,0.386,53,1.365,65,0.107,69,0.111,90,1.556,116,1.915,126,0.005,135,0.005,187,1.567,198,0.811,546,2.777,559,2.757,562,3.49,564,1.406,575,2.805,593,3.56,689,6.252,695,2.558,762,2.407,846,1.164,1063,2.923,1078,4.638,1681,4.459,2332,3.941,2371,3.427,2372,3.427,2383,3.427,2384,3.427,2423,4.068,2424,5.403,2425,3.877,2426,4.821,2427,3.877,2428,4.613,2429,3.877,2430,4.613,2431,3.877,2432,4.613,2433,3.877,2434,3.877,2435,3.877,2436,3.877,2437,4.068,2438,4.068,2439,3.877,2527,3.276,2529,3.841,2531,3.841,2533,3.841,2535,3.841,2537,3.841,2714,5.762,2719,2.923,2728,4.068,2729,4.679,2752,3.276,2756,3.841,2757,4.332,2758,4.332,2759,4.332,2760,4.332,2761,4.332,2762,4.332,2763,4.332]],["title/injectables/QueuesQueryService.html",[0,0.621,2449,2.797]],["body/injectables/QueuesQueryService.html",[0,0.794,1,6.035,2,1.426,3,0.066,4,0.059,5,0.059,7,0.626,9,0.157,10,4.562,12,5.862,15,1.928,17,0.181,18,1.156,19,0.904,20,2.244,21,3.922,22,4.396,23,5.1,24,4.799,25,4.799,26,3.304,27,4.396,28,4.396,29,3.922,30,1.083,32,0.489,34,1.177,35,0.008,36,0.871,37,0.388,38,1.006,39,3.11,40,3.882,42,2.979,43,1.321,44,2.645,45,3.11,46,2.231,48,2.721,52,2.53,53,1.068,54,3.652,56,2.447,57,2.447,58,3.433,59,3.11,61,3.11,63,3.11,65,0.131,66,0.456,68,2.644,69,0.066,71,1.85,78,0.785,110,0.77,126,0.005,135,0.005,247,4.095,248,2.178,293,2.774,295,2.927,296,2.774,418,1.426,601,3.738,672,2.644,917,2.573,1396,4.138,2355,3.11,2356,3.11,2449,3.576,2652,4.721,2655,3.339,2656,3.339,2657,3.339,2658,3.339,2659,3.339,2660,3.339,2661,3.339,2662,3.339,2663,3.339,2664,3.339,2667,3.339,2668,3.339,2669,3.339,2670,3.339,2714,5.217,2764,3.646,2765,7.33,2766,7.33,2767,7.33,2768,4.112,2769,4.112,2770,4.112,2771,4.112,2772,4.112,2773,4.112,2774,4.112,2775,4.112,2776,4.112,2777,4.112,2778,4.112]],["title/classes/QueuesQueryStudyDto.html",[9,0.174,2728,3.068]],["body/classes/QueuesQueryStudyDto.html",[3,0.068,4,0.061,5,0.061,9,0.285,17,0.188,18,1.185,32,0.461,35,0.008,37,0.392,53,1.367,65,0.106,69,0.11,90,1.538,116,1.892,126,0.005,135,0.005,187,1.592,198,0.797,546,2.82,559,2.752,562,3.482,564,1.382,575,2.799,593,3.518,689,6.23,695,2.514,762,2.378,846,1.144,1063,2.873,1078,4.613,1681,4.418,2332,3.905,2371,4.23,2372,4.23,2383,4.23,2384,4.23,2423,4.02,2424,5.384,2425,3.83,2426,3.83,2427,3.83,2428,3.665,2429,3.83,2430,3.665,2431,3.83,2432,3.665,2433,3.83,2434,3.83,2435,3.83,2436,3.83,2437,4.02,2438,5.022,2439,3.83,2527,3.22,2559,3.776,2562,3.776,2564,3.776,2566,3.776,2568,3.776,2570,3.776,2714,5.829,2719,2.873,2728,4.636,2729,4.02,2752,3.22,2756,3.776,2779,4.258,2780,4.258,2781,4.258,2782,4.258,2783,4.258,2784,4.258,2785,4.258,2786,4.258]],["title/guards/ReadAllGuard.html",[136,1.222,179,2.013]],["body/guards/ReadAllGuard.html",[0,1.19,3,0.06,4,0.054,5,0.054,7,0.57,9,0.33,15,1.243,16,1.243,17,0.165,19,0.845,32,0.203,34,0.535,35,0.008,36,0.396,37,0.173,38,0.457,43,0.558,65,0.097,66,0.416,69,0.14,78,1.762,110,1.614,126,0.004,135,0.004,136,2.343,137,1.392,138,1.573,139,1.984,140,4.469,141,2.76,142,1.615,143,4.779,144,3.631,145,3.569,146,3.542,148,1.496,149,2.711,150,1.806,151,3.53,152,2.517,153,3.717,154,4.727,155,2.054,156,1.806,157,1.754,158,2.054,159,1.754,160,2.054,161,1.705,162,2.054,163,1.861,164,1.754,165,2.054,166,1.705,167,2.054,168,1.806,169,1.861,170,1.754,171,2.054,172,1.861,173,1.861,174,2.054,175,1.36,176,1.806,177,2.054,178,2.701,179,2.407,180,2.054,2787,3.747]],["title/classes/RegisterDto.html",[9,0.174,366,3.439]],["body/classes/RegisterDto.html",[3,0.101,4,0.09,5,0.09,9,0.293,17,0.276,18,1.526,32,0.45,35,0.008,37,0.382,53,1.317,65,0.137,69,0.101,126,0.006,135,0.006,187,1.553,198,1.171,346,3.884,366,5.803,423,4.916,425,4.916,546,2.753,559,2.578,564,2.031,575,2.526,846,1.682,870,6.276,1011,6.231,2788,5.549,2789,6.258,2790,6.258,2791,6.258,2792,6.258,2793,6.258,2794,6.258,2795,6.258]],["title/entities/Role.html",[520,1.689,536,2.128]],["body/entities/Role.html",[3,0.062,4,0.055,5,0.055,9,0.147,15,2.497,16,2.497,17,0.169,18,1.1,32,0.479,35,0.008,36,0.993,37,0.407,38,0.674,53,0.806,54,1.697,56,3.207,65,0.148,69,0.126,90,2.236,116,2.954,126,0.005,135,0.005,142,3.379,149,2.875,156,3.627,163,3.221,169,3.738,172,3.221,175,2.353,178,3.221,187,1.654,198,0.718,520,2.054,536,2.588,537,2.465,546,2.931,556,5.387,558,1.697,559,2.654,575,2.689,762,2.207,879,3.209,1164,4.616,1167,2.586,1413,3.399,1416,4.903,1417,4.903,1418,4.49,2796,3.399,2797,8.666,2798,3.833,2799,3.833,2800,5.529,2801,3.833,2802,5.529,2803,3.833,2804,5.529,2805,3.833,2806,3.833,2807,3.833,2808,3.833,2809,3.833,2810,5.529,2811,3.833,2812,3.833,2813,3.833,2814,3.833,2815,3.833,2816,5.529,2817,3.833,2818,3.833]],["title/controllers/RolesController.html",[182,1.198,2819,3.439]],["body/controllers/RolesController.html",[3,0.044,4,0.039,5,0.039,7,1.403,9,0.104,15,0.901,16,2.149,17,0.12,19,0.663,20,2.126,30,0.715,32,0.404,34,1.062,35,0.008,36,0.919,37,0.379,38,0.908,43,1.109,44,2.482,53,1.283,54,1.202,65,0.147,66,0.301,69,0.044,71,2.333,78,0.814,110,1.213,116,1.354,126,0.003,135,0.003,137,1.009,141,0.792,182,1.386,184,0.826,187,1.394,198,0.508,318,2.117,319,2.337,328,2.741,336,4.569,338,4.505,350,2.614,356,2.641,371,1.94,375,1.67,376,1.832,377,1.17,378,4.274,381,4.737,382,1.17,390,2.185,391,1.746,401,2.002,402,4.701,404,4.082,417,2.792,418,2.247,427,4.06,435,1.603,436,3.78,520,3.096,575,0.826,742,1.543,752,3.765,753,4.397,754,2.337,773,1.67,776,1.349,779,1.933,780,1.202,782,1.202,783,2.205,809,2.876,812,2.337,813,4.166,879,3.324,886,2.117,896,1.933,911,4.244,977,5.934,1056,2.33,1069,2.876,1161,3.224,1164,3.034,1166,3.78,1187,2.205,1410,5.261,1419,5.118,1437,2.623,1439,2.408,1440,1.438,1441,1.603,1444,3.238,1448,3.682,1460,2.054,1627,1.933,1675,3.78,1788,2.205,1799,2.205,2010,2.054,2266,3.034,2285,1.933,2819,3.224,2820,2.408,2821,5.263,2822,4.263,2823,3.78,2824,3.78,2825,5.263,2826,2.715,2827,7.192,2828,2.715,2829,2.715,2830,2.715,2831,2.715,2832,2.715,2833,2.715,2834,2.715,2835,2.715,2836,2.715,2837,2.715,2838,2.715,2839,5.201,2840,2.715,2841,2.715,2842,2.715,2843,2.715,2844,2.715,2845,2.408,2846,2.715,2847,2.715,2848,2.715,2849,2.715,2850,2.715,2851,2.408,2852,2.715,2853,2.715,2854,2.408,2855,2.408,2856,2.205,2857,2.715,2858,2.715,2859,2.715,2860,2.715,2861,2.408,2862,2.715,2863,2.408,2864,2.715,2865,2.715,2866,2.715,2867,2.715,2868,2.715,2869,2.715,2870,4.263,2871,2.715,2872,2.715,2873,2.715,2874,2.715,2875,2.715,2876,2.715,2877,2.715,2878,2.715,2879,2.715,2880,2.715,2881,2.715,2882,2.715,2883,2.408,2884,2.715,2885,2.715,2886,2.715,2887,2.715,2888,2.715,2889,2.715,2890,2.715,2891,2.715,2892,4.263,2893,4.263,2894,2.715,2895,2.715,2896,2.715,2897,2.715,2898,2.715,2899,2.715,2900,2.715,2901,2.715,2902,2.715,2903,2.715,2904,2.715]],["title/modules/RolesModule.html",[204,1.444,226,2.924]],["body/modules/RolesModule.html",[3,0.093,4,0.083,5,0.083,9,0.222,35,0.008,65,0.164,66,0.644,69,0.093,126,0.006,135,0.006,141,2.138,184,2.23,204,2.549,206,2.571,207,2.643,208,2.799,209,2.799,210,2.799,211,3.867,212,3.756,226,5.99,231,3.53,232,2.799,233,2.799,235,2.799,244,3.301,245,2.571,390,4.546,391,3.735,476,4.393,520,2.158,879,2.998,886,4.651,1167,3.919,1437,5.457,2819,6.069,2854,5.151,2855,5.151,2856,4.717,2905,5.151,2906,5.151,2907,5.151,2908,5.809,2909,5.809,2910,5.809]],["title/injectables/RolesService.html",[0,0.621,886,2.259]],["body/injectables/RolesService.html",[0,0.674,2,1.14,3,0.053,4,0.047,5,0.047,7,0.5,9,0.126,15,1.638,16,1.638,17,0.145,19,0.767,20,2.225,30,1.3,32,0.461,34,1.156,35,0.008,36,0.963,37,0.373,38,0.988,42,2.53,43,1.248,44,2.629,53,1.345,65,0.137,66,0.365,69,0.095,71,2.378,78,1.47,90,2.335,110,1.323,114,1.455,116,1.044,126,0.004,135,0.004,141,1.73,142,2.841,156,2.379,163,2.452,169,2.452,172,2.452,175,1.792,178,2.452,195,3.039,245,1.455,303,2.706,318,2.452,376,2.218,401,1.878,417,1.416,418,1.14,427,4.382,435,1.941,494,2.53,520,3.312,558,1.455,754,2.706,809,4.448,812,2.706,813,3.174,815,4.735,835,2.113,879,2.021,886,2.452,890,5.766,896,3.514,1164,5.282,1167,2.218,1414,4.378,1459,2.915,1460,2.486,1470,4.378,1474,5.258,1485,2.915,1487,2.915,1488,5.353,1634,2.218,1714,4.692,1732,2.486,1733,2.486,2824,4.378,2845,4.378,2851,4.378,2856,2.669,2911,2.915,2912,4.937,2913,6.592,2914,4.937,2915,4.937,2916,3.287,2917,3.287,2918,4.937,2919,4.937,2920,3.287,2921,4.937,2922,3.287,2923,3.287,2924,3.287,2925,4.937,2926,3.287,2927,3.287,2928,4.937,2929,3.287,2930,4.937,2931,3.287,2932,4.937,2933,3.287,2934,3.287,2935,3.287,2936,3.287,2937,4.937,2938,4.937,2939,3.287,2940,3.287,2941,5.93,2942,3.287,2943,3.287,2944,5.93,2945,3.287,2946,3.287,2947,3.287,2948,4.937,2949,3.287]],["title/classes/Router.html",[9,0.174,541,2.924]],["body/classes/Router.html",[3,0.07,4,0.062,5,0.062,9,0.312,17,0.191,18,1.2,32,0.377,35,0.008,36,0.981,37,0.416,46,2.112,53,1.012,57,2.862,65,0.146,69,0.121,90,1.558,126,0.005,129,2.141,135,0.005,149,1.349,175,1.574,187,1.299,198,0.812,359,2.562,536,2.825,538,3.088,539,4.296,540,3.088,541,5.25,545,3.713,546,2.302,547,5.249,556,5.587,557,4.072,558,1.92,559,2.722,560,3.564,561,2.465,562,2.64,563,5.675,564,1.408,565,5.322,566,4.072,567,5.341,568,5.509,569,5.063,570,2.789,571,2.669,572,2.789,573,3.281,574,4.824,575,2.6,576,4.565,577,3.281,578,3.281,579,4.296,580,3.281,581,3.281,582,3.281,583,4.565,584,3.281,585,5.25,586,4.565,587,3.281,588,3.281,589,3.281,590,3.281,591,5.614,592,5.249,593,3.564,594,5.965,595,3.088,596,3.281,597,3.088,846,1.166,2950,6.036,2951,6.036,2952,4.338,2953,4.338,2954,4.338,2955,4.338]],["title/classes/Rule.html",[9,0.174,574,2.924]],["body/classes/Rule.html",[3,0.069,4,0.061,5,0.061,9,0.311,17,0.189,18,1.192,32,0.405,35,0.008,36,0.98,37,0.412,46,2.274,53,1.089,57,3.031,65,0.145,69,0.12,90,1.547,126,0.005,129,2.126,135,0.005,149,1.335,175,1.558,187,1.398,198,0.804,359,2.536,536,2.805,538,3.057,539,4.266,540,3.057,541,5.053,542,3.487,545,3.687,546,2.29,547,5.221,556,5.578,557,4.044,558,1.901,559,2.718,560,3.539,561,2.441,562,2.625,563,5.65,564,1.394,565,5.749,566,4.044,567,5.946,568,4.658,569,5.636,570,2.761,571,2.642,572,2.761,573,3.248,574,4.803,575,2.593,576,4.533,577,3.248,578,3.248,579,4.266,580,3.248,581,3.248,582,3.248,583,4.533,584,3.248,585,5.053,586,4.533,587,3.248,588,3.248,589,3.248,590,3.248,591,4.266,592,5.221,593,3.539,594,4.533,595,3.057,596,3.248,597,3.057,846,1.154,2956,4.295,2957,4.295,2958,4.295,2959,4.295,2960,4.295,2961,4.295,2962,4.295,2963,4.295]],["title/modules/SeederModule.html",[204,1.444,227,3.237]],["body/modules/SeederModule.html",[3,0.087,4,0.078,5,0.078,9,0.208,35,0.008,65,0.166,66,0.602,69,0.087,126,0.006,135,0.006,141,2.048,175,2.547,184,1.653,204,2.469,206,2.404,207,2.471,208,2.617,209,2.617,210,2.617,211,3.747,212,2.541,227,6.664,231,3.382,232,2.617,233,2.617,235,2.617,244,3.086,245,2.404,262,3.988,263,3.717,390,4.467,391,3.491,468,4.777,476,4.107,481,4.512,482,4.107,484,3.491,520,2.606,879,2.872,886,4.329,889,3.491,1167,3.664,1179,3.491,1266,3.988,1796,5.362,2456,4.41,2964,4.815,2965,4.815,2966,6.203,2967,5.431,2968,5.431,2969,4.815,2970,5.431,2971,5.431]],["title/injectables/SeederService.html",[0,0.621,2966,3.237]],["body/injectables/SeederService.html",[0,0.995,2,1.999,3,0.093,4,0.083,5,0.083,7,0.877,9,0.22,17,0.254,19,1.133,20,1.904,30,1.92,32,0.396,34,0.822,35,0.008,36,0.609,37,0.266,38,0.703,43,0.859,65,0.155,66,0.639,69,0.093,71,2.305,126,0.006,135,0.006,195,4.442,262,3.276,263,3.053,303,3.996,390,4.608,391,3.706,401,3.196,468,4.928,484,3.706,602,5.92,885,4.681,886,4.397,889,3.706,1056,3.719,1714,5.981,1796,5.169,1802,7.09,2966,5.189,2969,5.111,2972,5.111,2973,6.465,2974,5.765,2975,5.765,2976,5.765,2977,5.765,2978,5.765,2979,5.765]],["title/injectables/SeriesGuard.html",[0,0.621,1185,3.068]],["body/injectables/SeriesGuard.html",[0,0.997,2,2.003,3,0.093,4,0.083,5,0.083,7,0.879,9,0.221,17,0.255,19,1.135,20,1.906,32,0.313,34,0.824,35,0.008,36,0.61,37,0.266,38,0.704,43,0.86,44,2.13,65,0.143,66,0.641,69,0.093,71,1.584,78,1.606,110,1.366,114,2.556,116,1.834,126,0.006,135,0.006,136,1.962,141,2.13,144,2.987,145,2.987,146,3.357,148,2.306,152,1.686,153,2.489,520,2.973,647,5.52,695,4.31,723,3.625,879,3.276,881,4.49,892,4.925,893,3.897,901,4.693,904,4.368,917,3.231,958,4.548,1023,4.925,1027,5.52,1053,4.925,1054,4.368,1107,5.927,1108,5.121,1109,3.897,1111,4.69,1117,4.368,1185,4.925,1195,5.146,1196,4.69,1297,6.472,2980,5.121,2981,5.776]],["title/guards/StudyGuard.html",[136,1.222,1195,2.924]],["body/guards/StudyGuard.html",[0,0.988,3,0.092,4,0.082,5,0.082,7,0.867,9,0.218,17,0.251,19,1.125,20,1.894,30,1.906,32,0.393,34,1.033,35,0.008,36,0.764,37,0.333,38,0.883,43,0.849,44,2.112,65,0.149,66,0.632,69,0.092,78,1.519,110,1.067,126,0.006,135,0.006,136,1.945,138,2.393,141,2.112,144,3.425,145,2.962,146,3.34,148,2.275,151,2.332,152,1.663,153,2.456,520,2.954,619,3.67,647,5.474,668,2.593,669,2.522,723,2.83,879,3.255,885,4.628,886,4.384,889,3.664,892,4.883,893,3.845,901,4.653,904,4.31,958,3.239,1027,5.474,1053,4.883,1054,4.31,1099,5.877,1117,4.31,1195,4.653,2982,5.053,2983,7.238,2984,5.699,2985,5.699]],["title/classes/TagAnon.html",[9,0.174,2986,3.693]],["body/classes/TagAnon.html",[3,0.094,4,0.084,5,0.084,9,0.224,17,0.258,18,1.464,30,1.939,32,0.458,34,0.835,35,0.008,36,0.618,37,0.389,38,0.714,46,2.65,53,1.352,54,3.934,56,2.125,65,0.104,69,0.094,126,0.006,135,0.006,675,3.001,846,1.574,2986,5.978,2987,7.721,2988,5.191,2989,9.022,2990,8.888,2991,9.022,2992,5.855,2993,7.881,2994,7.363,2995,5.855,2996,5.855,2997,5.855,2998,5.855,2999,5.855]],["title/modules/TasksModule.html",[204,1.444,228,3.237]],["body/modules/TasksModule.html",[3,0.093,4,0.083,5,0.083,9,0.22,15,1.912,35,0.008,65,0.16,66,0.639,69,0.093,126,0.006,135,0.006,204,2.54,206,2.552,207,2.623,208,2.778,209,2.778,210,2.778,211,3.853,212,3.742,228,6.712,231,3.513,232,2.778,233,2.778,235,2.778,244,3.276,245,2.552,619,3.623,668,2.623,669,2.552,1205,2.863,1266,3.276,1816,5.111,2151,6.658,2441,6.658,2449,5.446,2454,5.111,2455,4.36,2456,4.681,3000,5.111,3001,5.111,3002,5.111,3003,5.765,3004,5.765,3005,5.765]],["title/classes/TmtvJobDto.html",[9,0.174,2329,3.439]],["body/classes/TmtvJobDto.html",[3,0.09,4,0.08,5,0.08,9,0.302,17,0.247,18,1.424,32,0.451,35,0.008,37,0.383,53,1.212,56,2.598,65,0.141,69,0.115,90,2.146,116,2.641,126,0.006,135,0.006,149,2.226,187,1.556,198,1.049,517,3.988,559,2.662,560,4.228,561,3.184,562,3.001,564,1.818,673,5.968,674,5.324,675,2.872,714,4.55,716,5.968,717,5.968,718,6.408,721,6.408,762,3.508,846,1.506,947,4.968,989,4.831,1165,6.752,2265,3.78,2324,6.499,2325,4.55,2326,3.988,2329,5.968,2332,4.069,2333,4.968,2334,4.968,3006,5.603,3007,5.603,3008,5.603,3009,5.603,3010,5.603]],["title/classes/TmtvService.html",[9,0.174,3011,3.693]],["body/classes/TmtvService.html",[3,0.056,4,0.05,5,0.05,7,0.534,9,0.236,17,0.155,18,1.031,19,0.806,20,2.144,30,1.365,32,0.483,34,0.971,35,0.008,36,0.719,37,0.386,38,0.83,43,1.228,44,1.987,53,1.279,56,1.881,57,1.881,65,0.13,69,0.056,71,2.361,78,1.542,90,1.591,110,1.154,113,4.597,116,2.163,126,0.004,135,0.004,149,1.917,230,5.307,241,3.187,256,2.85,401,3.455,418,1.798,601,3.334,619,3.112,668,1.597,669,1.554,674,2.368,675,1.799,695,3.062,707,6.038,710,6.038,716,4.663,717,4.663,723,2.575,846,0.943,1035,2.85,1056,2.295,1105,5.529,1206,3.334,1558,4.663,1561,4.21,1562,4.597,1563,4.597,1607,3.112,1609,6.441,1611,3.112,2313,5.494,3011,4.21,3012,3.112,3013,5.529,3014,6.166,3015,6.809,3016,6.809,3017,6.809,3018,5.185,3019,6.809,3020,6.809,3021,6.809,3022,5.185,3023,5.185,3024,5.185,3025,3.51,3026,3.51,3027,3.51,3028,3.51,3029,3.51,3030,3.51,3031,3.51,3032,3.51,3033,5.185,3034,3.51,3035,5.185,3036,3.51,3037,3.51,3038,3.51,3039,5.185,3040,3.51,3041,5.185,3042,3.51,3043,3.51,3044,3.51,3045,6.166,3046,3.51,3047,5.185,3048,3.51,3049,5.185,3050,3.51,3051,5.185,3052,7.603,3053,3.51,3054,5.185,3055,3.51,3056,3.51,3057,3.51,3058,5.185,3059,3.51,3060,3.51,3061,5.185,3062,3.51,3063,3.51,3064,3.51,3065,6.166,3066,3.51,3067,3.51,3068,3.51,3069,3.51,3070,3.51,3071,5.185,3072,3.51,3073,3.51,3074,3.51,3075,5.185,3076,3.51,3077,3.51,3078,3.51,3079,3.51,3080,3.51,3081,3.51,3082,3.51,3083,3.51,3084,3.51,3085,3.51,3086,3.51,3087,3.51,3088,3.51]],["title/classes/UpdateOptionDto.html",[9,0.174,1791,3.237]],["body/classes/UpdateOptionDto.html",[3,0.113,4,0.101,5,0.101,9,0.27,35,0.008,65,0.147,69,0.113,126,0.007,135,0.007,198,1.32,754,3.866,846,1.896,917,3.648,920,5.02,922,5.334,1148,7.309,1159,5.727,1160,5.334,1791,5.867,3089,6.254]],["title/classes/UpdateUserDto.html",[9,0.174,3090,3.439]],["body/classes/UpdateUserDto.html",[3,0.093,4,0.083,5,0.083,9,0.28,17,0.256,18,1.455,32,0.457,35,0.008,37,0.388,53,1.328,65,0.13,69,0.093,90,2.173,126,0.006,135,0.006,142,3.153,187,1.576,198,1.085,346,3.752,423,4.556,425,4.556,427,4.734,546,2.793,559,2.587,562,3.302,564,1.882,575,2.563,762,3.635,846,1.558,989,5.681,995,4.385,998,5.141,999,5.534,1000,5.141,1001,5.534,1002,5.141,1010,5.141,3090,5.534,3091,7.699,3092,7.318]],["title/entities/User.html",[141,1.327,536,2.128]],["body/entities/User.html",[3,0.074,4,0.066,5,0.066,9,0.241,17,0.203,18,1.252,32,0.477,35,0.008,36,0.928,37,0.405,38,1.057,46,1.916,53,1.319,65,0.137,69,0.074,90,2.295,116,1.999,126,0.005,129,2.859,135,0.005,141,1.837,142,1.987,187,1.646,198,0.863,301,3.947,346,3.773,356,2.542,423,4.581,425,4.581,427,4.232,520,3.265,528,4.481,536,2.946,537,2.965,546,2.554,550,4.089,556,5.333,557,4.247,558,2.041,559,2.62,571,2.837,575,2.344,996,3.745,999,3.488,1001,3.488,1179,2.965,1452,4.089,1784,5.582,3093,4.089,3094,7.168,3095,4.612,3096,4.612,3097,4.612,3098,4.612,3099,4.612,3100,4.612,3101,4.612,3102,4.612,3103,4.612,3104,4.612,3105,4.612,3106,4.612,3107,7.702,3108,4.612,3109,4.612,3110,7.168,3111,8.062,3112,4.612,3113,6.296,3114,4.612,3115,4.612,3116,6.296,3117,6.296]],["title/interfaces/UserInfoResponse.html",[1365,3.068,1366,3.439]],["body/interfaces/UserInfoResponse.html",[0,0.823,3,0.07,4,0.062,5,0.062,9,0.231,17,0.191,18,1.199,20,1.877,30,1.141,35,0.008,36,0.792,37,0.386,40,3.193,44,2.301,53,1.362,65,0.149,66,0.48,69,0.07,71,2.343,78,1.631,110,1.476,126,0.005,135,0.005,149,2.156,202,2.923,262,2.462,263,2.294,346,3.689,354,3.276,355,2.558,356,2.66,357,4.292,358,3.276,374,3.276,401,2.638,414,5.632,416,3.518,417,3.232,418,2.6,419,5.632,423,2.462,425,2.462,465,2.923,468,3.801,472,3.083,474,3.276,484,2.785,486,3.709,500,5.632,518,6.089,917,1.917,1056,3.07,1109,4.068,1201,2.785,1252,2.22,1280,4.56,1322,2.665,1325,2.785,1334,4.068,1337,3.518,1338,3.518,1339,4.292,1340,3.276,1341,3.083,1342,3.276,1348,6.15,1350,3.841,1352,5.346,1353,3.841,1356,3.841,1358,3.841,1360,3.841,1362,3.276,1363,6.15,1364,3.083,1365,2.923,1366,4.56,1367,6.649,1368,6.649,1369,6.649,1370,6.649,1371,5.346,1372,3.841,1373,3.841,1374,3.841,1375,3.841,1376,3.841,1377,3.083,1378,3.841,1379,3.841,1380,3.841,1381,3.841,1382,3.841,1383,3.841,1384,3.841,1385,3.841,1386,3.841,1387,3.841,1388,3.841,1389,3.841,1390,3.841,1391,3.841,1392,3.841,1393,3.841,1833,3.518]],["title/controllers/UsersController.html",[182,1.198,3118,3.439]],["body/controllers/UsersController.html",[3,0.05,4,0.045,5,0.045,7,1.396,9,0.12,16,2.293,17,0.138,19,0.739,20,2.062,30,0.823,32,0.375,34,0.917,35,0.008,36,0.679,37,0.359,38,0.784,43,1.03,44,2.377,46,2.431,65,0.15,66,0.347,69,0.05,71,2.303,78,1.445,110,1.294,126,0.004,129,2.978,135,0.004,137,1.161,141,2.505,152,1.387,182,1.515,184,0.951,187,1.294,198,0.585,301,1.602,318,2.361,319,2.605,328,3.056,330,5.698,331,5.698,336,4.274,338,4.314,346,2.225,350,2.361,356,2.452,367,3.86,371,2.162,375,1.923,376,2.109,377,1.347,381,4.705,382,1.347,390,2.436,401,1.808,402,4.657,404,3.789,417,2.979,418,2.524,423,2.701,425,2.701,427,2.807,429,2.772,435,2.807,460,3.86,495,6.129,514,2.01,519,5.1,520,2.387,521,5.1,742,1.776,752,3.606,753,4.082,754,2.605,773,1.923,776,1.553,779,2.225,780,1.384,782,1.384,783,2.538,792,2.772,813,4.444,833,2.538,886,2.361,889,2.01,898,4.574,993,4.86,1056,2.104,1069,3.88,1168,4.35,1188,2.772,1440,1.655,1441,1.846,1444,3.538,1448,2.701,1627,2.225,1668,2.109,1788,2.538,1798,2.538,1799,2.538,2010,2.364,2207,2.772,2861,2.772,2863,2.772,2883,4.215,3090,4.86,3118,3.595,3119,2.772,3120,4.753,3121,6.426,3122,4.753,3123,3.126,3124,5.752,3125,4.753,3126,3.126,3127,3.126,3128,7.28,3129,3.126,3130,3.126,3131,3.126,3132,3.126,3133,3.126,3134,3.126,3135,3.126,3136,3.126,3137,3.126,3138,3.126,3139,2.772,3140,2.538,3141,5.752,3142,2.364,3143,3.126,3144,3.126,3145,3.126,3146,3.126,3147,3.126,3148,5.752,3149,5.752,3150,4.753,3151,3.126,3152,3.126,3153,4.753,3154,3.126,3155,4.215,3156,3.126,3157,3.126,3158,3.126,3159,7.28,3160,4.753,3161,3.126,3162,4.753,3163,3.126,3164,3.126,3165,3.126,3166,3.126,3167,3.126,3168,3.126,3169,3.126,3170,3.126,3171,3.126,3172,3.126]],["title/modules/UsersModule.html",[204,1.444,229,3.068]],["body/modules/UsersModule.html",[3,0.098,4,0.087,5,0.087,9,0.233,35,0.008,65,0.164,66,0.676,69,0.098,126,0.006,135,0.006,141,1.778,184,2.297,204,2.604,206,2.697,207,2.772,208,2.936,209,2.936,210,2.936,211,3.952,212,2.851,229,6.203,231,3.637,232,2.936,233,2.936,235,2.936,244,3.462,245,2.697,390,4.601,492,5.402,520,2.803,879,3.089,886,4.458,889,3.917,1167,4.111,1179,3.917,3118,6.202,3139,5.402,3140,4.947,3173,6.093,3174,6.093,3175,6.093,3176,6.093]],["title/injectables/UsersService.html",[0,0.621,390,2.331]],["body/injectables/UsersService.html",[0,0.683,2,1.16,3,0.054,4,0.048,5,0.048,7,0.509,9,0.128,17,0.147,19,0.778,20,2.216,30,1.318,32,0.456,34,1.161,35,0.008,36,0.859,37,0.375,38,0.992,42,2.564,43,1.235,44,2.609,46,2.668,53,1.187,54,2.944,56,1.816,57,1.816,65,0.127,66,0.371,69,0.054,71,2.385,78,1.607,90,1.928,110,1.449,116,1.063,126,0.004,129,2.887,135,0.004,141,2.691,142,2.866,149,2.322,195,3.071,245,1.481,301,3.071,303,2.742,318,2.485,346,3.624,390,2.564,401,1.272,417,1.442,418,1.16,423,2.843,425,2.843,427,4.204,447,4.866,494,2.564,514,2.151,520,2.226,558,1.481,754,2.742,809,4.487,812,2.742,813,3.217,815,4.091,831,4.436,833,4.063,835,2.151,844,2.967,975,1.976,1069,2.257,1488,4.866,1510,2.967,1627,2.381,1634,2.257,1714,4.734,1732,2.53,1733,2.53,2823,4.436,3140,2.717,3142,2.53,3155,2.967,3177,2.967,3178,5.993,3179,5.003,3180,5.003,3181,5.003,3182,3.346,3183,3.346,3184,5.003,3185,5.003,3186,3.346,3187,3.346,3188,5.003,3189,7.962,3190,3.346,3191,3.346,3192,3.346,3193,5.003,3194,3.346,3195,5.003,3196,3.346,3197,3.346,3198,3.346,3199,3.346,3200,5.003,3201,3.346,3202,3.346,3203,3.346,3204,3.346,3205,3.346,3206,3.346,3207,5.993,3208,3.346,3209,5.003,3210,3.346,3211,5.003,3212,3.346,3213,5.003,3214,3.346,3215,3.346,3216,5.003,3217,3.346,3218,5.003,3219,3.346,3220,5.003,3221,3.346,3222,3.346]],["title/classes/WithLabels.html",[9,0.174,2839,3.439]],["body/classes/WithLabels.html",[3,0.1,4,0.089,5,0.089,9,0.316,17,0.274,18,1.52,32,0.337,35,0.008,37,0.287,56,2.257,57,3.133,65,0.148,69,0.1,90,2.136,110,1.164,116,2.428,126,0.006,135,0.006,149,2.376,187,1.164,198,1.164,559,2.278,560,4.514,564,2.018,571,3.826,575,1.893,790,6.778,846,1.671,961,5.05,2839,6.702,3223,6.778,3224,5.514,3225,6.219,3226,6.219,3227,7.644,3228,6.219,3229,7.644]],["title/coverage.html",[3230,5.063]],["body/coverage.html",[0,1.213,1,1.535,5,0.033,6,2.017,9,0.349,35,0.008,37,0.105,126,0.003,129,1.312,135,0.003,136,2.225,137,0.845,139,4.023,141,1.573,150,1.096,157,1.064,159,1.064,161,1.035,164,1.064,166,1.035,170,1.064,173,1.13,175,0.825,176,1.096,179,1.007,182,2.236,183,1.72,185,2.017,195,1.166,230,1.535,249,1.847,253,1.72,263,2.854,315,1.72,316,2.017,326,1.72,344,1.72,366,1.72,383,1.535,385,1.535,388,1.462,390,1.166,392,1.72,396,1.535,418,0.789,465,1.535,466,1.619,467,1.619,468,1.247,479,1.535,481,1.462,493,2.017,511,1.847,512,1.847,513,1.847,520,1.374,536,2.975,538,3.836,541,1.462,572,1.462,574,1.462,585,1.462,598,1.619,599,2.017,617,1.462,618,1.399,619,0.931,625,1.72,664,1.847,702,2.798,740,1.72,741,2.017,751,1.72,808,2.017,847,2.017,848,3.005,877,1.619,878,3.836,879,1.914,880,3.005,886,1.13,898,1.619,899,2.017,906,1.619,907,2.017,911,1.619,915,2.017,916,2.017,920,1.619,921,2.017,922,3.537,971,3.005,975,5.563,976,2.634,977,1.619,978,2.017,979,3.005,993,1.72,994,2.017,995,3.537,1007,4.147,1018,1.619,1019,2.017,1020,2.017,1053,1.535,1146,1.72,1147,2.017,1161,1.72,1162,2.017,1168,1.72,1169,2.017,1184,1.535,1185,1.535,1195,1.462,1198,1.847,1199,2.017,1266,1.293,1296,2.017,1300,2.017,1301,2.017,1313,2.017,1323,1.847,1331,2.017,1332,2.017,1337,3.005,1338,3.005,1365,2.496,1366,1.72,1394,2.017,1409,2.017,1419,1.619,1420,2.017,1422,1.72,1423,2.017,1437,1.399,1440,1.205,1468,2.017,1494,2.017,1497,2.017,1505,2.017,1512,2.017,1541,2.017,1558,1.72,1559,2.017,1560,2.017,1620,2.017,1621,2.017,1631,1.847,1644,3.636,1645,2.017,1660,1.72,1661,2.017,1666,1.619,1700,2.017,1711,2.017,1736,2.017,1785,1.72,1786,2.017,1791,1.619,1796,1.399,1817,2.017,1818,2.017,1832,1.72,1834,3.005,1851,6.494,1885,1.72,1886,4.122,1887,2.017,1947,1.293,1964,1.72,1965,2.017,2026,1.72,2027,2.017,2046,2.017,2047,2.017,2061,1.72,2062,2.017,2102,1.72,2103,2.017,2116,1.72,2117,2.017,2140,1.72,2141,1.72,2149,1.72,2151,1.619,2152,2.017,2153,2.017,2176,3.005,2189,1.535,2196,1.535,2197,1.535,2199,3.329,2230,2.017,2258,1.72,2259,2.017,2265,1.535,2313,1.72,2314,2.017,2324,3.537,2325,3.005,2329,1.72,2339,2.017,2352,1.535,2364,1.619,2365,3.537,2366,2.017,2417,3.537,2418,3.537,2441,1.619,2442,2.017,2443,2.017,2449,1.399,2457,1.847,2459,1.847,2475,1.847,2476,3.005,2477,2.017,2539,1.847,2540,2.017,2574,1.535,2575,1.535,2577,1.72,2578,1.72,2579,1.72,2587,3.836,2588,2.017,2593,1.619,2632,1.72,2633,3.005,2651,2.017,2674,3.537,2675,2.017,2680,1.72,2704,2.017,2709,2.017,2714,4.001,2719,1.535,2728,1.535,2729,1.535,2752,3.537,2764,2.017,2788,2.017,2796,2.017,2819,1.72,2820,2.017,2839,1.72,2911,2.017,2966,1.619,2972,2.017,2980,2.017,2982,2.017,2986,1.847,2987,2.017,2988,2.017,3011,1.847,3012,2.017,3089,2.017,3090,1.72,3091,2.017,3093,2.017,3118,1.72,3119,2.017,3142,1.72,3177,2.017,3223,2.017,3224,2.017,3230,1.847,3231,2.275,3232,2.275,3233,2.275,3234,6.983,3235,8.101,3236,2.275,3237,7.221,3238,6.983,3239,6.357,3240,6.7,3241,3.7,3242,2.275,3243,2.275,3244,4.678,3245,7.747,3246,7.747,3247,8.741,3248,3.7,3249,3.7,3250,5.389,3251,2.017,3252,7.596,3253,2.017,3254,2.017,3255,2.275,3256,7.997,3257,7.422,3258,7.422,3259,2.017,3260,4.147,3261,4.678,3262,4.678,3263,4.147,3264,2.017,3265,2.017,3266,5.389,3267,5.389,3268,2.275,3269,4.678,3270,3.7,3271,2.275,3272,2.275,3273,2.275,3274,2.275,3275,2.017,3276,5.931,3277,5.931,3278,3.7,3279,3.7,3280,3.281,3281,2.017,3282,1.847,3283,3.7,3284,2.275,3285,3.281,3286,2.017,3287,2.017,3288,2.017,3289,2.017,3290,4.147,3291,2.017,3292,2.017,3293,2.017,3294,2.275,3295,2.275,3296,2.275,3297,2.017,3298,2.017,3299,2.017,3300,2.017,3301,2.275,3302,2.017,3303,2.017,3304,2.017,3305,2.275,3306,2.275,3307,2.275,3308,5.259,3309,2.275,3310,2.275,3311,2.275]],["title/dependencies.html",[207,2.492,3312,3.355]],["body/dependencies.html",[9,0.278,35,0.008,66,0.638,68,3.699,126,0.006,135,0.006,198,1.077,207,2.618,245,2.547,248,3.047,252,4.095,260,4.351,266,4.095,267,4.095,292,5.102,354,4.351,355,3.397,357,4.095,472,4.095,474,4.351,558,2.547,564,1.867,571,3.539,670,5.102,1093,5.102,1201,3.699,1251,5.102,1253,3.27,1322,3.539,1339,6.165,1364,4.095,1395,4.672,1519,4.672,1520,4.672,3313,7.282,3314,5.754,3315,5.754,3316,5.754,3317,7.989,3318,5.754,3319,5.754,3320,5.754,3321,5.754,3322,5.754,3323,5.754,3324,5.754,3325,5.754,3326,5.754,3327,5.754,3328,5.754,3329,5.754,3330,5.754,3331,5.754,3332,5.754,3333,5.754,3334,5.754,3335,5.754,3336,5.754,3337,5.754,3338,5.754,3339,5.754,3340,5.754,3341,5.754,3342,5.754,3343,5.754,3344,5.754,3345,5.754,3346,5.754,3347,5.754,3348,5.754,3349,5.754,3350,5.754,3351,5.754,3352,5.754,3353,5.754,3354,5.754,3355,5.754,3356,5.754,3357,5.754,3358,5.754,3359,5.754]],["title/miscellaneous/enumerations.html",[3360,2.553,3361,4.857]],["body/miscellaneous/enumerations.html",[17,0.172,35,0.008,46,1.708,53,0.818,57,3.533,126,0.005,135,0.005,528,3.994,545,3.452,565,3.786,566,3.786,567,3.994,568,3.786,569,3.786,646,4.976,673,4.244,674,3.786,689,3.994,695,4.232,726,4.976,812,3.076,958,3.189,1060,4.976,1063,3.786,1078,2.224,2051,3.47,2201,3.994,2367,2.96,2371,2.224,2372,2.224,2373,2.96,2383,2.224,2384,2.224,2386,4.244,2424,3.452,2425,2.516,2426,2.516,2427,2.516,2428,2.407,2429,2.516,2430,2.407,2431,2.516,2432,2.407,2433,2.516,2434,2.516,2435,2.516,2436,2.516,2439,2.516,2993,4.976,3013,4.557,3282,4.557,3360,2.64,3361,3.47,3362,8.134,3363,7.588,3364,3.914,3365,3.914,3366,3.914,3367,3.914,3368,3.914,3369,3.914,3370,3.914,3371,3.914,3372,3.914,3373,3.914,3374,3.914,3375,3.914,3376,3.914,3377,3.914,3378,5.612,3379,5.612,3380,5.612,3381,5.612,3382,5.612,3383,3.914,3384,3.914,3385,3.914,3386,3.914,3387,3.914,3388,3.914,3389,3.914,3390,3.914,3391,3.914,3392,3.47,3393,3.914,3394,3.914,3395,3.914,3396,3.914,3397,3.914,3398,3.914,3399,3.914,3400,3.914,3401,3.914,3402,3.914,3403,3.914,3404,3.914,3405,5.612,3406,3.914,3407,3.914,3408,3.914,3409,3.914,3410,3.914,3411,3.914,3412,3.914,3413,3.914,3414,3.914,3415,3.914,3416,3.914,3417,3.914,3418,3.914,3419,3.914,3420,3.914,3421,3.914,3422,3.914,3423,3.914,3424,3.914,3425,3.914,3426,3.914,3427,3.914,3428,3.914,3429,3.914,3430,3.914,3431,3.914,3432,3.914,3433,3.914,3434,3.914,3435,3.914,3436,3.914,3437,3.914,3438,3.914,3439,3.914,3440,3.914,3441,3.914,3442,3.914,3443,3.914,3444,3.914,3445,3.914,3446,3.914,3447,3.914,3448,3.914,3449,3.914,3450,3.914,3451,3.914,3452,3.914,3453,3.914,3454,5.612,3455,3.914,3456,5.612,3457,5.612,3458,5.612,3459,5.612,3460,5.612,3461,5.612,3462,5.612]],["title/miscellaneous/functions.html",[3360,2.553,3463,4.857]],["body/miscellaneous/functions.html",[7,0.669,15,1.458,16,1.458,17,0.194,34,1.29,35,0.008,36,0.955,37,0.417,38,1.109,43,0.655,46,2.732,53,0.888,67,5.598,79,2.704,126,0.005,135,0.005,136,1.637,138,2.934,149,1.366,152,1.778,230,5.782,247,4.869,249,4.946,305,2.826,318,2.183,342,2.966,619,3.839,649,6.128,1119,3.569,1206,2.826,1252,3.122,1273,5.401,1440,3.226,1631,5.676,1634,4.109,1832,5.707,1834,3.569,1846,3.897,1847,3.897,1848,3.897,1849,3.897,1850,3.897,2457,4.946,2459,4.946,2462,5.401,2464,5.401,2653,3.897,3013,3.569,3263,3.897,3264,5.401,3265,5.401,3280,3.897,3281,5.401,3282,4.946,3285,3.897,3286,5.401,3287,5.401,3288,3.897,3289,5.401,3290,3.897,3291,5.401,3292,5.401,3293,5.401,3302,3.897,3303,5.401,3304,3.897,3360,2.966,3463,3.897,3464,6.99,3465,6.091,3466,4.396,3467,4.396,3468,4.396,3469,6.99,3470,4.396,3471,6.091,3472,4.396,3473,7.546,3474,4.946,3475,4.396,3476,4.396,3477,4.396,3478,4.396,3479,6.99,3480,6.99,3481,6.99,3482,4.396,3483,6.091,3484,6.091,3485,6.091,3486,4.396,3487,4.396,3488,6.091,3489,4.396,3490,4.396,3491,4.396,3492,4.396,3493,4.396,3494,4.396,3495,4.396,3496,4.396,3497,4.396]],["title/index.html",[17,0.167,3498,3.784,3499,3.784]],["body/index.html",[4,0.087,7,0.923,35,0.008,126,0.006,135,0.006,575,2.491,815,3.733,1517,5.38,2149,4.589,3230,4.927,3474,4.927,3500,6.068,3501,6.068,3502,7.529,3503,6.068,3504,6.068,3505,6.068,3506,6.068,3507,6.068,3508,6.068,3509,8.186,3510,6.068,3511,6.068,3512,6.068,3513,9.092,3514,6.068,3515,6.068,3516,8.968,3517,6.068,3518,6.068,3519,7.529,3520,6.068,3521,6.068,3522,6.068,3523,6.068,3524,7.529,3525,7.529,3526,6.068,3527,6.068,3528,6.068,3529,7.529,3530,7.529,3531,6.068,3532,6.068,3533,6.068,3534,6.068,3535,6.068,3536,5.38,3537,6.068,3538,6.068,3539,6.068,3540,6.068,3541,6.068,3542,6.068,3543,6.068,3544,6.068,3545,5.38,3546,6.068,3547,6.068,3548,6.068,3549,6.068,3550,6.068,3551,6.068,3552,5.38]],["title/modules.html",[206,2.76]],["body/modules.html",[35,0.006,126,0.006,135,0.006,205,4.783,206,2.799,216,4.501,217,4.501,218,4.501,219,4.501,220,4.501,221,4.501,222,4.501,223,4.501,224,4.501,225,4.501,226,4.066,227,4.501,228,4.501,229,4.267,3536,8.449,3553,9.529,3554,9.529,3555,9.554,3556,6.324,3557,6.324]],["title/overview.html",[3558,5.529]],["body/overview.html",[2,1.327,35,0.008,126,0.005,135,0.005,138,1.607,184,1.165,204,1.216,205,7.144,206,1.695,207,1.742,208,1.845,209,1.845,210,1.845,211,1.845,212,1.792,213,3.395,214,3.395,215,3.395,216,6.538,217,6.166,218,6.454,219,5.355,220,4.613,221,5.355,222,5.355,223,5.751,224,5.355,225,5.998,226,5.629,227,6.288,228,6.288,229,5.581,230,4.373,231,2.662,232,1.845,233,1.845,383,4.373,385,4.373,388,5.195,390,4.017,396,4.373,461,3.395,463,3.395,464,3.395,465,4.373,466,4.613,467,4.613,468,4.123,479,4.373,537,2.461,598,4.613,617,4.167,618,4.365,619,3.208,702,2.895,802,3.395,803,3.395,846,1.029,886,4.185,976,2.725,1181,3.395,1183,3.395,1184,4.373,1185,4.373,1437,4.365,1462,3.395,1463,3.395,1796,4.365,1811,3.395,1812,3.395,1833,3.109,2151,5.751,2441,5.751,2449,4.365,2572,3.395,2573,3.395,2574,4.373,2575,4.373,2905,3.395,2906,3.395,2907,3.395,2964,3.395,2965,3.395,2966,4.613,3000,3.395,3001,3.395,3002,3.395,3260,3.395,3558,3.395,3559,3.829,3560,3.829,3561,3.829,3562,3.829]],["title/properties.html",[18,1.089,3312,3.355]],["body/properties.html",[7,1.107,18,1.447,35,0.008,126,0.007,135,0.007,1123,6.451,3545,6.451,3552,6.451,3563,7.276,3564,7.276,3565,7.276,3566,7.276]],["title/miscellaneous/variables.html",[3360,2.553,3567,4.857]],["body/miscellaneous/variables.html",[7,0.613,17,0.178,20,1.899,35,0.008,37,0.335,53,1.196,56,3.176,57,3.176,71,2.373,77,3.573,78,1.735,90,1.04,110,1.536,126,0.005,135,0.005,152,1.946,195,2.937,202,2.718,301,2.937,303,2.208,305,2.59,306,4.333,313,4.653,350,2.846,355,2.379,356,2.365,357,2.868,418,1.987,486,3.525,494,2.065,511,4.653,512,4.653,513,4.653,520,2.698,524,7.07,528,2.868,602,3.272,619,3.14,712,4.333,743,4.653,858,3.272,879,2.972,881,2.479,886,2.846,894,3.573,896,2.868,958,2.29,975,2.379,1053,3.866,1081,3.573,1109,2.718,1201,2.59,1205,2.846,1252,3.418,1323,4.653,1326,3.573,1851,3.272,1888,2.479,1947,3.256,1948,2.379,2111,3.573,2352,3.866,2973,3.573,3142,4.333,3251,3.573,3253,5.081,3254,3.573,3259,3.573,3275,3.573,3297,3.573,3298,5.081,3299,3.573,3300,5.081,3308,3.573,3360,2.718,3392,5.081,3474,4.653,3567,3.573,3568,4.029,3569,4.029,3570,7.674,3571,4.029,3572,4.029,3573,4.029,3574,4.029,3575,4.029,3576,4.029,3577,4.029,3578,4.029,3579,4.029,3580,4.029,3581,4.029,3582,4.029,3583,4.029,3584,4.029,3585,4.029,3586,4.029,3587,4.029,3588,4.029,3589,5.73,3590,4.029,3591,4.029,3592,4.029,3593,5.73,3594,4.029,3595,4.029,3596,4.029,3597,4.029,3598,4.029,3599,4.029,3600,4.029,3601,4.029,3602,4.029,3603,4.029,3604,4.029,3605,5.73,3606,4.029,3607,5.73,3608,4.029,3609,5.73,3610,4.029,3611,4.029,3612,4.029,3613,4.029,3614,4.029,3615,4.029,3616,4.029,3617,4.029,3618,4.029,3619,4.029,3620,4.029,3621,4.029,3622,4.029,3623,4.029,3624,4.029,3625,4.029,3626,4.029,3627,4.029,3628,4.029,3629,4.029]]],"invertedIndex":[["",{"_index":35,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"modules/GuardsModule.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"modules/TasksModule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":975,"title":{},"body":{"classes/CreateOptionDto.html":{},"guards/DicomWebGuard.html":{},"entities/Option.html":{},"injectables/OptionsService.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/QueuesQueryController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":3563,"title":{},"body":{"properties.html":{}}}],["0.11.2",{"_index":3336,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":3333,"title":{},"body":{"dependencies.html":{}}}],["0.2.1",{"_index":3358,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":3351,"title":{},"body":{"dependencies.html":{}}}],["0.3.17",{"_index":3359,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":3332,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":3342,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":3247,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":3295,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":3268,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":3234,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":3274,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":3240,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":3273,"title":{},"body":{"coverage.html":{}}}],["0/34",{"_index":3272,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":3241,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":3239,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":3269,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":3250,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":3244,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":3294,"title":{},"body":{"coverage.html":{}}}],["0})@column({name",{"_index":1743,"title":{},"body":{"entities/Option.html":{}}}],["0})@isnumber",{"_index":944,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["1",{"_index":1104,"title":{},"body":{"guards/DicomWebGuard.html":{},"entities/Option.html":{},"injectables/OptionsService.html":{}}}],["1.0.0",{"_index":3345,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":3343,"title":{},"body":{"dependencies.html":{}}}],["1.7.7",{"_index":3328,"title":{},"body":{"dependencies.html":{}}}],["1.8.0",{"_index":3346,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":3258,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":3249,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":3277,"title":{},"body":{"coverage.html":{}}}],["1/13",{"_index":3296,"title":{},"body":{"coverage.html":{}}}],["1/14",{"_index":3271,"title":{},"body":{"coverage.html":{}}}],["1/15",{"_index":3248,"title":{},"body":{"coverage.html":{}}}],["1/17",{"_index":3284,"title":{},"body":{"coverage.html":{}}}],["1/19",{"_index":3301,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":3256,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":3246,"title":{},"body":{"coverage.html":{}}}],["1/37",{"_index":3310,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":3267,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":3261,"title":{},"body":{"coverage.html":{}}}],["1/50",{"_index":3307,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":3238,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":3243,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":3262,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":3279,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":971,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{},"coverage.html":{}}}],["10.0.0",{"_index":3327,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":3323,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":3320,"title":{},"body":{"dependencies.html":{}}}],["10.2.1",{"_index":3316,"title":{},"body":{"dependencies.html":{}}}],["10.4.1",{"_index":3317,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":3257,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":3608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10})@isnumber",{"_index":972,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["11",{"_index":3278,"title":{},"body":{"coverage.html":{}}}],["1103.1210",{"_index":1124,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["12",{"_index":1007,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["14",{"_index":3242,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":3559,"title":{},"body":{"overview.html":{}}}],["16",{"_index":3237,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":3562,"title":{},"body":{"overview.html":{}}}],["1})@primarygeneratedcolumn({name",{"_index":1779,"title":{},"body":{"entities/Option.html":{}}}],["2",{"_index":702,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"guards/DicomWebGuard.html":{},"coverage.html":{},"overview.html":{}}}],["2.0.2",{"_index":3313,"title":{},"body":{"dependencies.html":{}}}],["2.0.4",{"_index":3319,"title":{},"body":{"dependencies.html":{}}}],["2.30.1",{"_index":3339,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":3330,"title":{},"body":{"dependencies.html":{}}}],["2/12",{"_index":3255,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":3260,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["200",{"_index":336,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["201",{"_index":328,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/ProcessingController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["22",{"_index":974,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{},"injectables/OptionsService.html":{}}}],["22})@column({name",{"_index":1737,"title":{},"body":{"entities/Option.html":{}}}],["22})@isnumber",{"_index":940,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["24",{"_index":77,"title":{},"body":{"injectables/AbstractQueueService.html":{},"miscellaneous/variables.html":{}}}],["25",{"_index":3266,"title":{},"body":{"coverage.html":{}}}],["29",{"_index":3560,"title":{},"body":{"overview.html":{}}}],["3",{"_index":1137,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["3.0.3",{"_index":3314,"title":{},"body":{"dependencies.html":{}}}],["3.2.3",{"_index":3318,"title":{},"body":{"dependencies.html":{}}}],["3.3.5",{"_index":3349,"title":{},"body":{"dependencies.html":{}}}],["3/6",{"_index":3236,"title":{},"body":{"coverage.html":{}}}],["302",{"_index":201,"title":{},"body":{"controllers/AppController.html":{}}}],["302)@apiexcludeendpoint",{"_index":191,"title":{},"body":{"controllers/AppController.html":{}}}],["33",{"_index":3245,"title":{},"body":{"coverage.html":{}}}],["3600",{"_index":75,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["39",{"_index":3561,"title":{},"body":{"overview.html":{}}}],["4",{"_index":1140,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["4.0.1",{"_index":3344,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":3325,"title":{},"body":{"dependencies.html":{}}}],["4.7.8",{"_index":3338,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":330,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["401",{"_index":338,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"classes/HttpClient.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["403",{"_index":2273,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["404",{"_index":1675,"title":{},"body":{"controllers/OauthConfigController.html":{},"controllers/RolesController.html":{}}}],["409",{"_index":367,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OauthConfigController.html":{},"controllers/UsersController.html":{}}}],["41",{"_index":1615,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["5",{"_index":3283,"title":{},"body":{"coverage.html":{}}}],["5.0.1",{"_index":3354,"title":{},"body":{"dependencies.html":{}}}],["5.1.6",{"_index":3356,"title":{},"body":{"dependencies.html":{}}}],["5.12.12",{"_index":3331,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":3235,"title":{},"body":{"coverage.html":{}}}],["5432",{"_index":298,"title":{},"body":{"modules/AppModule.html":{}}}],["6",{"_index":976,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{},"injectables/OptionsService.html":{},"coverage.html":{},"overview.html":{}}}],["6.9.14",{"_index":3341,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":3607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6379",{"_index":2356,"title":{},"body":{"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["6h",{"_index":491,"title":{},"body":{"modules/AuthModule.html":{}}}],["6})@column({name",{"_index":1740,"title":{},"body":{"entities/Option.html":{}}}],["6})@isnumber",{"_index":942,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["7",{"_index":3270,"title":{},"body":{"coverage.html":{}}}],["7.4.0",{"_index":3326,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":3352,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":3276,"title":{},"body":{"coverage.html":{}}}],["8.12.0",{"_index":3348,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1006,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["__getguards",{"_index":1856,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["abstract",{"_index":8,"title":{},"body":{"injectables/AbstractQueueService.html":{},"classes/QueryAnswer.html":{}}}],["abstractqueueservice",{"_index":1,"title":{"injectables/AbstractQueueService.html":{}},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"coverage.html":{}}}],["abstractqueueservice:103",{"_index":2658,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["abstractqueueservice:107",{"_index":2661,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["abstractqueueservice:14",{"_index":2655,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["abstractqueueservice:25",{"_index":2663,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["abstractqueueservice:40",{"_index":2660,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["abstractqueueservice:77",{"_index":2656,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["abstractqueueservice:8",{"_index":2664,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["abstractqueueservice:84",{"_index":2662,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["abstractqueueservice:92",{"_index":2659,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["abstractqueueservice:99",{"_index":2657,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["accept",{"_index":3619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["access",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AutoroutingsService.html":{},"injectables/LabelsService.html":{},"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["accessible",{"_index":1891,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["accession_nb",{"_index":2437,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["accession_nb'})@isstring",{"_index":2559,"title":{},"body":{"classes/QueryStudyDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["accession_number",{"_index":3393,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["accessionnb",{"_index":2438,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["accessionnumber",{"_index":2367,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"miscellaneous/enumerations.html":{}}}],["accesstoken",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{}}}],["acquisition_device_processing_description",{"_index":3430,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["acquisition_number",{"_index":3438,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["acquisitiondeviceprocessingdescription",{"_index":3431,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["acquisitionnumber",{"_index":3439,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["activate",{"_index":1847,"title":{},"body":{"interfaces/OrGuardOptions.html":{},"miscellaneous/functions.html":{}}}],["activated",{"_index":539,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingsService.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["activated'})@isboolean",{"_index":543,"title":{},"body":{"entities/Autorouting.html":{}}}],["activation",{"_index":1848,"title":{},"body":{"interfaces/OrGuardOptions.html":{},"miscellaneous/functions.html":{}}}],["active",{"_index":95,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["adapter",{"_index":1538,"title":{},"body":{"modules/MailModule.html":{}}}],["add",{"_index":2266,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{}}}],["addanonjob",{"_index":2590,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["addanonjob(queuesanonsdto",{"_index":2592,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["addbearerauth",{"_index":3581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["adddeletejob",{"_index":2677,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["adddeletejob(queuesdeletedto",{"_index":2679,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["added",{"_index":1694,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["added'})@apiresponse({status",{"_index":1667,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["addjob",{"_index":21,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["addjob(data",{"_index":39,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["addjob(request",{"_index":2264,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["addjob(userid",{"_index":2343,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["addlabeltorole",{"_index":2821,"title":{},"body":{"controllers/RolesController.html":{}}}],["addlabeltorole(rolename",{"_index":2826,"title":{},"body":{"controllers/RolesController.html":{}}}],["addoauthconfig",{"_index":1662,"title":{},"body":{"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{}}}],["addoauthconfig(@body",{"_index":1695,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["addoauthconfig(oauthconfigdto",{"_index":1665,"title":{},"body":{"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{}}}],["addqueryjob",{"_index":2716,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["addqueryjob(queuesquerydto",{"_index":2718,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["address",{"_index":1237,"title":{},"body":{"classes/HttpClient.html":{}}}],["addrolelabel",{"_index":2912,"title":{},"body":{"injectables/RolesService.html":{}}}],["addrolelabel(rolename",{"_index":2919,"title":{},"body":{"injectables/RolesService.html":{}}}],["admin",{"_index":142,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"classes/GetUserDto.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"entities/Role.html":{},"injectables/RolesService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["admin'})@column({name",{"_index":3109,"title":{},"body":{"entities/User.html":{}}}],["admin'})@primarycolumn({name",{"_index":2813,"title":{},"body":{"entities/Role.html":{}}}],["admin.controller",{"_index":2142,"title":{},"body":{"modules/OrthancModule.html":{}}}],["admin.controller.ts",{"_index":1887,"title":{},"body":{"controllers/OrthancAdminController.html":{},"coverage.html":{}}}],["admin.controller.ts:109",{"_index":1909,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:119",{"_index":1921,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:129",{"_index":1918,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:139",{"_index":1931,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:149",{"_index":1924,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:29",{"_index":1937,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:39",{"_index":1940,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:49",{"_index":1943,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:59",{"_index":1928,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:69",{"_index":1946,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:79",{"_index":1934,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:89",{"_index":1912,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["admin.controller.ts:99",{"_index":1915,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["adminguard",{"_index":137,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"modules/GuardsModule.html":{},"guards/ImportGuard.html":{},"controllers/LabelsController.html":{},"guards/ModifyGuard.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/ProcessingController.html":{},"guards/QueryGuard.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"guards/ReadAllGuard.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["administrator",{"_index":1511,"title":{},"body":{"classes/LoginDto.html":{}}}],["administrator'})@isnotempty",{"_index":1508,"title":{},"body":{"classes/LoginDto.html":{}}}],["administrator@gaelo.fr",{"_index":1510,"title":{},"body":{"classes/LoginDto.html":{},"injectables/UsersService.html":{}}}],["administrator@gaelo.fr'})@isnotempty",{"_index":1506,"title":{},"body":{"classes/LoginDto.html":{}}}],["administrators",{"_index":1892,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["aet",{"_index":689,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["aet'})@isstring",{"_index":2756,"title":{},"body":{"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["age",{"_index":74,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["agplv3",{"_index":3564,"title":{},"body":{"properties.html":{}}}],["all.controller",{"_index":2150,"title":{},"body":{"modules/OrthancModule.html":{}}}],["all.controller.ts",{"_index":2230,"title":{},"body":{"controllers/OrthancReadAllController.html":{},"coverage.html":{}}}],["all.controller.ts:28",{"_index":2250,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["all.controller.ts:38",{"_index":2238,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["all.controller.ts:48",{"_index":2241,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["all.controller.ts:55",{"_index":2244,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["all.controller.ts:65",{"_index":2247,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["alllabels",{"_index":1445,"title":{},"body":{"controllers/LabelsController.html":{}}}],["alllabels.map((label",{"_index":1447,"title":{},"body":{"controllers/LabelsController.html":{}}}],["allmodalities",{"_index":698,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["allmodalities.includes('ct",{"_index":704,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["allmodalities.includes('pt",{"_index":703,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["allmodalities.length",{"_index":701,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["allowemptyvalue",{"_index":1988,"title":{},"body":{"controllers/OrthancController.html":{}}}],["allroles",{"_index":2938,"title":{},"body":{"injectables/RolesService.html":{}}}],["allusers",{"_index":3145,"title":{},"body":{"controllers/UsersController.html":{}}}],["allusers.map((user",{"_index":3147,"title":{},"body":{"controllers/UsersController.html":{}}}],["already",{"_index":435,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{}}}],["amazing",{"_index":3537,"title":{},"body":{"index.html":{}}}],["anon",{"_index":14,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/QueuesAnonController.html":{}}}],["anon.ts",{"_index":2988,"title":{},"body":{"classes/TagAnon.html":{},"coverage.html":{}}}],["anon.ts:4",{"_index":2996,"title":{},"body":{"classes/TagAnon.html":{}}}],["anon.ts:5",{"_index":2995,"title":{},"body":{"classes/TagAnon.html":{}}}],["anon.ts:6",{"_index":2994,"title":{},"body":{"classes/TagAnon.html":{}}}],["anon/queue",{"_index":2580,"title":{},"body":{"modules/QueueModule.html":{}}}],["anonqueue",{"_index":2665,"title":{},"body":{"injectables/QueuesAnonService.html":{}}}],["anons.controller",{"_index":2581,"title":{},"body":{"modules/QueueModule.html":{}}}],["anons.controller.ts",{"_index":2588,"title":{},"body":{"controllers/QueuesAnonController.html":{},"coverage.html":{}}}],["anons.controller.ts:105",{"_index":2595,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["anons.controller.ts:139",{"_index":2602,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["anons.controller.ts:41",{"_index":2596,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["anons.controller.ts:52",{"_index":2599,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["anons.controller.ts:79",{"_index":2598,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["anons.dto",{"_index":2603,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["anons.dto.ts",{"_index":2633,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"coverage.html":{}}}],["anons.dto.ts:11",{"_index":2645,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["anons.dto.ts:15",{"_index":2635,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["anons.dto.ts:19",{"_index":2637,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["anons.dto.ts:23",{"_index":2639,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["anons.dto.ts:27",{"_index":2641,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["anons.dto.ts:36",{"_index":2673,"title":{},"body":{"classes/QueuesAnonsDto.html":{}}}],["anons.dto.ts:7",{"_index":2643,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["anons.service",{"_index":2585,"title":{},"body":{"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{}}}],["anons.service.ts",{"_index":2651,"title":{},"body":{"injectables/QueuesAnonService.html":{},"coverage.html":{}}}],["anons.service.ts:10",{"_index":2654,"title":{},"body":{"injectables/QueuesAnonService.html":{}}}],["anonymization",{"_index":2653,"title":{},"body":{"injectables/QueuesAnonService.html":{},"miscellaneous/functions.html":{}}}],["anonymize",{"_index":156,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"classes/CreateRoleDto.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"controllers/QueuesAnonController.html":{},"guards/ReadAllGuard.html":{},"entities/Role.html":{},"injectables/RolesService.html":{}}}],["anonymize.newaccessionnumber",{"_index":2623,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["anonymize.newpatientid",{"_index":2625,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["anonymize.newpatientname",{"_index":2627,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["anonymize.newstudydescription",{"_index":2629,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["anonymize.orthancstudyid",{"_index":2619,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["anonymize.profile",{"_index":2621,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["anonymizeguard",{"_index":157,"title":{"guards/AnonymizeGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"modules/GuardsModule.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"controllers/OrthancController.html":{},"guards/QueryGuard.html":{},"controllers/QueuesAnonController.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["anonymizes",{"_index":2615,"title":{},"body":{"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["anonymizes.foreach((anonymize",{"_index":2617,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["another",{"_index":1122,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["answer",{"_index":2014,"title":{},"body":{"controllers/OrthancController.html":{}}}],["answer.dto",{"_index":2200,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["answer.dto.ts",{"_index":2418,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"coverage.html":{}}}],["answer.dto.ts:12",{"_index":2528,"title":{},"body":{"classes/QuerySeriesDto.html":{}}}],["answer.dto.ts:16",{"_index":2530,"title":{},"body":{"classes/QuerySeriesDto.html":{}}}],["answer.dto.ts:20",{"_index":2532,"title":{},"body":{"classes/QuerySeriesDto.html":{}}}],["answer.dto.ts:24",{"_index":2536,"title":{},"body":{"classes/QuerySeriesDto.html":{}}}],["answer.dto.ts:28",{"_index":2534,"title":{},"body":{"classes/QuerySeriesDto.html":{}}}],["answer.dto.ts:34",{"_index":2565,"title":{},"body":{"classes/QueryStudyDto.html":{}}}],["answer.dto.ts:38",{"_index":2563,"title":{},"body":{"classes/QueryStudyDto.html":{}}}],["answer.dto.ts:42",{"_index":2567,"title":{},"body":{"classes/QueryStudyDto.html":{}}}],["answer.dto.ts:46",{"_index":2561,"title":{},"body":{"classes/QueryStudyDto.html":{}}}],["answer.dto.ts:50",{"_index":2569,"title":{},"body":{"classes/QueryStudyDto.html":{}}}],["answer.dto.ts:54",{"_index":2560,"title":{},"body":{"classes/QueryStudyDto.html":{}}}],["answer.dto.ts:58",{"_index":2571,"title":{},"body":{"classes/QueryStudyDto.html":{}}}],["answer.dto.ts:64",{"_index":2420,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{}}}],["answer.dto.ts:68",{"_index":2422,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{}}}],["answer.dto.ts:8",{"_index":2538,"title":{},"body":{"classes/QuerySeriesDto.html":{}}}],["answer/query",{"_index":2476,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"coverage.html":{}}}],["answer/query.answer.ts",{"_index":2366,"title":{},"body":{"classes/QueryAnswer.html":{},"coverage.html":{}}}],["answer/query.answer.ts:10",{"_index":2406,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:11",{"_index":2405,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:12",{"_index":2394,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:14",{"_index":2387,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:4",{"_index":2389,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:40",{"_index":2396,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:44",{"_index":2397,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:48",{"_index":2398,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:5",{"_index":2390,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:52",{"_index":2399,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:56",{"_index":2401,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:6",{"_index":2391,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:60",{"_index":2400,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:64",{"_index":2395,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:68",{"_index":2404,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:7",{"_index":2393,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:72",{"_index":2403,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:76",{"_index":2402,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:8",{"_index":2392,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answer/query.answer.ts:9",{"_index":2388,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["answerid",{"_index":2368,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["answernumber",{"_index":2369,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["answser",{"_index":1490,"title":{},"body":{"injectables/LabelsService.html":{}}}],["anyway",{"_index":1097,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["api",{"_index":743,"title":{},"body":{"controllers/AutoroutingsController.html":{},"injectables/OrthancMonitoringTask.html":{},"miscellaneous/variables.html":{}}}],["api;proto",{"_index":1264,"title":{},"body":{"classes/HttpClient.html":{}}}],["apibearerauth",{"_index":780,"title":{},"body":{"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["apibearerauth('access",{"_index":752,"title":{},"body":{"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["apibody",{"_index":378,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OauthConfigController.html":{},"controllers/RolesController.html":{}}}],["apiexcludeendpoint",{"_index":197,"title":{},"body":{"controllers/AppController.html":{}}}],["apioauth2",{"_index":379,"title":{},"body":{"controllers/AuthController.html":{}}}],["apioauth2(['openid",{"_index":410,"title":{},"body":{"controllers/AuthController.html":{}}}],["apioperation",{"_index":380,"title":{},"body":{"controllers/AuthController.html":{}}}],["apioperation({description",{"_index":352,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiparam",{"_index":781,"title":{},"body":{"controllers/AutoroutingsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OrthancController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["apiproperty",{"_index":559,"title":{},"body":{"entities/Autorouting.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"entities/OauthConfig.html":{},"classes/OauthConfigDto.html":{},"entities/Option.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/ProcessingJobDto.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesDeleteDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvJobDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/WithLabels.html":{}}}],["apiproperty()@column({name",{"_index":542,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Rule.html":{}}}],["apiproperty()@column({nullable",{"_index":3113,"title":{},"body":{"entities/User.html":{}}}],["apiproperty()@isinstance(role",{"_index":1175,"title":{},"body":{"classes/GetUserDto.html":{}}}],["apiproperty()@isnumber",{"_index":1172,"title":{},"body":{"classes/GetUserDto.html":{}}}],["apiproperty()@isnumber()@isnotempty",{"_index":868,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["apiproperty()@isobject",{"_index":2421,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{}}}],["apiproperty()@isstring",{"_index":1701,"title":{},"body":{"classes/OauthConfigDto.html":{}}}],["apiproperty()@isstring()@isnotempty",{"_index":866,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["apiproperty()@manytoone(undefined",{"_index":3105,"title":{},"body":{"entities/User.html":{}}}],["apiproperty()@primarygeneratedcolumn({name",{"_index":550,"title":{},"body":{"entities/Autorouting.html":{},"entities/User.html":{}}}],["apiproperty({example",{"_index":546,"title":{},"body":{"entities/Autorouting.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetOptionDto.html":{},"classes/GetUserDto.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"entities/OauthConfig.html":{},"entities/Option.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesDeleteDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{}}}],["apiproperty({required",{"_index":1165,"title":{},"body":{"classes/GetRoleDto.html":{},"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{}}}],["apiquery",{"_index":2286,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["apiresponse",{"_index":381,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["apiresponse({status",{"_index":327,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OauthConfigController.html":{}}}],["apis",{"_index":319,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancModifyController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["apitags",{"_index":382,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["apitags('auth",{"_index":400,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('autorouting",{"_index":785,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["apitags('labels",{"_index":1442,"title":{},"body":{"controllers/LabelsController.html":{}}}],["apitags('oauth",{"_index":1685,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["apitags('options",{"_index":1800,"title":{},"body":{"controllers/OptionsController.html":{}}}],["apitags('orthanc",{"_index":1949,"title":{},"body":{"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{}}}],["apitags('processing",{"_index":2288,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["apitags('queues/anon",{"_index":2604,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["apitags('queues/delete",{"_index":2690,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["apitags('queues/query",{"_index":2731,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["apitags('roles",{"_index":2859,"title":{},"body":{"controllers/RolesController.html":{}}}],["apitags('users",{"_index":3143,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":3474,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.close",{"_index":3589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.controller",{"_index":276,"title":{},"body":{"modules/AppModule.html":{}}}],["app.get(seederservice",{"_index":3626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.setglobalprefix('api",{"_index":3576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app_guard",{"_index":470,"title":{},"body":{"modules/AuthModule.html":{}}}],["app_interceptor",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":183,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":3508,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":205,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["archive",{"_index":2097,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["archive')@useguards(exportguard",{"_index":2073,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["args",{"_index":1307,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["array",{"_index":649,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"interfaces/OrGuardOptions.html":{},"miscellaneous/functions.html":{}}}],["array.from(new",{"_index":120,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["arraybuffer",{"_index":1270,"title":{},"body":{"classes/HttpClient.html":{}}}],["asked",{"_index":1091,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["associated",{"_index":1089,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["async",{"_index":20,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CheckLabelInRole.html":{},"guards/DicomWebGuard.html":{},"classes/HttpClient.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"controllers/OrthancController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueryQueueTask.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":1258,"title":{},"body":{"classes/HttpClient.html":{},"modules/MailModule.html":{}}}],["auth.controller",{"_index":475,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":389,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":315,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authentication",{"_index":317,"title":{},"body":{"controllers/AuthController.html":{}}}],["authguard",{"_index":1321,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('bearer",{"_index":1336,"title":{},"body":{"injectables/JwtOAuthGuard.html":{}}}],["authguard('jwt",{"_index":1316,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":1496,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":216,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":3545,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorization",{"_index":1389,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["authorizationurl",{"_index":1377,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"entities/OauthConfig.html":{},"classes/OauthConfigDto.html":{},"injectables/OauthConfigService.html":{},"interfaces/UserInfoResponse.html":{}}}],["authservice",{"_index":388,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":963,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["auto'})@column({default",{"_index":1769,"title":{},"body":{"entities/Option.html":{}}}],["auto'})@isstring",{"_index":964,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["auto_query",{"_index":2800,"title":{},"body":{"entities/Role.html":{}}}],["auto_query_hour_start",{"_index":1738,"title":{},"body":{"entities/Option.html":{}}}],["auto_query_hour_stop",{"_index":1741,"title":{},"body":{"entities/Option.html":{}}}],["auto_query_minute_start",{"_index":1744,"title":{},"body":{"entities/Option.html":{}}}],["auto_query_minute_stop",{"_index":1746,"title":{},"body":{"entities/Option.html":{}}}],["auto_routing",{"_index":2802,"title":{},"body":{"entities/Role.html":{}}}],["autoloadentities",{"_index":308,"title":{},"body":{"modules/AppModule.html":{}}}],["autoquery",{"_index":163,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"classes/CreateRoleDto.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"entities/Role.html":{},"injectables/RolesService.html":{}}}],["autoqueryguard",{"_index":164,"title":{"guards/AutoQueryGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"modules/GuardsModule.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"controllers/OrthancController.html":{},"controllers/OrthancQueryController.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["autoqueryhourstart",{"_index":923,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{},"injectables/OptionsService.html":{}}}],["autoqueryhourstop",{"_index":924,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{},"injectables/OptionsService.html":{}}}],["autoqueryminutestart",{"_index":925,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{},"injectables/OptionsService.html":{}}}],["autoqueryminutestop",{"_index":926,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{},"injectables/OptionsService.html":{}}}],["autorouter_started",{"_index":1749,"title":{},"body":{"entities/Option.html":{}}}],["autorouterstarted",{"_index":927,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["autorouting",{"_index":175,"title":{"entities/Autorouting.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateRoleDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"entities/Role.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"coverage.html":{}}}],["autorouting'})@apiresponse({status",{"_index":755,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["autorouting.activated",{"_index":737,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{}}}],["autorouting.dto",{"_index":784,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["autorouting.dto.ts",{"_index":916,"title":{},"body":{"classes/CreateAutoroutingDto.html":{},"coverage.html":{}}}],["autorouting.entity",{"_index":667,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"classes/CreateAutoroutingDto.html":{}}}],["autorouting.enum",{"_index":570,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"classes/Destination.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["autorouting.eventtype",{"_index":735,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autorouting.handler",{"_index":806,"title":{},"body":{"modules/AutoroutingsModule.html":{}}}],["autorouting.router.destinations",{"_index":731,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autorouting/autorouting.entity",{"_index":2970,"title":{},"body":{"modules/SeederModule.html":{}}}],["autorouting/autoroutings.module",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["autoroutingconfigs",{"_index":603,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autoroutingeventtype",{"_index":545,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"classes/Destination.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/Router.html":{},"classes/Rule.html":{},"miscellaneous/enumerations.html":{}}}],["autoroutingeventtype.new_instance",{"_index":595,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["autoroutingeventtype.new_patient",{"_index":656,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autoroutingeventtype.new_series",{"_index":652,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autoroutingeventtype.new_study",{"_index":654,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autoroutingeventtype.stable_patient",{"_index":660,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autoroutingeventtype.stable_series",{"_index":658,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autoroutingeventtype.stable_study",{"_index":659,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autoroutingguard",{"_index":176,"title":{"guards/AutoRoutingGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"controllers/AutoroutingsController.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"modules/GuardsModule.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["autoroutinghandler",{"_index":598,"title":{"injectables/AutoroutingHandler.html":{}},"body":{"injectables/AutoroutingHandler.html":{},"modules/AutoroutingsModule.html":{},"coverage.html":{},"overview.html":{}}}],["autoroutingmatches",{"_index":733,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autoroutingmatches.foreach((autorouting",{"_index":738,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["autoroutings.controller",{"_index":805,"title":{},"body":{"modules/AutoroutingsModule.html":{}}}],["autoroutings.service",{"_index":666,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{}}}],["autoroutingscontroller",{"_index":740,"title":{"controllers/AutoroutingsController.html":{}},"body":{"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"coverage.html":{}}}],["autoroutingservice",{"_index":621,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{}}}],["autoroutingsmodule",{"_index":217,"title":{"modules/AutoroutingsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AutoroutingsModule.html":{},"modules.html":{},"overview.html":{}}}],["autoroutingsrepository",{"_index":819,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["autoroutingsservice",{"_index":617,"title":{"injectables/AutoroutingsService.html":{}},"body":{"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":3557,"title":{},"body":{"modules.html":{}}}],["await",{"_index":71,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CheckLabelInRole.html":{},"guards/DicomWebGuard.html":{},"classes/HttpClient.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"controllers/OrthancController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueryQueueTask.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["axios",{"_index":1251,"title":{},"body":{"classes/HttpClient.html":{},"dependencies.html":{}}}],["axios.request(option).catch((error",{"_index":1268,"title":{},"body":{"classes/HttpClient.html":{}}}],["back",{"_index":1650,"title":{},"body":{"entities/OauthConfig.html":{},"injectables/OauthConfigService.html":{}}}],["backend",{"_index":2159,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["backers",{"_index":3538,"title":{},"body":{"index.html":{}}}],["bad",{"_index":331,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["badrequestexception",{"_index":375,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["badrequestexception(\"missing",{"_index":2873,"title":{},"body":{"controllers/RolesController.html":{}}}],["badrequestexception('confirmation",{"_index":449,"title":{},"body":{"controllers/AuthController.html":{}}}],["badrequestexception('invalid",{"_index":533,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('no",{"_index":2746,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["badrequestexception('role",{"_index":3170,"title":{},"body":{"controllers/UsersController.html":{}}}],["badrequestexception('token",{"_index":529,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('uuid",{"_index":2299,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["based",{"_index":2445,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["baseurl",{"_index":1256,"title":{},"body":{"classes/HttpClient.html":{}}}],["bcryptjs",{"_index":3329,"title":{},"body":{"dependencies.html":{}}}],["bcryptjs.compare(password",{"_index":3601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bcryptjs.gensalt",{"_index":3610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bcryptjs.hash(password",{"_index":3611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bearer",{"_index":357,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["bearerformat",{"_index":3583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["belonging",{"_index":1027,"title":{},"body":{"guards/DicomWebGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["belongs",{"_index":883,"title":{},"body":{"guards/CheckLabelInRole.html":{}}}],["between",{"_index":2460,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["between.ts",{"_index":3303,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["binary",{"_index":1294,"title":{},"body":{"classes/HttpClient.html":{}}}],["body",{"_index":350,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"classes/HttpClient.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["body_part_examined",{"_index":3408,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["bodypartexamined",{"_index":3409,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["bool",{"_index":1050,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["boolean",{"_index":149,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtOauthStrategy.html":{},"guards/ModifyGuard.html":{},"entities/Option.html":{},"interfaces/OrGuardOptions.html":{},"classes/ProcessingJobDto.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"entities/Role.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/GuardsModule.html":{},"modules/LabelsModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["break",{"_index":691,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["browse",{"_index":3555,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":3553,"title":{},"body":{"modules.html":{}}}],["buffer",{"_index":1254,"title":{},"body":{"classes/HttpClient.html":{}}}],["buffer.from(response.data",{"_index":1293,"title":{},"body":{"classes/HttpClient.html":{}}}],["bugfixed",{"_index":1132,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["build",{"_index":3584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builddocs",{"_index":3253,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["building",{"_index":3503,"title":{},"body":{"index.html":{}}}],["buildswagger",{"_index":3264,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["buildswagger(app",{"_index":3472,"title":{},"body":{"miscellaneous/functions.html":{}}}],["built",{"_index":3591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bullmq",{"_index":68,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"dependencies.html":{}}}],["burner_date_format",{"_index":1752,"title":{},"body":{"entities/Option.html":{}}}],["burner_delete_study_after_sent",{"_index":1754,"title":{},"body":{"entities/Option.html":{}}}],["burner_label_path",{"_index":1757,"title":{},"body":{"entities/Option.html":{}}}],["burner_manifacturer",{"_index":1760,"title":{},"body":{"entities/Option.html":{}}}],["burner_monitored_path",{"_index":1762,"title":{},"body":{"entities/Option.html":{}}}],["burner_monitoring_level",{"_index":1765,"title":{},"body":{"entities/Option.html":{}}}],["burner_started",{"_index":1767,"title":{},"body":{"entities/Option.html":{}}}],["burner_support_type",{"_index":1770,"title":{},"body":{"entities/Option.html":{}}}],["burner_transcoding",{"_index":1773,"title":{},"body":{"entities/Option.html":{}}}],["burner_transfer_syntax",{"_index":1775,"title":{},"body":{"entities/Option.html":{}}}],["burner_viewer_path",{"_index":1777,"title":{},"body":{"entities/Option.html":{}}}],["burnerdateformat",{"_index":928,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnerdeletestudyaftersent",{"_index":929,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnerlabelpath",{"_index":930,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnermanifacturer",{"_index":931,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnermonitoredpath",{"_index":932,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnermonitoringlevel",{"_index":933,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnerstarted",{"_index":934,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnersupporttype",{"_index":935,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnertranscoding",{"_index":936,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnertransfersyntax",{"_index":937,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["burnerviewerpath",{"_index":938,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["by=localhost;for=localhost;host",{"_index":1262,"title":{},"body":{"classes/HttpClient.html":{}}}],["called",{"_index":1025,"title":{},"body":{"guards/DicomWebGuard.html":{},"injectables/InstanceGuard.html":{}}}],["callhandler",{"_index":1635,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["calling",{"_index":901,"title":{},"body":{"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DicomWebGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["canactivate",{"_index":144,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/ModifyGuard.html":{},"interfaces/OrGuardOptions.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["canactivate(context",{"_index":145,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/ModifyGuard.html":{},"interfaces/OrGuardOptions.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["canactivatereturns",{"_index":1860,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["cardiac_number_of_images",{"_index":3412,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cardiacnumberofimages",{"_index":3413,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["case",{"_index":692,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"injectables/MaskProcessingService.html":{}}}],["catch",{"_index":1109,"title":{},"body":{"guards/DicomWebGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/SeriesGuard.html":{},"interfaces/UserInfoResponse.html":{},"miscellaneous/variables.html":{}}}],["catch((e",{"_index":725,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["catch(function",{"_index":1279,"title":{},"body":{"classes/HttpClient.html":{}}}],["catcherror",{"_index":1639,"title":{},"body":{"injectables/NotFoundInterceptor.html":{},"interfaces/OrGuardOptions.html":{}}}],["catcherror((err",{"_index":1876,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["catcherror((error",{"_index":1641,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["catches",{"_index":1623,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["cd_burner",{"_index":2804,"title":{},"body":{"entities/Role.html":{}}}],["cdburner",{"_index":172,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"classes/CreateRoleDto.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"entities/Role.html":{},"injectables/RolesService.html":{}}}],["cdburnerguard",{"_index":173,"title":{"guards/CdBurnerGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"modules/GuardsModule.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["change",{"_index":1553,"title":{},"body":{"injectables/MailService.html":{}}}],["changed",{"_index":445,"title":{},"body":{"controllers/AuthController.html":{}}}],["changed'})@apiresponse({status",{"_index":329,"title":{},"body":{"controllers/AuthController.html":{}}}],["changepassword",{"_index":320,"title":{},"body":{"controllers/AuthController.html":{}}}],["changepassword(changepassworddto",{"_index":325,"title":{},"body":{"controllers/AuthController.html":{}}}],["changepassworddto",{"_index":326,"title":{"classes/ChangePasswordDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/ChangePasswordDto.html":{},"coverage.html":{}}}],["changepassworddto})@public()@post('change",{"_index":333,"title":{},"body":{"controllers/AuthController.html":{}}}],["changepasswordurl",{"_index":1548,"title":{},"body":{"injectables/MailService.html":{}}}],["changes",{"_index":2157,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["changes.changes.foreach((element",{"_index":2172,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["changes.last",{"_index":2171,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["changetype",{"_index":2048,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["character",{"_index":864,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["check",{"_index":1090,"title":{},"body":{"guards/DicomWebGuard.html":{},"modules/GuardsModule.html":{}}}],["checkifuseridhasjobs",{"_index":22,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["checkifuseridhasjobs(userid",{"_index":45,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["checking",{"_index":881,"title":{},"body":{"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"injectables/OrthancMonitoringTask.html":{},"injectables/QueryQueueTask.html":{},"injectables/SeriesGuard.html":{},"miscellaneous/variables.html":{}}}],["checklabelinrole",{"_index":877,"title":{"guards/CheckLabelInRole.html":{}},"body":{"guards/CheckLabelInRole.html":{},"modules/GuardsModule.html":{},"controllers/OrthancController.html":{},"coverage.html":{}}}],["checklabelrolestudy",{"_index":1053,"title":{},"body":{"guards/DicomWebGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["checkuseridparamsguard",{"_index":898,"title":{"guards/CheckUserIdParamsGuard.html":{}},"body":{"guards/CheckUserIdParamsGuard.html":{},"modules/GuardsModule.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["checkuseridqueryguard",{"_index":906,"title":{"guards/CheckUserIdQueryGuard.html":{}},"body":{"guards/CheckUserIdQueryGuard.html":{},"modules/GuardsModule.html":{},"controllers/ProcessingController.html":{},"coverage.html":{}}}],["checkuserroleguard",{"_index":911,"title":{"guards/CheckUserRoleGuard.html":{}},"body":{"guards/CheckUserRoleGuard.html":{},"modules/GuardsModule.html":{},"controllers/RolesController.html":{},"coverage.html":{}}}],["cheking",{"_index":140,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["children",{"_index":98,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["class",{"_index":9,"title":{"classes/ChangePasswordDto.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"classes/IsNumberOrString.html":{},"classes/LabelDto.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"classes/OauthConfigDto.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesDeleteDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TagAnon.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"classes/WithLabels.html":{}},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"modules/GuardsModule.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"modules/TasksModule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":846,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"classes/IsNumberOrString.html":{},"classes/LabelDto.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"classes/OauthConfigDto.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesDeleteDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TagAnon.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"classes/WithLabels.html":{},"overview.html":{}}}],["client",{"_index":669,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"modules/AutoroutingsModule.html":{},"guards/DicomWebGuard.html":{},"modules/GuardsModule.html":{},"classes/HttpClient.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"guards/StudyGuard.html":{},"modules/TasksModule.html":{},"classes/TmtvService.html":{}}}],["client.ts",{"_index":3306,"title":{},"body":{"coverage.html":{}}}],["clientid",{"_index":1646,"title":{},"body":{"entities/OauthConfig.html":{},"classes/OauthConfigDto.html":{},"injectables/OauthConfigService.html":{}}}],["closequeueconnection",{"_index":23,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["cluster_appmodule",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":461,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":463,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":462,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":464,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_autoroutingsmodule",{"_index":802,"title":{},"body":{"modules/AutoroutingsModule.html":{},"overview.html":{}}}],["cluster_autoroutingsmodule_providers",{"_index":803,"title":{},"body":{"modules/AutoroutingsModule.html":{},"overview.html":{}}}],["cluster_guardsmodule",{"_index":1181,"title":{},"body":{"modules/GuardsModule.html":{},"overview.html":{}}}],["cluster_guardsmodule_imports",{"_index":1182,"title":{},"body":{"modules/GuardsModule.html":{}}}],["cluster_guardsmodule_providers",{"_index":1183,"title":{},"body":{"modules/GuardsModule.html":{},"overview.html":{}}}],["cluster_labelsmodule",{"_index":1462,"title":{},"body":{"modules/LabelsModule.html":{},"overview.html":{}}}],["cluster_labelsmodule_providers",{"_index":1463,"title":{},"body":{"modules/LabelsModule.html":{},"overview.html":{}}}],["cluster_oauthconfigmodule",{"_index":1706,"title":{},"body":{"modules/OauthConfigModule.html":{}}}],["cluster_oauthconfigmodule_providers",{"_index":1707,"title":{},"body":{"modules/OauthConfigModule.html":{}}}],["cluster_optionsmodule",{"_index":1811,"title":{},"body":{"modules/OptionsModule.html":{},"overview.html":{}}}],["cluster_optionsmodule_providers",{"_index":1812,"title":{},"body":{"modules/OptionsModule.html":{},"overview.html":{}}}],["cluster_orthancmodule",{"_index":2136,"title":{},"body":{"modules/OrthancModule.html":{}}}],["cluster_orthancmodule_imports",{"_index":2138,"title":{},"body":{"modules/OrthancModule.html":{}}}],["cluster_orthancmodule_providers",{"_index":2137,"title":{},"body":{"modules/OrthancModule.html":{}}}],["cluster_processingmodule",{"_index":2335,"title":{},"body":{"modules/ProcessingModule.html":{}}}],["cluster_processingmodule_providers",{"_index":2336,"title":{},"body":{"modules/ProcessingModule.html":{}}}],["cluster_queuemodule",{"_index":2572,"title":{},"body":{"modules/QueueModule.html":{},"overview.html":{}}}],["cluster_queuemodule_providers",{"_index":2573,"title":{},"body":{"modules/QueueModule.html":{},"overview.html":{}}}],["cluster_rolesmodule",{"_index":2905,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule_exports",{"_index":2906,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule_providers",{"_index":2907,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_seedermodule",{"_index":2964,"title":{},"body":{"modules/SeederModule.html":{},"overview.html":{}}}],["cluster_seedermodule_providers",{"_index":2965,"title":{},"body":{"modules/SeederModule.html":{},"overview.html":{}}}],["cluster_tasksmodule",{"_index":3000,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_exports",{"_index":3001,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_providers",{"_index":3002,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":3173,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":3174,"title":{},"body":{"modules/UsersModule.html":{}}}],["column",{"_index":556,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"entities/OauthConfig.html":{},"entities/Option.html":{},"entities/Role.html":{},"classes/Router.html":{},"classes/Rule.html":{},"entities/User.html":{}}}],["column({default",{"_index":1756,"title":{},"body":{"entities/Option.html":{}}}],["column({nullable",{"_index":3102,"title":{},"body":{"entities/User.html":{}}}],["communications",{"_index":1204,"title":{},"body":{"classes/HttpClient.html":{}}}],["comparepasswords",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["comparepasswords(pass",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{}}}],["comparepasswords(token",{"_index":532,"title":{},"body":{"injectables/AuthService.html":{}}}],["complete",{"_index":3629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["completed",{"_index":92,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["condition",{"_index":565,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{},"miscellaneous/enumerations.html":{}}}],["condition'})@isenum(condition",{"_index":2956,"title":{},"body":{"classes/Rule.html":{}}}],["condition.equals",{"_index":583,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["config",{"_index":486,"title":{},"body":{"modules/AuthModule.html":{},"classes/HttpClient.html":{},"injectables/JwtOauthStrategy.html":{},"modules/MailModule.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"interfaces/UserInfoResponse.html":{},"miscellaneous/variables.html":{}}}],["config.dto",{"_index":1684,"title":{},"body":{"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{}}}],["config.dto.ts",{"_index":1700,"title":{},"body":{"classes/OauthConfigDto.html":{},"coverage.html":{}}}],["config.dto.ts:11",{"_index":1705,"title":{},"body":{"classes/OauthConfigDto.html":{}}}],["config.dto.ts:15",{"_index":1702,"title":{},"body":{"classes/OauthConfigDto.html":{}}}],["config.dto.ts:19",{"_index":1703,"title":{},"body":{"classes/OauthConfigDto.html":{}}}],["config.dto.ts:7",{"_index":1704,"title":{},"body":{"classes/OauthConfigDto.html":{}}}],["config.entity",{"_index":482,"title":{},"body":{"modules/AuthModule.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"modules/SeederModule.html":{}}}],["config.entity.ts",{"_index":1645,"title":{},"body":{"entities/OauthConfig.html":{},"coverage.html":{}}}],["config.entity.ts:12",{"_index":1656,"title":{},"body":{"entities/OauthConfig.html":{}}}],["config.entity.ts:18",{"_index":1649,"title":{},"body":{"entities/OauthConfig.html":{}}}],["config.entity.ts:22",{"_index":1652,"title":{},"body":{"entities/OauthConfig.html":{}}}],["config.entity.ts:8",{"_index":1654,"title":{},"body":{"entities/OauthConfig.html":{}}}],["config.get('jwt_secret",{"_index":488,"title":{},"body":{"modules/AuthModule.html":{}}}],["config.get('mail_encryption",{"_index":1528,"title":{},"body":{"modules/MailModule.html":{}}}],["config.get('mail_host",{"_index":1525,"title":{},"body":{"modules/MailModule.html":{}}}],["config.get('mail_password",{"_index":1531,"title":{},"body":{"modules/MailModule.html":{}}}],["config.get('mail_port",{"_index":1526,"title":{},"body":{"modules/MailModule.html":{}}}],["config.get('mail_user",{"_index":1530,"title":{},"body":{"modules/MailModule.html":{}}}],["configmodule",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{}}}],["configmodule.forroot",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["configs.controller",{"_index":1709,"title":{},"body":{"modules/OauthConfigModule.html":{}}}],["configs.controller.ts",{"_index":1661,"title":{},"body":{"controllers/OauthConfigController.html":{},"coverage.html":{}}}],["configs.controller.ts:41",{"_index":1683,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["configs.controller.ts:52",{"_index":1679,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["configs.controller.ts:66",{"_index":1672,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["configs.module",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["configs.module.ts",{"_index":1708,"title":{},"body":{"modules/OauthConfigModule.html":{}}}],["configs.service",{"_index":484,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/OauthConfigController.html":{},"modules/OauthConfigModule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"interfaces/UserInfoResponse.html":{}}}],["configs.service.ts",{"_index":1711,"title":{},"body":{"injectables/OauthConfigService.html":{},"coverage.html":{}}}],["configs.service.ts:12",{"_index":1716,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["configs.service.ts:18",{"_index":1723,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["configs.service.ts:25",{"_index":1721,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["configs.service.ts:34",{"_index":1724,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["configs.service.ts:38",{"_index":1719,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["configs.service.ts:42",{"_index":1718,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["configs.service.ts:49",{"_index":1725,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["configs/oauth",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtOauthStrategy.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"interfaces/UserInfoResponse.html":{},"coverage.html":{}}}],["configservice",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"miscellaneous/functions.html":{}}}],["configservice.get",{"_index":290,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('jwt_secret",{"_index":1405,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["configservice.get('redis_address",{"_index":2667,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["configservice.get('redis_port",{"_index":2669,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["configservice.get('typeorm_database",{"_index":304,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('typeorm_host",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('typeorm_password",{"_index":302,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('typeorm_port",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('typeorm_username",{"_index":300,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":1375,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["configure",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["confirmationpassword",{"_index":448,"title":{},"body":{"controllers/AuthController.html":{},"classes/ChangePasswordDto.html":{}}}],["confirmationtoken",{"_index":440,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["conflict",{"_index":429,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["conflict'})@apibody({type",{"_index":368,"title":{},"body":{"controllers/AuthController.html":{}}}],["conflict'})@useguards(adminguard)@post",{"_index":3126,"title":{},"body":{"controllers/UsersController.html":{}}}],["conflictexception",{"_index":376,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{}}}],["conflictexception('a",{"_index":434,"title":{},"body":{"controllers/AuthController.html":{}}}],["conflictexception('email",{"_index":3162,"title":{},"body":{"controllers/UsersController.html":{}}}],["conflictexception('label",{"_index":1459,"title":{},"body":{"controllers/LabelsController.html":{},"injectables/RolesService.html":{}}}],["conflictexception('oauth",{"_index":1698,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["conflictexception('role",{"_index":2877,"title":{},"body":{"controllers/RolesController.html":{}}}],["connect/auth",{"_index":1658,"title":{},"body":{"entities/OauthConfig.html":{},"injectables/OauthConfigService.html":{}}}],["connect/auth'})@column",{"_index":1648,"title":{},"body":{"entities/OauthConfig.html":{}}}],["connection",{"_index":2355,"title":{},"body":{"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["connexion",{"_index":3481,"title":{},"body":{"miscellaneous/functions.html":{}}}],["console.error(\"can't",{"_index":688,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["console.error('invalid",{"_index":705,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["console.error('tmtv",{"_index":694,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["console.error(error",{"_index":1281,"title":{},"body":{"classes/HttpClient.html":{}}}],["console.log('documentation",{"_index":3590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log('seeding",{"_index":3628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":78,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"guards/QueryGuard.html":{},"injectables/QueryQueueTask.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"guards/ReadAllGuard.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constants/constants",{"_index":1324,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["constants/enums",{"_index":675,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"injectables/MaskProcessingService.html":{},"controllers/OrthancQueryController.html":{},"classes/ProcessingJobDto.html":{},"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"classes/TagAnon.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{}}}],["constructor",{"_index":30,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DicomWebGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor(@inject(moduleref",{"_index":1853,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["constructor(answerid",{"_index":2485,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["constructor(authservice",{"_index":1498,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(autoroutingservice",{"_index":616,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["constructor(autoroutingsrepository",{"_index":814,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["constructor(configservice",{"_index":1396,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["constructor(id",{"_index":2317,"title":{},"body":{"classes/ProcessingFile.html":{}}}],["constructor(jwtservice",{"_index":1347,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["constructor(labelsrepository",{"_index":1472,"title":{},"body":{"injectables/LabelsService.html":{}}}],["constructor(level",{"_index":2385,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["constructor(mailerservice",{"_index":1543,"title":{},"body":{"injectables/MailService.html":{}}}],["constructor(oauthconfigsrepository",{"_index":1715,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["constructor(optionrepository",{"_index":2447,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["constructor(optionsrepository",{"_index":1820,"title":{},"body":{"injectables/OptionsService.html":{}}}],["constructor(orthancclient",{"_index":1035,"title":{},"body":{"guards/DicomWebGuard.html":{},"injectables/OrthancMonitoringTask.html":{},"classes/TmtvService.html":{}}}],["constructor(private",{"_index":787,"title":{},"body":{"controllers/AutoroutingsController.html":{},"guards/CheckLabelInRole.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LocalStrategy.html":{},"injectables/MaskProcessingService.html":{},"controllers/OauthConfigController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["constructor(processingservice",{"_index":1573,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["constructor(queue",{"_index":31,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["constructor(reflector",{"_index":1317,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["constructor(rolesrepository",{"_index":2916,"title":{},"body":{"injectables/RolesService.html":{}}}],["constructor(rolesservice",{"_index":885,"title":{},"body":{"guards/CheckLabelInRole.html":{},"injectables/SeederService.html":{},"guards/StudyGuard.html":{}}}],["constructor(tag",{"_index":2992,"title":{},"body":{"classes/TagAnon.html":{}}}],["constructor(usersrepository",{"_index":3182,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{}}}],["consumer",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(logger).forroutes",{"_index":311,"title":{},"body":{"modules/AppModule.html":{}}}],["contain",{"_index":857,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["contains",{"_index":1819,"title":{},"body":{"injectables/OptionsService.html":{}}}],["content",{"_index":3617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["context",{"_index":148,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"interfaces/OrGuardOptions.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["context.getclass",{"_index":1329,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.gethandler",{"_index":1328,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":153,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["contrast_bolus_agent",{"_index":3432,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["contrastbolusagent",{"_index":3433,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["controller",{"_index":182,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('/autorouting",{"_index":786,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["controller('/labels",{"_index":1443,"title":{},"body":{"controllers/LabelsController.html":{}}}],["controller('/options",{"_index":1801,"title":{},"body":{"controllers/OptionsController.html":{}}}],["controller('/processing",{"_index":2289,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["controller('/queues/anon",{"_index":2605,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["controller('/queues/delete",{"_index":2691,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["controller('/queues/query",{"_index":2732,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["controller('/roles",{"_index":2860,"title":{},"body":{"controllers/RolesController.html":{}}}],["controller('/users",{"_index":3144,"title":{},"body":{"controllers/UsersController.html":{}}}],["controller('oauth",{"_index":1686,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["controllers",{"_index":184,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"modules/GuardsModule.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"controllers/OauthConfigController.html":{},"modules/OauthConfigModule.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":3230,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":754,"title":{},"body":{"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateOptionDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":1457,"title":{},"body":{"controllers/LabelsController.html":{}}}],["create(autorouting",{"_index":820,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["create(label",{"_index":1475,"title":{},"body":{"injectables/LabelsService.html":{}}}],["create(labeldto",{"_index":1425,"title":{},"body":{"controllers/LabelsController.html":{}}}],["create(role",{"_index":2921,"title":{},"body":{"injectables/RolesService.html":{}}}],["create(user",{"_index":3185,"title":{},"body":{"injectables/UsersService.html":{}}}],["createarchive",{"_index":2064,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createarchive(request",{"_index":2071,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createautorouting",{"_index":745,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["createautorouting(createautoroutingdto",{"_index":750,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["createautoroutingdto",{"_index":751,"title":{"classes/CreateAutoroutingDto.html":{}},"body":{"controllers/AutoroutingsController.html":{},"classes/CreateAutoroutingDto.html":{},"coverage.html":{}}}],["createconfirmationtoken",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{}}}],["createconfirmationtoken(user",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{}}}],["createdfiles",{"_index":3014,"title":{},"body":{"classes/TmtvService.html":{}}}],["createdicom",{"_index":2105,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["createdicom(request",{"_index":2107,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["createecho",{"_index":1893,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["createecho(request",{"_index":1906,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["createinstances",{"_index":2106,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["createinstances(request",{"_index":2110,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["createjobs",{"_index":1894,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["createjobs(request",{"_index":1910,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["createmedia",{"_index":2065,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createmedia(request",{"_index":2075,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createmediaextended",{"_index":2066,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createmediaextended(request",{"_index":2078,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createmodalitiesexport",{"_index":2067,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createmodalitiesexport(request",{"_index":2082,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createmodalitiesquery",{"_index":2178,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["createmodalitiesquery(request",{"_index":2181,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["createoptiondto",{"_index":920,"title":{"classes/CreateOptionDto.html":{}},"body":{"classes/CreateOptionDto.html":{},"classes/GetOptionDto.html":{},"classes/UpdateOptionDto.html":{},"coverage.html":{}}}],["createpatientsmodify",{"_index":2120,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["createpatientsmodify(request",{"_index":2123,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["createpeersstore",{"_index":2068,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createpeersstore(request",{"_index":2085,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createrole",{"_index":2822,"title":{},"body":{"controllers/RolesController.html":{}}}],["createrole(@body",{"_index":2871,"title":{},"body":{"controllers/RolesController.html":{}}}],["createrole(createroledto",{"_index":2831,"title":{},"body":{"controllers/RolesController.html":{}}}],["createroledto",{"_index":977,"title":{"classes/CreateRoleDto.html":{}},"body":{"classes/CreateRoleDto.html":{},"classes/GetRoleDto.html":{},"controllers/RolesController.html":{},"coverage.html":{}}}],["createroledto.name",{"_index":2872,"title":{},"body":{"controllers/RolesController.html":{}}}],["createroledto})@post",{"_index":2833,"title":{},"body":{"controllers/RolesController.html":{}}}],["createseries",{"_index":3015,"title":{},"body":{"classes/TmtvService.html":{}}}],["createseriesfromorthanc(this.ctorthancseriesid",{"_index":3059,"title":{},"body":{"classes/TmtvService.html":{}}}],["createseriesfromorthanc(this.ptorthancseriesid",{"_index":3063,"title":{},"body":{"classes/TmtvService.html":{}}}],["createseriesmodify",{"_index":2121,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["createseriesmodify(request",{"_index":2126,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["createstudiesmodify",{"_index":2122,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["createstudiesmodify(request",{"_index":2129,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["createtasksuserexport",{"_index":2069,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createtasksuserexport(request",{"_index":2088,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["createuser",{"_index":3120,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuser(@body",{"_index":3168,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuser(userdto",{"_index":3123,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuserdto",{"_index":993,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["credentials",{"_index":1285,"title":{},"body":{"classes/HttpClient.html":{}}}],["cron",{"_index":2165,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{},"injectables/QueryQueueTask.html":{}}}],["cron(cronexpression.every_10_seconds",{"_index":2163,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["cron(cronexpression.every_minute",{"_index":2452,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["cronexpression",{"_index":2166,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{},"injectables/QueryQueueTask.html":{}}}],["cronjob",{"_index":2154,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{},"injectables/QueryQueueTask.html":{}}}],["crypto.randombytes(32).tostring('hex",{"_index":3603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["css",{"_index":3334,"title":{},"body":{"dependencies.html":{}}}],["ct",{"_index":709,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["ctorthancseriesid",{"_index":717,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{}}}],["ctresponse",{"_index":3056,"title":{},"body":{"classes/TmtvService.html":{}}}],["ctseriesid",{"_index":707,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/TmtvService.html":{}}}],["currenthour",{"_index":2462,"title":{},"body":{"injectables/QueryQueueTask.html":{},"miscellaneous/functions.html":{}}}],["currently",{"_index":3497,"title":{},"body":{"miscellaneous/functions.html":{}}}],["currentminute",{"_index":2464,"title":{},"body":{"injectables/QueryQueueTask.html":{},"miscellaneous/functions.html":{}}}],["custom",{"_index":1966,"title":{},"body":{"controllers/OrthancController.html":{}}}],["data",{"_index":42,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"classes/HttpClient.html":{},"injectables/LabelsService.html":{},"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["data.uuid",{"_index":117,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["data['jobid",{"_index":87,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["data['userid",{"_index":85,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["data['uuid",{"_index":83,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["database",{"_index":303,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/AutoroutingsService.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":528,"title":{},"body":{"injectables/AuthService.html":{},"classes/OrthancEventPayloadDto.html":{},"entities/User.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["date().gethours",{"_index":2463,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["date().getminutes",{"_index":2465,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["date(date.now",{"_index":3606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declarations",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/GuardsModule.html":{},"modules/LabelsModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decoded",{"_index":1381,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["decorators",{"_index":187,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingJobDto.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvJobDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"classes/WithLabels.html":{}}}],["default",{"_index":56,"title":{},"body":{"injectables/AbstractQueueService.html":{},"modules/AppModule.html":{},"injectables/AutoroutingHandler.html":{},"classes/CreateOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/HttpClient.html":{},"entities/Label.html":{},"injectables/MaskProcessingService.html":{},"entities/Option.html":{},"injectables/OrthancMonitoringTask.html":{},"classes/ProcessingJobDto.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"classes/QueuesQueryDto.html":{},"injectables/QueuesQueryService.html":{},"entities/Role.html":{},"classes/TagAnon.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"miscellaneous/variables.html":{}}}],["defaultmessage",{"_index":1303,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["defaultmessage(args",{"_index":1304,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["defaults",{"_index":1532,"title":{},"body":{"modules/MailModule.html":{}}}],["defer",{"_index":1839,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["deferguard",{"_index":1868,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["defined",{"_index":32,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{}}}],["definition",{"_index":3479,"title":{},"body":{"miscellaneous/functions.html":{}}}],["delayed",{"_index":94,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["delete",{"_index":16,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"controllers/AutoroutingsController.html":{},"guards/CdBurnerGuard.html":{},"classes/CreateRoleDto.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"controllers/LabelsController.html":{},"guards/ModifyGuard.html":{},"controllers/OauthConfigController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"guards/QueryGuard.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"guards/ReadAllGuard.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"miscellaneous/functions.html":{}}}],["delete('/:id",{"_index":792,"title":{},"body":{"controllers/AutoroutingsController.html":{},"controllers/UsersController.html":{}}}],["delete('/:labelname",{"_index":1453,"title":{},"body":{"controllers/LabelsController.html":{}}}],["delete('/:name",{"_index":2879,"title":{},"body":{"controllers/RolesController.html":{}}}],["delete('/:rolename/labels/:label",{"_index":2901,"title":{},"body":{"controllers/RolesController.html":{}}}],["delete('/modalities",{"_index":1958,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["delete('/patients",{"_index":2042,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["delete('/peers",{"_index":1961,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["delete('/series",{"_index":2045,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["delete('/studies",{"_index":2044,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["delete('/studies/*/labels",{"_index":2253,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["delete(':name",{"_index":1689,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["delete(':uuid",{"_index":2310,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["delete(@param('id",{"_index":3165,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(@param('name",{"_index":2880,"title":{},"body":{"controllers/RolesController.html":{}}}],["delete(id",{"_index":3129,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(name",{"_index":2835,"title":{},"body":{"controllers/RolesController.html":{}}}],["delete.controller",{"_index":2144,"title":{},"body":{"modules/OrthancModule.html":{}}}],["delete.controller.ts",{"_index":2027,"title":{},"body":{"controllers/OrthancDeleteController.html":{},"coverage.html":{}}}],["delete.controller.ts:25",{"_index":2035,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["delete.controller.ts:35",{"_index":2041,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["delete.controller.ts:45",{"_index":2038,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["delete/queue",{"_index":2582,"title":{},"body":{"modules/QueueModule.html":{}}}],["deleteallressources",{"_index":3016,"title":{},"body":{"classes/TmtvService.html":{}}}],["deleteautorouting",{"_index":746,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["deleteautorouting(@param('id",{"_index":793,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["deleteautorouting(id",{"_index":759,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["deleted",{"_index":1688,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["deleted'})@apiresponse({status",{"_index":1674,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["deleteguard",{"_index":166,"title":{"guards/DeleteGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"modules/GuardsModule.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"guards/QueryGuard.html":{},"controllers/QueuesDeleteController.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["deletelabels",{"_index":2231,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["deletelabels(request",{"_index":2236,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["deletemodality",{"_index":1895,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["deletemodality(request",{"_index":1913,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["deleteoauthconfig",{"_index":1663,"title":{},"body":{"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{}}}],["deleteoauthconfig(@param('name",{"_index":1690,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["deleteoauthconfig(name",{"_index":1673,"title":{},"body":{"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{}}}],["deletepatients",{"_index":2030,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["deletepatients(request",{"_index":2033,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["deletepeer",{"_index":1896,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["deletepeer(request",{"_index":1916,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["deletequeue",{"_index":2711,"title":{},"body":{"injectables/QueuesDeleteService.html":{}}}],["deletes.controller",{"_index":2583,"title":{},"body":{"modules/QueueModule.html":{}}}],["deletes.controller.ts",{"_index":2675,"title":{},"body":{"controllers/QueuesDeleteController.html":{},"coverage.html":{}}}],["deletes.controller.ts:106",{"_index":2682,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["deletes.controller.ts:133",{"_index":2688,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["deletes.controller.ts:40",{"_index":2683,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["deletes.controller.ts:51",{"_index":2685,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["deletes.controller.ts:78",{"_index":2684,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["deletes.dto",{"_index":2689,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["deletes.dto.ts",{"_index":2704,"title":{},"body":{"classes/QueuesDeleteDto.html":{},"coverage.html":{}}}],["deletes.dto.ts:6",{"_index":2706,"title":{},"body":{"classes/QueuesDeleteDto.html":{}}}],["deletes.service",{"_index":2586,"title":{},"body":{"modules/QueueModule.html":{},"controllers/QueuesDeleteController.html":{}}}],["deletes.service.ts",{"_index":2709,"title":{},"body":{"injectables/QueuesDeleteService.html":{},"coverage.html":{}}}],["deletes.service.ts:10",{"_index":2710,"title":{},"body":{"injectables/QueuesDeleteService.html":{}}}],["deleteseries",{"_index":2031,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["deleteseries(request",{"_index":2036,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["deletestudies",{"_index":2032,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["deletestudies(request",{"_index":2039,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["deleting",{"_index":2028,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["deny",{"_index":360,"title":{},"body":{"controllers/AuthController.html":{}}}],["dependencies",{"_index":207,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/GuardsModule.html":{},"modules/LabelsModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":7,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"guards/QueryGuard.html":{},"injectables/QueryQueueTask.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"guards/ReadAllGuard.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TmtvService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["destination",{"_index":585,"title":{"classes/Destination.html":{}},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{},"coverage.html":{}}}],["destinations",{"_index":594,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["destinationtype",{"_index":566,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{},"miscellaneous/enumerations.html":{}}}],["destinationtype.aet",{"_index":586,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["destinationtype.peer",{"_index":722,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["destinationtype.tmtvjob",{"_index":693,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["development",{"_index":3515,"title":{},"body":{"index.html":{}}}],["dicom",{"_index":1023,"title":{},"body":{"guards/DicomWebGuard.html":{},"modules/GuardsModule.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"injectables/SeriesGuard.html":{}}}],["dicom')@useguards(importguard",{"_index":2108,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["dicom_tag",{"_index":577,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["dicom_tag'})@isenum(dicomtag",{"_index":2958,"title":{},"body":{"classes/Rule.html":{}}}],["dicoms",{"_index":3054,"title":{},"body":{"classes/TmtvService.html":{}}}],["dicomstudy",{"_index":2983,"title":{},"body":{"guards/StudyGuard.html":{}}}],["dicomtag",{"_index":567,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{},"miscellaneous/enumerations.html":{}}}],["dicomtag.patient_name",{"_index":576,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["dicomwebguard",{"_index":1018,"title":{"guards/DicomWebGuard.html":{}},"body":{"guards/DicomWebGuard.html":{},"modules/GuardsModule.html":{},"controllers/OrthancController.html":{},"coverage.html":{}}}],["different",{"_index":3379,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["digit",{"_index":862,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["dir",{"_index":1535,"title":{},"body":{"modules/MailModule.html":{}}}],["disable",{"_index":766,"title":{},"body":{"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{}}}],["disable(id",{"_index":822,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["disableautorouting",{"_index":747,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["disableautorouting(@param('id",{"_index":800,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["disableautorouting(id",{"_index":765,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["discuss",{"_index":1125,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["docs/oauth2",{"_index":203,"title":{},"body":{"controllers/AppController.html":{}}}],["document",{"_index":3585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":3231,"title":{},"body":{"coverage.html":{}}}],["documentbuilder",{"_index":3577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["doe",{"_index":1001,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{}}}],["doe'})@column({name",{"_index":3100,"title":{},"body":{"entities/User.html":{}}}],["don't",{"_index":2307,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["doreverseproxy",{"_index":1947,"title":{},"body":{"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["doreverseproxy(request",{"_index":1951,"title":{},"body":{"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{}}}],["dto/change",{"_index":394,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/create",{"_index":783,"title":{},"body":{"controllers/AutoroutingsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["dto/get",{"_index":1799,"title":{},"body":{"controllers/OptionsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["dto/login.dto",{"_index":393,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/lost",{"_index":399,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/orthanc",{"_index":663,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["dto/query",{"_index":2198,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["dto/register.dto",{"_index":398,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/update",{"_index":1798,"title":{},"body":{"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"controllers/UsersController.html":{}}}],["dto/with",{"_index":2857,"title":{},"body":{"controllers/RolesController.html":{}}}],["e",{"_index":690,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["e2e",{"_index":3526,"title":{},"body":{"index.html":{}}}],["each",{"_index":593,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["editmodality",{"_index":1897,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["editmodality(request",{"_index":1919,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["editpeer",{"_index":1898,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["editpeer(request",{"_index":1922,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["efficient",{"_index":3504,"title":{},"body":{"index.html":{}}}],["element",{"_index":2175,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["element.changetype",{"_index":2174,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["email",{"_index":346,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"injectables/MailService.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["email_verified",{"_index":1367,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["emitter",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"injectables/OrthancMonitoringTask.html":{},"dependencies.html":{}}}],["emitting",{"_index":2158,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["enable",{"_index":770,"title":{},"body":{"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{}}}],["enable(id",{"_index":824,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["enableautorouting",{"_index":748,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["enableautorouting(@param('id",{"_index":797,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["enableautorouting(id",{"_index":769,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["end",{"_index":1659,"title":{},"body":{"entities/OauthConfig.html":{},"injectables/OauthConfigService.html":{}}}],["end'})@column",{"_index":1651,"title":{},"body":{"entities/OauthConfig.html":{}}}],["endhour",{"_index":3484,"title":{},"body":{"miscellaneous/functions.html":{}}}],["endminute",{"_index":3485,"title":{},"body":{"miscellaneous/functions.html":{}}}],["endstudyinstanceuidposition",{"_index":1076,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["entities",{"_index":537,"title":{},"body":{"entities/Autorouting.html":{},"entities/Label.html":{},"entities/OauthConfig.html":{},"entities/Option.html":{},"entities/Role.html":{},"entities/User.html":{},"overview.html":{}}}],["entity",{"_index":536,"title":{"entities/Autorouting.html":{},"entities/Label.html":{},"entities/OauthConfig.html":{},"entities/Option.html":{},"entities/Role.html":{},"entities/User.html":{}},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"entities/Label.html":{},"entities/OauthConfig.html":{},"entities/Option.html":{},"entities/Role.html":{},"classes/Router.html":{},"classes/Rule.html":{},"entities/User.html":{},"coverage.html":{}}}],["entitynotfounderror",{"_index":1624,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["enum",{"_index":2326,"title":{},"body":{"classes/ProcessingJobDto.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/TmtvJobDto.html":{}}}],["enumerations",{"_index":3361,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":285,"title":{},"body":{"modules/AppModule.html":{}}}],["env.dev",{"_index":284,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["epson",{"_index":954,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["epson'})@column({default",{"_index":1759,"title":{},"body":{"entities/Option.html":{}}}],["epson'})@isstring",{"_index":955,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["equals",{"_index":3378,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["err",{"_index":1878,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["error",{"_index":1280,"title":{},"body":{"classes/HttpClient.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/NotFoundInterceptor.html":{},"interfaces/UserInfoResponse.html":{}}}],["error('invalid",{"_index":1605,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["error('no",{"_index":1067,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["error(error",{"_index":1269,"title":{},"body":{"classes/HttpClient.html":{}}}],["error.response",{"_index":1282,"title":{},"body":{"classes/HttpClient.html":{}}}],["error.response.status",{"_index":1283,"title":{},"body":{"classes/HttpClient.html":{}}}],["event",{"_index":664,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/OrthancEventPayloadDto.html":{},"coverage.html":{}}}],["event_type",{"_index":596,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["event_type'})@isenum(autoroutingeventtype",{"_index":548,"title":{},"body":{"entities/Autorouting.html":{}}}],["eventemitter",{"_index":816,"title":{},"body":{"injectables/AutoroutingsService.html":{},"injectables/OrthancMonitoringTask.html":{}}}],["eventemitter2",{"_index":817,"title":{},"body":{"injectables/AutoroutingsService.html":{},"injectables/OrthancMonitoringTask.html":{}}}],["eventemittermodule",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["eventemittermodule.forroot",{"_index":279,"title":{},"body":{"modules/AppModule.html":{}}}],["events",{"_index":2155,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["eventtype",{"_index":540,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingsService.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["example",{"_index":575,"title":{},"body":{"entities/Autorouting.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetUserDto.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"entities/OauthConfig.html":{},"entities/Option.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesDeleteDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/WithLabels.html":{},"index.html":{}}}],["example.com",{"_index":1139,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["exceptions",{"_index":1625,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["exclude",{"_index":1784,"title":{},"body":{"entities/Option.html":{},"entities/User.html":{}}}],["execute",{"_index":602,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"injectables/SeederService.html":{},"miscellaneous/variables.html":{}}}],["executioncontext",{"_index":146,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"interfaces/OrGuardOptions.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["exist",{"_index":436,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RolesController.html":{}}}],["existinguser",{"_index":3159,"title":{},"body":{"controllers/UsersController.html":{}}}],["existinguser.id",{"_index":3161,"title":{},"body":{"controllers/UsersController.html":{}}}],["exists",{"_index":1460,"title":{},"body":{"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["exists'})@apibearerauth('access",{"_index":1669,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["exit(0",{"_index":3593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expired",{"_index":530,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresin",{"_index":490,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":69,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"modules/GuardsModule.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"modules/TasksModule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{}}}],["export.controller",{"_index":2145,"title":{},"body":{"modules/OrthancModule.html":{}}}],["export.controller.ts",{"_index":2062,"title":{},"body":{"controllers/OrthancExportController.html":{},"coverage.html":{}}}],["export.controller.ts:27",{"_index":2084,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["export.controller.ts:37",{"_index":2074,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["export.controller.ts:47",{"_index":2077,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["export.controller.ts:57",{"_index":2081,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["export.controller.ts:67",{"_index":2093,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["export.controller.ts:77",{"_index":2087,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["export.controller.ts:87",{"_index":2090,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["exportguard",{"_index":159,"title":{"guards/ExportGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"modules/GuardsModule.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"controllers/OrthancController.html":{},"controllers/OrthancExportController.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["exporting",{"_index":2063,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["exports",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/GuardsModule.html":{},"modules/LabelsModule.html":{},"modules/MailModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":1253,"title":{},"body":{"classes/HttpClient.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"dependencies.html":{}}}],["extanding",{"_index":1333,"title":{},"body":{"injectables/JwtOAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["extended",{"_index":2098,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["extended')@useguards(exportguard",{"_index":2080,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["extends",{"_index":917,"title":{},"body":{"classes/CreateAutoroutingDto.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"injectables/SeriesGuard.html":{},"classes/UpdateOptionDto.html":{},"interfaces/UserInfoResponse.html":{}}}],["extractjwt",{"_index":1400,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":1402,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["failed",{"_index":93,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["false",{"_index":116,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/AuthController.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"classes/CreateOptionDto.html":{},"guards/DicomWebGuard.html":{},"classes/GetRoleDto.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"modules/MailModule.html":{},"entities/Option.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingJobDto.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeriesGuard.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{}}}],["false})@column({default",{"_index":1748,"title":{},"body":{"entities/Option.html":{}}}],["false})@isarray()@isobject({each",{"_index":2753,"title":{},"body":{"classes/QueuesQueryDto.html":{}}}],["false})@isboolean",{"_index":947,"title":{},"body":{"classes/CreateOptionDto.html":{},"classes/TmtvJobDto.html":{}}}],["false})@isobject",{"_index":2330,"title":{},"body":{"classes/ProcessingJobDto.html":{}}}],["false})@useguards(undefined)@get",{"_index":2279,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["family_name",{"_index":1370,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"modules/GuardsModule.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"modules/TasksModule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"coverage.html":{}}}],["file.getid",{"_index":3088,"title":{},"body":{"classes/TmtvService.html":{}}}],["filter((job",{"_index":127,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["filteredjob",{"_index":111,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["find",{"_index":2232,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["find(@request",{"_index":2255,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["find(request",{"_index":2239,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["findall",{"_index":809,"title":{},"body":{"injectables/AutoroutingsService.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["findall(@query",{"_index":2864,"title":{},"body":{"controllers/RolesController.html":{}}}],["findall(withlabels",{"_index":2838,"title":{},"body":{"controllers/RolesController.html":{}}}],["findalllabelforrole",{"_index":1424,"title":{},"body":{"controllers/LabelsController.html":{}}}],["findalllabelforrole(labelname",{"_index":1431,"title":{},"body":{"controllers/LabelsController.html":{}}}],["findallrolesforlabel",{"_index":1469,"title":{},"body":{"injectables/LabelsService.html":{}}}],["findallrolesforlabel(labelname",{"_index":1478,"title":{},"body":{"injectables/LabelsService.html":{}}}],["findallwithlabels",{"_index":2913,"title":{},"body":{"injectables/RolesService.html":{}}}],["findone",{"_index":2823,"title":{},"body":{"controllers/RolesController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('name",{"_index":2869,"title":{},"body":{"controllers/RolesController.html":{}}}],["findone(id",{"_index":3188,"title":{},"body":{"injectables/UsersService.html":{}}}],["findone(name",{"_index":2841,"title":{},"body":{"controllers/RolesController.html":{}}}],["findonebyauthorizationurl",{"_index":1712,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["findonebyauthorizationurl(authorizationurl",{"_index":1720,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["findonebyemail",{"_index":3178,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyemail(email",{"_index":3191,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyeventtype",{"_index":810,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["findonebyeventtype(eventtype",{"_index":827,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["findonebyname",{"_index":1713,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["findonebyname(name",{"_index":1722,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["findonebyorfail",{"_index":1470,"title":{},"body":{"injectables/LabelsService.html":{},"injectables/RolesService.html":{}}}],["findonebyorfail(labelname",{"_index":1480,"title":{},"body":{"injectables/LabelsService.html":{}}}],["findonebyorfail(name",{"_index":2925,"title":{},"body":{"injectables/RolesService.html":{}}}],["findoneorfail",{"_index":811,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["findoneorfail(id",{"_index":829,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["finds",{"_index":1118,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["finduser",{"_index":3211,"title":{},"body":{"injectables/UsersService.html":{}}}],["finishcallback",{"_index":1249,"title":{},"body":{"classes/HttpClient.html":{}}}],["first",{"_index":1119,"title":{},"body":{"guards/DicomWebGuard.html":{},"interfaces/OrGuardOptions.html":{},"miscellaneous/functions.html":{}}}],["firstname",{"_index":423,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"injectables/JwtOauthStrategy.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["firstname'})@isnotempty",{"_index":2791,"title":{},"body":{"classes/RegisterDto.html":{}}}],["firstvaluefrom",{"_index":1363,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["flow",{"_index":306,"title":{},"body":{"modules/AppModule.html":{},"injectables/MailService.html":{},"injectables/OrthancMonitoringTask.html":{},"miscellaneous/variables.html":{}}}],["flush",{"_index":24,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["flushed",{"_index":2290,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["flushed'})@apiresponse({status",{"_index":2270,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["flushqueue",{"_index":2262,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["follow",{"_index":1555,"title":{},"body":{"injectables/MailService.html":{}}}],["fonction",{"_index":3600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forbidden",{"_index":2292,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["forbidden'})@apiparam({name",{"_index":2274,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["forbidden'})@apiquery({name",{"_index":2278,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["forbidden'})@useguards(adminguard)@delete(':uuid",{"_index":2283,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["forbiddenexception",{"_index":2285,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{}}}],["forbiddenexception(\"you",{"_index":2306,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["forbiddenexception('role",{"_index":2882,"title":{},"body":{"controllers/RolesController.html":{}}}],["forbiddenexception('user",{"_index":2614,"title":{},"body":{"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["force",{"_index":124,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["foreach((job",{"_index":128,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["forwarded",{"_index":1261,"title":{},"body":{"classes/HttpClient.html":{}}}],["forwardedaddress",{"_index":1207,"title":{},"body":{"classes/HttpClient.html":{}}}],["forwardedprotocol",{"_index":1208,"title":{},"body":{"classes/HttpClient.html":{}}}],["found",{"_index":1069,"title":{},"body":{"guards/DicomWebGuard.html":{},"controllers/OauthConfigController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["found'})@apibearerauth('access",{"_index":1676,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["found.interceptor",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["found.interceptor.ts",{"_index":1621,"title":{},"body":{"injectables/NotFoundInterceptor.html":{},"coverage.html":{}}}],["found.interceptor.ts:17",{"_index":1636,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["fragmented",{"_index":3035,"title":{},"body":{"classes/TmtvService.html":{}}}],["fragmentedmask",{"_index":1609,"title":{},"body":{"injectables/MaskProcessingService.html":{},"classes/TmtvService.html":{}}}],["fragmentedmask.setmaskid(fragmentedmaskid",{"_index":1611,"title":{},"body":{"injectables/MaskProcessingService.html":{},"classes/TmtvService.html":{}}}],["fragmentedmask.setpetid(this.petid",{"_index":1612,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["fragmentedmask.setpetid(this.ptseriesid",{"_index":3078,"title":{},"body":{"classes/TmtvService.html":{}}}],["fragmentedmaskid",{"_index":1607,"title":{},"body":{"injectables/MaskProcessingService.html":{},"classes/TmtvService.html":{}}}],["fragmentmask",{"_index":1566,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["framework",{"_index":3502,"title":{},"body":{"index.html":{}}}],["from(canactivatereturns).pipe",{"_index":1863,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["from(guardval",{"_index":1872,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["function",{"_index":1851,"title":{},"body":{"interfaces/OrGuardOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":3463,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gaelo",{"_index":305,"title":{},"body":{"modules/AppModule.html":{},"injectables/MailService.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["generaterandomuuid",{"_index":2352,"title":{},"body":{"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["generatetoken",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["generic",{"_index":1200,"title":{},"body":{"classes/HttpClient.html":{}}}],["get('/:id",{"_index":3151,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/:name",{"_index":2868,"title":{},"body":{"controllers/RolesController.html":{}}}],["get('/:rolename/labels",{"_index":2898,"title":{},"body":{"controllers/RolesController.html":{}}}],["get('/dicom",{"_index":2022,"title":{},"body":{"controllers/OrthancController.html":{}}}],["get('/instances",{"_index":2021,"title":{},"body":{"controllers/OrthancController.html":{}}}],["get('/jobs/:id",{"_index":2024,"title":{},"body":{"controllers/OrthancController.html":{}}}],["get('/labels/:labelname/studies",{"_index":2011,"title":{},"body":{"controllers/OrthancController.html":{}}}],["get('/modalities",{"_index":2023,"title":{},"body":{"controllers/OrthancController.html":{}}}],["get('/patients",{"_index":2256,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["get('/peers",{"_index":2099,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["get('/peers/*/system",{"_index":1962,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["get('/plugins",{"_index":1956,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["get('/queries/*/answers",{"_index":2204,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["get('/series",{"_index":2019,"title":{},"body":{"controllers/OrthancController.html":{}}}],["get('/studies",{"_index":2016,"title":{},"body":{"controllers/OrthancController.html":{}}}],["get('/system",{"_index":1950,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["get('/tools/log",{"_index":1954,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["get(':labelname/roles",{"_index":1449,"title":{},"body":{"controllers/LabelsController.html":{}}}],["get(':uuid",{"_index":2297,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["get('oauth2",{"_index":199,"title":{},"body":{"controllers/AppController.html":{}}}],["getalluuids",{"_index":25,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["getarchivedicomasbuffer([this.ctorthancseriesid",{"_index":3055,"title":{},"body":{"classes/TmtvService.html":{}}}],["getarchivedicomasbuffer([this.ptorthancseriesid",{"_index":3048,"title":{},"body":{"classes/TmtvService.html":{}}}],["getarchivestudies",{"_index":1968,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getarchivestudies(request",{"_index":1976,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getautorouting",{"_index":749,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["getcreatedfiles",{"_index":3017,"title":{},"body":{"classes/TmtvService.html":{}}}],["getdicomweb",{"_index":1969,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getdicomweb(request",{"_index":1979,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getid",{"_index":2315,"title":{},"body":{"classes/ProcessingFile.html":{}}}],["getinstances",{"_index":1970,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getinstances(request",{"_index":1983,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getjobs",{"_index":26,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/OrthancController.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{}}}],["getjobs(@request",{"_index":2025,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getjobs(request",{"_index":1986,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getjobs(userid",{"_index":2347,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["getjobs(uuid",{"_index":52,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{}}}],["getjobsforuuid",{"_index":27,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["getjobsforuuid(uuid",{"_index":59,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["getloglevel",{"_index":1899,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getloglevel(request",{"_index":1925,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getmaskas",{"_index":1567,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["getmaskas(type",{"_index":1577,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["getmaskid",{"_index":1568,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["getmodalities",{"_index":1971,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getmodalities(request",{"_index":1991,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getoauthconfig",{"_index":1664,"title":{},"body":{"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{}}}],["getoptiondto",{"_index":1146,"title":{"classes/GetOptionDto.html":{}},"body":{"classes/GetOptionDto.html":{},"controllers/OptionsController.html":{},"coverage.html":{}}}],["getoptiondto})@apiresponse({status",{"_index":1787,"title":{},"body":{"controllers/OptionsController.html":{}}}],["getoptions",{"_index":1209,"title":{},"body":{"classes/HttpClient.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{}}}],["getparentstudy('instances",{"_index":1299,"title":{},"body":{"injectables/InstanceGuard.html":{}}}],["getparentstudy('series",{"_index":1108,"title":{},"body":{"guards/DicomWebGuard.html":{},"injectables/SeriesGuard.html":{}}}],["getpatientid",{"_index":1029,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["getpatients",{"_index":2233,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["getpatients(request",{"_index":2242,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["getpatientsarchive",{"_index":2234,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["getpatientsarchive(request",{"_index":2245,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["getpeers",{"_index":2070,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["getpeers(request",{"_index":2091,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["getpeersystem",{"_index":1900,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getpeersystem(request",{"_index":1929,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getplugins",{"_index":1901,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getplugins(request",{"_index":1932,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getqueryanswers",{"_index":2179,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["getqueryanswers(request",{"_index":2184,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["getqueryparsedanswer",{"_index":2180,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["getqueryparsedanswer(id",{"_index":2187,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["getresponseasbuffer",{"_index":1213,"title":{},"body":{"classes/HttpClient.html":{}}}],["getresponseasbuffer(url",{"_index":1231,"title":{},"body":{"classes/HttpClient.html":{}}}],["getresponseasstream",{"_index":1214,"title":{},"body":{"classes/HttpClient.html":{}}}],["getresponseasstream(url",{"_index":1233,"title":{},"body":{"classes/HttpClient.html":{}}}],["getroledto",{"_index":1161,"title":{"classes/GetRoleDto.html":{}},"body":{"classes/GetRoleDto.html":{},"controllers/RolesController.html":{},"coverage.html":{}}}],["getrolelabels",{"_index":2824,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["getrolelabels(@param('rolename",{"_index":2899,"title":{},"body":{"controllers/RolesController.html":{}}}],["getrolelabels(rolename",{"_index":2845,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["gets",{"_index":1987,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getseries",{"_index":1972,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getseries(request",{"_index":1994,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getseriesarchive",{"_index":1973,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getseriesarchive(request",{"_index":1997,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getseriesinstanceuid",{"_index":1030,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["getstatofmask",{"_index":1569,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["getstudies",{"_index":1974,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getstudies(request",{"_index":2000,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getstudieswithlabel",{"_index":1975,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getstudieswithlabel(@param('labelname",{"_index":2013,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getstudieswithlabel(labelname",{"_index":2003,"title":{},"body":{"controllers/OrthancController.html":{}}}],["getstudyinstanceuid",{"_index":1031,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["getsystem",{"_index":1902,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getsystem(request",{"_index":1935,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["getting",{"_index":3498,"title":{"index.html":{}},"body":{}}],["gettokenexpiration",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gettype",{"_index":2316,"title":{},"body":{"classes/ProcessingFile.html":{}}}],["getuid",{"_index":1032,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["getuid($requesteduri",{"_index":1041,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["getuserdto",{"_index":1168,"title":{"classes/GetUserDto.html":{}},"body":{"classes/GetUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["getuserdto})@apiresponse({status",{"_index":3134,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserinfourl",{"_index":1343,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["getuserinfourl(wellknown",{"_index":1350,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["getusers",{"_index":3121,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersid",{"_index":3122,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersid(@param('id",{"_index":3152,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersid(id",{"_index":3133,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuuid",{"_index":2263,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["getuuid(userid",{"_index":2277,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["getuuidofuser",{"_index":28,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["getuuidofuser(userid",{"_index":61,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["getuuidsofuser",{"_index":2341,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["getuuidsofuser(userid",{"_index":2349,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["getwellknown",{"_index":1344,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["getwellknown(iss",{"_index":1353,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["given_name",{"_index":1369,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["global",{"_index":1314,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"modules/MailModule.html":{}}}],["globally",{"_index":1630,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["granted",{"_index":1849,"title":{},"body":{"interfaces/OrGuardOptions.html":{},"miscellaneous/functions.html":{}}}],["graph",{"_index":3556,"title":{},"body":{"modules.html":{}}}],["greater_than",{"_index":3382,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["grow",{"_index":3533,"title":{},"body":{"index.html":{}}}],["guard",{"_index":136,"title":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"guards/StudyGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"guards/ModifyGuard.html":{},"interfaces/OrGuardOptions.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["guard.canactivate(context",{"_index":1870,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["guarding",{"_index":1021,"title":{},"body":{"guards/DicomWebGuard.html":{},"injectables/InstanceGuard.html":{},"controllers/OrthancController.html":{}}}],["guardisobservable",{"_index":1882,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["guardispromise",{"_index":1880,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["guards",{"_index":138,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"interfaces/OrGuardOptions.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"guards/StudyGuard.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["guards.map((guard",{"_index":1858,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["guards/check",{"_index":2010,"title":{},"body":{"controllers/OrthancController.html":{},"controllers/ProcessingController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["guards/dicom",{"_index":2007,"title":{},"body":{"controllers/OrthancController.html":{}}}],["guards/guards.module",{"_index":278,"title":{},"body":{"modules/AppModule.html":{}}}],["guards/instance.guard",{"_index":2009,"title":{},"body":{"controllers/OrthancController.html":{}}}],["guards/jwt",{"_index":386,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/jwt.guard",{"_index":480,"title":{},"body":{"modules/AuthModule.html":{}}}],["guards/local.guard",{"_index":384,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/or.guard",{"_index":1441,"title":{},"body":{"controllers/LabelsController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["guards/roles.guard",{"_index":782,"title":{},"body":{"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["guards/series.guard",{"_index":2008,"title":{},"body":{"controllers/OrthancController.html":{}}}],["guards/study.guard",{"_index":2006,"title":{},"body":{"controllers/OrthancController.html":{}}}],["guardsmodule",{"_index":218,"title":{"modules/GuardsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GuardsModule.html":{},"modules.html":{},"overview.html":{}}}],["guardval",{"_index":1869,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["handle",{"_index":1561,"title":{},"body":{"injectables/MaskProcessingService.html":{},"injectables/ProcessingQueueService.html":{},"classes/TmtvService.html":{}}}],["handleautoroutingupdated",{"_index":605,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["handlebars",{"_index":3337,"title":{},"body":{"dependencies.html":{}}}],["handlebarsadapter",{"_index":1521,"title":{},"body":{"modules/MailModule.html":{}}}],["handleerror",{"_index":1875,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["handleevent",{"_index":606,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["handleevent(payload",{"_index":624,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["handler",{"_index":600,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["hash",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["hashadmin",{"_index":3216,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashedpassword",{"_index":3209,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashpassword",{"_index":3142,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hashpassword('administrator",{"_index":3217,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashpassword('user",{"_index":3219,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashpassword(newpassword",{"_index":3210,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashpassword(token",{"_index":3604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hashpassword(userdto.password",{"_index":3171,"title":{},"body":{"controllers/UsersController.html":{}}}],["hashuser",{"_index":3218,"title":{},"body":{"injectables/UsersService.html":{}}}],["haystack",{"_index":1052,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["haystack.indexof(needle",{"_index":1142,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["haystack.slice(pos",{"_index":1144,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["haystack.substr(0",{"_index":1143,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["headers",{"_index":358,"title":{},"body":{"controllers/AuthController.html":{},"classes/HttpClient.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["here",{"_index":3542,"title":{},"body":{"index.html":{}}}],["host",{"_index":293,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["hours",{"_index":3605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["html",{"_index":1554,"title":{},"body":{"injectables/MailService.html":{}}}],["http",{"_index":1201,"title":{},"body":{"classes/HttpClient.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/NotFoundInterceptor.html":{},"injectables/OrthancMonitoringTask.html":{},"interfaces/UserInfoResponse.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["http://kevin.vanzonneveld.net",{"_index":1131,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["http://localhost:8080/realms/master/protocol/openid",{"_index":1647,"title":{},"body":{"entities/OauthConfig.html":{},"injectables/OauthConfigService.html":{}}}],["http://phpjs.org/functions/strstr",{"_index":1126,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["httpclient",{"_index":1198,"title":{"classes/HttpClient.html":{}},"body":{"classes/HttpClient.html":{},"coverage.html":{}}}],["httpcode",{"_index":372,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":405,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok)@apiresponse({status",{"_index":345,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpmodule",{"_index":473,"title":{},"body":{"modules/AuthModule.html":{}}}],["https://nestjs.com",{"_index":3549,"title":{},"body":{"index.html":{}}}],["httpservice",{"_index":1348,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["httpstatus",{"_index":373,"title":{},"body":{"controllers/AuthController.html":{}}}],["id",{"_index":129,"title":{},"body":{"injectables/AbstractQueueService.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"classes/GetUserDto.html":{},"modules/GuardsModule.html":{},"entities/OauthConfig.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"controllers/OrthancController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/Router.html":{},"classes/Rule.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["id'})@apiresponse({status",{"_index":760,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["id'})@exclude",{"_index":1780,"title":{},"body":{"entities/Option.html":{}}}],["id_mask",{"_index":3070,"title":{},"body":{"classes/TmtvService.html":{}}}],["idct",{"_index":3068,"title":{},"body":{"classes/TmtvService.html":{}}}],["identifier",{"_index":3232,"title":{},"body":{"coverage.html":{}}}],["idpt",{"_index":3069,"title":{},"body":{"classes/TmtvService.html":{}}}],["ignore",{"_index":1733,"title":{},"body":{"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["ignoreexpiration",{"_index":1403,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image",{"_index":1094,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["image_comments",{"_index":3452,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["image_index",{"_index":3440,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["image_orientation_patient",{"_index":3422,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["image_position_patient",{"_index":3450,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["imagecomments",{"_index":3453,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["imageindex",{"_index":3441,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["imageorientationpatient",{"_index":3423,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["imagepositionpatient",{"_index":3451,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["images_in_acquisition",{"_index":3414,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["imagesinacquisition",{"_index":3415,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["implementation",{"_index":2652,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["implements",{"_index":151,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"modules/AppModule.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"classes/IsNumberOrString.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"interfaces/OrGuardOptions.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"guards/StudyGuard.html":{}}}],["import",{"_index":65,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"modules/GuardsModule.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingJobDto.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"modules/TasksModule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{}}}],["import.controller",{"_index":2146,"title":{},"body":{"modules/OrthancModule.html":{}}}],["import.controller.ts",{"_index":2103,"title":{},"body":{"controllers/OrthancImportController.html":{},"coverage.html":{}}}],["import.controller.ts:26",{"_index":2113,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["import.controller.ts:36",{"_index":2109,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["importguard",{"_index":150,"title":{"guards/ImportGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"modules/GuardsModule.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"controllers/OrthancImportController.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["importing",{"_index":2104,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["imports",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/GuardsModule.html":{},"modules/LabelsModule.html":{},"modules/MailModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{}}}],["improved",{"_index":1135,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["index",{"_index":17,"title":{"index.html":{}},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":3473,"title":{},"body":{"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"modules/GuardsModule.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"modules/TasksModule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{}}}],["inherited",{"_index":12,"title":{},"body":{"injectables/AbstractQueueService.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["inject",{"_index":288,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"interfaces/OrGuardOptions.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AbstractQueueService.html":{},"injectables/AuthService.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"injectables/NotFoundInterceptor.html":{},"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"injectables/OrthancMonitoringTask.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueryQueueTask.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"injectables/OrthancMonitoringTask.html":{},"injectables/ProcessingQueueService.html":{},"guards/QueryGuard.html":{},"injectables/QueryQueueTask.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"guards/ReadAllGuard.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"interfaces/UserInfoResponse.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/AuthService.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"injectables/NotFoundInterceptor.html":{},"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"injectables/OrthancMonitoringTask.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueryQueueTask.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectiontoken",{"_index":1836,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["injectrepository",{"_index":835,"title":{},"body":{"injectables/AutoroutingsService.html":{},"injectables/LabelsService.html":{},"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"injectables/QueryQueueTask.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(autorouting",{"_index":836,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["injectrepository(label",{"_index":1485,"title":{},"body":{"injectables/LabelsService.html":{},"injectables/RolesService.html":{}}}],["injectrepository(oauthconfig",{"_index":1726,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["injectrepository(option",{"_index":1827,"title":{},"body":{"injectables/OptionsService.html":{},"injectables/QueryQueueTask.html":{}}}],["injectrepository(role",{"_index":2936,"title":{},"body":{"injectables/RolesService.html":{}}}],["injectrepository(user",{"_index":3202,"title":{},"body":{"injectables/UsersService.html":{}}}],["inline",{"_index":3335,"title":{},"body":{"dependencies.html":{}}}],["installation",{"_index":3512,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":3514,"title":{},"body":{"index.html":{}}}],["instance",{"_index":1044,"title":{},"body":{"guards/DicomWebGuard.html":{},"injectables/InstanceGuard.html":{}}}],["instance.guard",{"_index":1190,"title":{},"body":{"modules/GuardsModule.html":{}}}],["instance_creation_date",{"_index":3434,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["instance_creation_time",{"_index":3436,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["instance_number",{"_index":3442,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["instancecreationdate",{"_index":3435,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["instancecreationtime",{"_index":3437,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["instanceguard",{"_index":1184,"title":{"injectables/InstanceGuard.html":{}},"body":{"modules/GuardsModule.html":{},"injectables/InstanceGuard.html":{},"controllers/OrthancController.html":{},"coverage.html":{},"overview.html":{}}}],["instancenumber",{"_index":3443,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["instanceof",{"_index":1642,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["instances",{"_index":3454,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["instead",{"_index":1628,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["institution_name",{"_index":3395,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["institutionname",{"_index":3396,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["intercept",{"_index":1632,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["intercept(context",{"_index":1633,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["interceptor",{"_index":1622,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["interceptors/not",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["interceptors/public",{"_index":196,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OauthConfigController.html":{}}}],["interface",{"_index":1365,"title":{"interfaces/OrGuardOptions.html":{},"interfaces/UserInfoResponse.html":{}},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/OrGuardOptions.html":{},"interfaces/UserInfoResponse.html":{},"coverage.html":{}}}],["interfaces",{"_index":1833,"title":{},"body":{"interfaces/OrGuardOptions.html":{},"interfaces/UserInfoResponse.html":{},"overview.html":{}}}],["is_public_key",{"_index":1323,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isarray",{"_index":1681,"title":{},"body":{"controllers/OauthConfigController.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesDeleteDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["isbetween",{"_index":2466,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["isboolean",{"_index":560,"title":{},"body":{"entities/Autorouting.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/Destination.html":{},"classes/ProcessingJobDto.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvJobDto.html":{},"classes/WithLabels.html":{}}}],["isemail",{"_index":1011,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"classes/RegisterDto.html":{}}}],["isenum",{"_index":561,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/ProcessingJobDto.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvJobDto.html":{}}}],["isenum(autoroutingeventtype",{"_index":597,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["isenum(condition",{"_index":584,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["isenum(destinationtype",{"_index":587,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["isenum(dicomtag",{"_index":578,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["isenum(orthancleveltype",{"_index":2440,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{}}}],["isenum(processingjobtype",{"_index":2334,"title":{},"body":{"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{}}}],["isenum(processingmask",{"_index":2333,"title":{},"body":{"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{}}}],["isenum(rulecondition",{"_index":590,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["isenum(valuerepresentation",{"_index":581,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["isequal",{"_index":607,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["isequal(value",{"_index":628,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["isexistinguser",{"_index":3179,"title":{},"body":{"injectables/UsersService.html":{}}}],["isexistinguser(id",{"_index":3193,"title":{},"body":{"injectables/UsersService.html":{}}}],["isglobal",{"_index":286,"title":{},"body":{"modules/AppModule.html":{}}}],["isgreaterthan",{"_index":608,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["isgreaterthan(value",{"_index":630,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["isin",{"_index":609,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["isin(value",{"_index":632,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["isinstance",{"_index":1178,"title":{},"body":{"classes/GetUserDto.html":{}}}],["isinstance(role",{"_index":1180,"title":{},"body":{"classes/GetUserDto.html":{}}}],["islabelexist",{"_index":1471,"title":{},"body":{"injectables/LabelsService.html":{}}}],["islabelexist(labelname",{"_index":1482,"title":{},"body":{"injectables/LabelsService.html":{}}}],["islessthan",{"_index":610,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["islessthan(value",{"_index":634,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["ismatch",{"_index":531,"title":{},"body":{"injectables/AuthService.html":{}}}],["isnotempty",{"_index":870,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"classes/RegisterDto.html":{}}}],["isnotin",{"_index":611,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["isnotin(value",{"_index":636,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["isnumber",{"_index":871,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateOptionDto.html":{},"classes/GetUserDto.html":{},"classes/OrthancEventPayloadDto.html":{}}}],["isnumberorstring",{"_index":572,"title":{"classes/IsNumberOrString.html":{}},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/IsNumberOrString.html":{},"classes/Router.html":{},"classes/Rule.html":{},"coverage.html":{}}}],["isobject",{"_index":2332,"title":{},"body":{"classes/ProcessingJobDto.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/TmtvJobDto.html":{}}}],["isolate",{"_index":1043,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["isoptional",{"_index":3229,"title":{},"body":{"classes/WithLabels.html":{}}}],["isoptional()@apiproperty({example",{"_index":3225,"title":{},"body":{"classes/WithLabels.html":{}}}],["ispaused",{"_index":2765,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["ispublic",{"_index":1326,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["isroleexist",{"_index":2914,"title":{},"body":{"injectables/RolesService.html":{}}}],["isroleexist(name",{"_index":2928,"title":{},"body":{"injectables/RolesService.html":{}}}],["isroleused",{"_index":3180,"title":{},"body":{"injectables/UsersService.html":{}}}],["isroleused(rolename",{"_index":3195,"title":{},"body":{"injectables/UsersService.html":{}}}],["iss",{"_index":1355,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["issecondarycapture",{"_index":3286,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["issecondarycapture(sopclassuid",{"_index":3476,"title":{},"body":{"miscellaneous/functions.html":{}}}],["issendable",{"_index":612,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["issendable(router",{"_index":638,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["isstring",{"_index":562,"title":{},"body":{"entities/Autorouting.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetOptionDto.html":{},"classes/GetUserDto.html":{},"classes/LabelDto.html":{},"classes/OauthConfigDto.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/ProcessingJobDto.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvJobDto.html":{},"classes/UpdateUserDto.html":{}}}],["issuer",{"_index":1387,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["istanbul",{"_index":1732,"title":{},"body":{"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["istimebetween",{"_index":2457,"title":{},"body":{"injectables/QueryQueueTask.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["istimebetween(starthour",{"_index":3482,"title":{},"body":{"miscellaneous/functions.html":{}}}],["it'})@apiresponse({status",{"_index":361,"title":{},"body":{"controllers/AuthController.html":{}}}],["job",{"_index":67,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/OrthancController.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"miscellaneous/functions.html":{}}}],["job'})@apiresponse({status",{"_index":2282,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["job.data.jobid",{"_index":86,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["job.data.results",{"_index":133,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{}}}],["job.data.state",{"_index":106,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{}}}],["job.data.userid",{"_index":84,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["job.data.uuid",{"_index":82,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["job.dto",{"_index":2287,"title":{},"body":{"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{}}}],["job.dto.ts",{"_index":2325,"title":{},"body":{"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{},"coverage.html":{}}}],["job.dto.ts:12",{"_index":3007,"title":{},"body":{"classes/TmtvJobDto.html":{}}}],["job.dto.ts:16",{"_index":3009,"title":{},"body":{"classes/TmtvJobDto.html":{}}}],["job.dto.ts:20",{"_index":3010,"title":{},"body":{"classes/TmtvJobDto.html":{}}}],["job.dto.ts:26",{"_index":2328,"title":{},"body":{"classes/ProcessingJobDto.html":{}}}],["job.dto.ts:30",{"_index":2331,"title":{},"body":{"classes/ProcessingJobDto.html":{}}}],["job.dto.ts:8",{"_index":3006,"title":{},"body":{"classes/TmtvJobDto.html":{}}}],["job.id",{"_index":130,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{}}}],["job.progress",{"_index":132,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{}}}],["jobid",{"_index":712,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"miscellaneous/variables.html":{}}}],["jobs",{"_index":79,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/AutoroutingHandler.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"miscellaneous/functions.html":{}}}],["jobs'})@useguards(anonymizeguard)@post",{"_index":2594,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["jobs'})@useguards(deleteguard)@post",{"_index":2681,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["jobs'})@useguards(queryguard)@post",{"_index":2720,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["jobs.filter((job",{"_index":112,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["jobs.find((job",{"_index":115,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["jobs.foreach((job",{"_index":81,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{}}}],["jobs.map((job",{"_index":119,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["jobs.map(async",{"_index":109,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["jobs.push(job",{"_index":107,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["jobtype",{"_index":714,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{}}}],["john",{"_index":999,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{}}}],["john'})@column({name",{"_index":3097,"title":{},"body":{"entities/User.html":{}}}],["john.doe@gaelo.fr",{"_index":3092,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["john.doe@gmail.com",{"_index":996,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"entities/User.html":{}}}],["john.doe@gmail.com'})@column({unique",{"_index":3095,"title":{},"body":{"entities/User.html":{}}}],["join",{"_index":1517,"title":{},"body":{"modules/MailModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":1536,"title":{},"body":{"modules/MailModule.html":{}}}],["joincolumn",{"_index":3116,"title":{},"body":{"entities/User.html":{}}}],["jointable",{"_index":1416,"title":{},"body":{"entities/Label.html":{},"entities/Role.html":{}}}],["json.stringify(document",{"_index":3588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jsonb",{"_index":592,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["jsonb'})@validatenested()@type(undefined",{"_index":554,"title":{},"body":{"entities/Autorouting.html":{}}}],["jsonb'})@validatenested({each",{"_index":2950,"title":{},"body":{"classes/Router.html":{}}}],["jwt",{"_index":355,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/GuardsModule.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"interfaces/UserInfoResponse.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwt.guard",{"_index":1191,"title":{},"body":{"modules/GuardsModule.html":{}}}],["jwt.strategy",{"_index":478,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtauthguard",{"_index":479,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"modules/AuthModule.html":{},"modules/GuardsModule.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["jwtfromrequest",{"_index":1401,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":471,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":485,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtoauthguard",{"_index":385,"title":{"injectables/JwtOAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"modules/GuardsModule.html":{},"injectables/JwtOAuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["jwtoauthstrategy",{"_index":465,"title":{"injectables/JwtOauthStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{},"coverage.html":{},"overview.html":{}}}],["jwtservice",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["jwtstrategy",{"_index":466,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":3546,"title":{},"body":{"index.html":{}}}],["keep",{"_index":3461,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["kevin",{"_index":1128,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["key",{"_index":2875,"title":{},"body":{"controllers/RolesController.html":{}}}],["keycloak",{"_index":1657,"title":{},"body":{"entities/OauthConfig.html":{},"injectables/OauthConfigService.html":{}}}],["keycloak'})@column",{"_index":1655,"title":{},"body":{"entities/OauthConfig.html":{}}}],["keycloak'})@primarycolumn({name",{"_index":1653,"title":{},"body":{"entities/OauthConfig.html":{}}}],["known/openid",{"_index":1374,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["label",{"_index":879,"title":{"entities/Label.html":{}},"body":{"guards/CheckLabelInRole.html":{},"guards/DicomWebGuard.html":{},"classes/GetRoleDto.html":{},"modules/GuardsModule.html":{},"injectables/InstanceGuard.html":{},"entities/Label.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"controllers/OrthancController.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SeederModule.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["label'})@apiresponse({status",{"_index":1426,"title":{},"body":{"controllers/LabelsController.html":{}}}],["label.entity",{"_index":1466,"title":{},"body":{"modules/LabelsModule.html":{},"injectables/LabelsService.html":{}}}],["label.name",{"_index":896,"title":{},"body":{"guards/CheckLabelInRole.html":{},"controllers/LabelsController.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["label.roles",{"_index":2818,"title":{},"body":{"entities/Role.html":{}}}],["label.roles)@jointable({name",{"_index":2809,"title":{},"body":{"entities/Role.html":{}}}],["labeldto",{"_index":1419,"title":{"classes/LabelDto.html":{}},"body":{"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"controllers/RolesController.html":{},"coverage.html":{}}}],["labeldto.name",{"_index":2897,"title":{},"body":{"controllers/RolesController.html":{}}}],["labelname",{"_index":890,"title":{},"body":{"guards/CheckLabelInRole.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"controllers/OrthancController.html":{},"injectables/RolesService.html":{}}}],["labels",{"_index":1164,"title":{},"body":{"classes/GetRoleDto.html":{},"controllers/LabelsController.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["labels.controller",{"_index":1465,"title":{},"body":{"modules/LabelsModule.html":{}}}],["labels.dto",{"_index":1439,"title":{},"body":{"controllers/LabelsController.html":{},"controllers/RolesController.html":{}}}],["labels.dto.ts",{"_index":3224,"title":{},"body":{"classes/WithLabels.html":{},"coverage.html":{}}}],["labels.dto.ts:15",{"_index":3228,"title":{},"body":{"classes/WithLabels.html":{}}}],["labels.service",{"_index":1438,"title":{},"body":{"controllers/LabelsController.html":{},"modules/LabelsModule.html":{}}}],["labels/label.entity",{"_index":1167,"title":{},"body":{"classes/GetRoleDto.html":{},"entities/Role.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SeederModule.html":{},"modules/UsersModule.html":{}}}],["labels/labels.dto",{"_index":2858,"title":{},"body":{"controllers/RolesController.html":{}}}],["labels/labels.module",{"_index":271,"title":{},"body":{"modules/AppModule.html":{}}}],["labels/labels.service",{"_index":2854,"title":{},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{}}}],["labelscontroller",{"_index":1422,"title":{"controllers/LabelsController.html":{}},"body":{"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"coverage.html":{}}}],["labelservice",{"_index":2862,"title":{},"body":{"controllers/RolesController.html":{}}}],["labelsmodule",{"_index":219,"title":{"modules/LabelsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LabelsModule.html":{},"modules.html":{},"overview.html":{}}}],["labelsofrole",{"_index":894,"title":{},"body":{"guards/CheckLabelInRole.html":{},"miscellaneous/variables.html":{}}}],["labelsofrole.filter((value",{"_index":3597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["labelsofrole.includes(labelname",{"_index":897,"title":{},"body":{"guards/CheckLabelInRole.html":{}}}],["labelsofstudy",{"_index":3595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["labelsofstudy.includes(value",{"_index":3598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["labelsrepository",{"_index":1474,"title":{},"body":{"injectables/LabelsService.html":{},"injectables/RolesService.html":{}}}],["labelsservice",{"_index":1437,"title":{"injectables/LabelsService.html":{}},"body":{"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"coverage.html":{},"overview.html":{}}}],["last",{"_index":1842,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["lastchanges",{"_index":2160,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["lastname",{"_index":425,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"injectables/JwtOauthStrategy.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["lastname'})@isnotempty",{"_index":2793,"title":{},"body":{"classes/RegisterDto.html":{}}}],["legend",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/GuardsModule.html":{},"modules/LabelsModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length",{"_index":3599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["less_than",{"_index":3381,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["letter",{"_index":860,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["level",{"_index":645,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"guards/DicomWebGuard.html":{},"controllers/OrthancAdminController.html":{},"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{}}}],["level')@useguards(adminguard",{"_index":1927,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["level_series",{"_index":3456,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["level_study",{"_index":3457,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["levelmapping",{"_index":604,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["leveltype",{"_index":646,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"miscellaneous/enumerations.html":{}}}],["leveltype.instances",{"_index":651,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["leveltype.patients",{"_index":657,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["leveltype.series",{"_index":653,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["leveltype.studies",{"_index":655,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["license",{"_index":3552,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":3530,"title":{},"body":{"index.html":{}}}],["link",{"_index":1556,"title":{},"body":{"injectables/MailService.html":{}}}],["listlabels('studies",{"_index":3596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["local",{"_index":1395,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.guard",{"_index":1192,"title":{},"body":{"modules/GuardsModule.html":{}}}],["local.strategy",{"_index":477,"title":{},"body":{"modules/AuthModule.html":{}}}],["localauthguard",{"_index":383,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"modules/GuardsModule.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["localhost",{"_index":295,"title":{},"body":{"modules/AppModule.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["localstrategy",{"_index":467,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["logger",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["logger(req",{"_index":3487,"title":{},"body":{"miscellaneous/functions.html":{}}}],["login",{"_index":321,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@request",{"_index":408,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(req",{"_index":335,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{}}}],["logindto",{"_index":392,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["logindto})@public()@httpcode(httpstatus.ok)@useguards(localauthguard)@post('login",{"_index":340,"title":{},"body":{"controllers/AuthController.html":{}}}],["looal",{"_index":1495,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["lostpassword",{"_index":322,"title":{},"body":{"controllers/AuthController.html":{}}}],["lostpassword(@body",{"_index":456,"title":{},"body":{"controllers/AuthController.html":{}}}],["lostpassword(body",{"_index":343,"title":{},"body":{"controllers/AuthController.html":{}}}],["lostpasswordto",{"_index":344,"title":{"classes/LostPassworDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LostPassworDto.html":{},"coverage.html":{}}}],["lostpasswordto})@public()@post('lost",{"_index":348,"title":{},"body":{"controllers/AuthController.html":{}}}],["lowercase",{"_index":861,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["mail/mail.module",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["mail/mail.service",{"_index":397,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["mail@example.com",{"_index":2795,"title":{},"body":{"classes/RegisterDto.html":{}}}],["mail@example.com'})@isemail",{"_index":2789,"title":{},"body":{"classes/RegisterDto.html":{}}}],["mailermodule",{"_index":1518,"title":{},"body":{"modules/MailModule.html":{}}}],["mailermodule.forrootasync",{"_index":1523,"title":{},"body":{"modules/MailModule.html":{}}}],["mailerservice",{"_index":1544,"title":{},"body":{"injectables/MailService.html":{}}}],["mailmodule",{"_index":220,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules.html":{},"overview.html":{}}}],["mailservice",{"_index":396,"title":{"injectables/MailService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"overview.html":{}}}],["main",{"_index":1631,"title":{},"body":{"injectables/NotFoundInterceptor.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["management",{"_index":2261,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["manufacturer",{"_index":3405,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["manytomany",{"_index":1417,"title":{},"body":{"entities/Label.html":{},"entities/Role.html":{}}}],["manytoone",{"_index":3117,"title":{},"body":{"entities/User.html":{}}}],["map((job",{"_index":2363,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["marsman",{"_index":1134,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["mask",{"_index":1562,"title":{},"body":{"injectables/MaskProcessingService.html":{},"classes/TmtvService.html":{}}}],["mask.setmaskid(maskid",{"_index":3072,"title":{},"body":{"classes/TmtvService.html":{}}}],["mask.setpetid(this.ptseriesid",{"_index":3073,"title":{},"body":{"classes/TmtvService.html":{}}}],["maskid",{"_index":1563,"title":{},"body":{"injectables/MaskProcessingService.html":{},"classes/TmtvService.html":{}}}],["maskprocessingservice",{"_index":1558,"title":{"injectables/MaskProcessingService.html":{}},"body":{"injectables/MaskProcessingService.html":{},"classes/TmtvService.html":{},"coverage.html":{}}}],["maskprocessingservice(this.processingclient",{"_index":3071,"title":{},"body":{"classes/TmtvService.html":{}}}],["maskprocessingservice(this.processingservice",{"_index":1610,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["masks",{"_index":3075,"title":{},"body":{"classes/TmtvService.html":{}}}],["match",{"_index":450,"title":{},"body":{"controllers/AuthController.html":{}}}],["matches",{"_index":872,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{}}}],["matches(/^(?=.*?[a",{"_index":1013,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(/^(?=.*[a",{"_index":876,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["matching",{"_index":135,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"modules/GuardsModule.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"modules/TasksModule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["media",{"_index":2079,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["media')@useguards(exportguard",{"_index":2076,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["mergemap",{"_index":1843,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["mergemap((obs",{"_index":1864,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["message",{"_index":856,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{}}}],["metadata",{"_index":1093,"title":{},"body":{"guards/DicomWebGuard.html":{},"dependencies.html":{}}}],["method",{"_index":313,"title":{},"body":{"modules/AppModule.html":{},"classes/HttpClient.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":19,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"injectables/ProcessingQueueService.html":{},"guards/QueryGuard.html":{},"injectables/QueryQueueTask.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"guards/ReadAllGuard.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TmtvService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["middlewareconsumer",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["minlength",{"_index":873,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["minlength(12",{"_index":875,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["miscellaneous",{"_index":3360,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":3529,"title":{},"body":{"index.html":{}}}],["mixin",{"_index":1837,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["mixin(ormixinguard",{"_index":1884,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["modalities",{"_index":706,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["modalitiesinstudy",{"_index":2541,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["modality",{"_index":2424,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["modality'})@isstring",{"_index":2527,"title":{},"body":{"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["mode",{"_index":3519,"title":{},"body":{"index.html":{}}}],["modify",{"_index":169,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"classes/CreateRoleDto.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"entities/Role.html":{},"injectables/RolesService.html":{}}}],["modify.controller",{"_index":2147,"title":{},"body":{"modules/OrthancModule.html":{}}}],["modify.controller.ts",{"_index":2117,"title":{},"body":{"controllers/OrthancModifyController.html":{},"coverage.html":{}}}],["modify.controller.ts:19",{"_index":2125,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["modify.controller.ts:29",{"_index":2131,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["modify.controller.ts:39",{"_index":2128,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["modifyguard",{"_index":170,"title":{"guards/ModifyGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"modules/GuardsModule.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"controllers/OrthancController.html":{},"controllers/OrthancModifyController.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["modifying",{"_index":2118,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["modref",{"_index":1854,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["module",{"_index":204,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/GuardsModule.html":{},"modules/LabelsModule.html":{},"modules/MailModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/GuardsModule.html":{},"modules/LabelsModule.html":{},"modules/MailModule.html":{},"injectables/NotFoundInterceptor.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["moduleref",{"_index":1838,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["modules",{"_index":206,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/GuardsModule.html":{},"modules/LabelsModule.html":{},"modules/MailModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":1520,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["modules/mailer/dist/adapters/handlebars.adapter",{"_index":1522,"title":{},"body":{"modules/MailModule.html":{}}}],["moment",{"_index":670,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"dependencies.html":{}}}],["moment(value.tostring()).isafter(moment(rule.value.tostring",{"_index":687,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["moment(value.tostring()).issame(moment(rule.value.tostring",{"_index":684,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["monitoring.task",{"_index":3005,"title":{},"body":{"modules/TasksModule.html":{}}}],["monitoring.task.ts",{"_index":2153,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{},"coverage.html":{}}}],["monitoring.task.ts:11",{"_index":2162,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["monitoring.task.ts:19",{"_index":2164,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["more",{"_index":3541,"title":{},"body":{"index.html":{}}}],["mypassw0rd1234",{"_index":1012,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["mypassw0rd1234!'})@isstring()@matches(/^(?=.*?[a",{"_index":1003,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["myśliwiec",{"_index":3547,"title":{},"body":{"index.html":{}}}],["name",{"_index":36,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateRoleDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"guards/ReadAllGuard.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"classes/TmtvService.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["name'})@isstring",{"_index":552,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/LabelDto.html":{}}}],["name'})@primarycolumn({name",{"_index":1411,"title":{},"body":{"entities/Label.html":{}}}],["needle",{"_index":1049,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["nest",{"_index":3509,"title":{},"body":{"index.html":{}}}],["nestfactory.create(appmodule",{"_index":3575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestfactory.createapplicationcontext(appmodule",{"_index":3624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestframework",{"_index":3551,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":1638,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["nestjs",{"_index":1519,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["nestjs/axios",{"_index":474,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{},"dependencies.html":{}}}],["nestjs/bullmq",{"_index":3315,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":66,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"modules/GuardsModule.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"controllers/OauthConfigController.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"guards/QueryGuard.html":{},"injectables/QueryQueueTask.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"guards/ReadAllGuard.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"modules/TasksModule.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/OrGuardOptions.html":{},"dependencies.html":{}}}],["nestjs/event",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"injectables/OrthancMonitoringTask.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":472,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":3321,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":1322,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/UserInfoResponse.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":3324,"title":{},"body":{"dependencies.html":{}}}],["nestjs/schedule",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"injectables/OrthancMonitoringTask.html":{},"injectables/QueryQueueTask.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":198,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"entities/Autorouting.html":{},"controllers/AutoroutingsController.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingJobDto.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvJobDto.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"classes/WithLabels.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"injectables/QueryQueueTask.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestmodule",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":418,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/DicomWebGuard.html":{},"classes/HttpClient.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"injectables/MaskProcessingService.html":{},"injectables/NotFoundInterceptor.html":{},"controllers/OauthConfigController.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueryQueueTask.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["new_accession_number",{"_index":2647,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["new_accession_number'})@isstring",{"_index":2634,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["new_instance",{"_index":3365,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["new_patient",{"_index":3370,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["new_patient_id",{"_index":2648,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["new_patient_id'})@isstring",{"_index":2636,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["new_patient_name",{"_index":2649,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["new_patient_name'})@isstring",{"_index":2638,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["new_series",{"_index":3366,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["new_study",{"_index":3368,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["new_study_description",{"_index":2650,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["new_study_description'})@isstring",{"_index":2640,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["newaccessionnumber",{"_index":2622,"title":{},"body":{"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["newinstance",{"_index":2051,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{},"miscellaneous/enumerations.html":{}}}],["newpassword",{"_index":447,"title":{},"body":{"controllers/AuthController.html":{},"classes/ChangePasswordDto.html":{},"injectables/UsersService.html":{}}}],["newpatient",{"_index":3371,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["newpatientid",{"_index":2624,"title":{},"body":{"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["newpatientname",{"_index":2626,"title":{},"body":{"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["newseries",{"_index":3367,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["newstudy",{"_index":3369,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["newstudydescription",{"_index":2628,"title":{},"body":{"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["newuser",{"_index":437,"title":{},"body":{"controllers/AuthController.html":{}}}],["newuser.email",{"_index":443,"title":{},"body":{"controllers/AuthController.html":{}}}],["newuser.id",{"_index":444,"title":{},"body":{"controllers/AuthController.html":{}}}],["next",{"_index":1634,"title":{},"body":{"injectables/NotFoundInterceptor.html":{},"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["next.handle().pipe",{"_index":1640,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["nextfunction",{"_index":3488,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nifti",{"_index":3460,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["node.js",{"_index":3501,"title":{},"body":{"index.html":{}}}],["nodemailer",{"_index":3340,"title":{},"body":{"dependencies.html":{}}}],["non",{"_index":1315,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["none",{"_index":966,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["none'})@column({default",{"_index":1772,"title":{},"body":{"entities/Option.html":{}}}],["none'})@isstring",{"_index":967,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["not_in",{"_index":3380,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notfoundexception",{"_index":1627,"title":{},"body":{"injectables/NotFoundInterceptor.html":{},"controllers/OauthConfigController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["notfoundexception('label",{"_index":2895,"title":{},"body":{"controllers/RolesController.html":{}}}],["notfoundexception('oauth",{"_index":1692,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["notfoundexception('role",{"_index":2888,"title":{},"body":{"controllers/RolesController.html":{}}}],["notfoundexception('user",{"_index":3155,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["notfoundexception(error.message",{"_index":1643,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["notfoundinterceptor",{"_index":253,"title":{"injectables/NotFoundInterceptor.html":{}},"body":{"modules/AppModule.html":{},"injectables/NotFoundInterceptor.html":{},"coverage.html":{}}}],["npm",{"_index":3513,"title":{},"body":{"index.html":{}}}],["null",{"_index":114,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/DicomWebGuard.html":{},"classes/GetRoleDto.html":{},"classes/HttpClient.html":{},"injectables/InstanceGuard.html":{},"injectables/LabelsService.html":{},"injectables/MaskProcessingService.html":{},"injectables/OrthancMonitoringTask.html":{},"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"injectables/RolesService.html":{},"injectables/SeriesGuard.html":{}}}],["nullable",{"_index":3111,"title":{},"body":{"entities/User.html":{}}}],["number",{"_index":46,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/AuthService.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateOptionDto.html":{},"classes/Destination.html":{},"classes/GetUserDto.html":{},"classes/IsNumberOrString.html":{},"injectables/MailService.html":{},"entities/Option.html":{},"classes/OrthancEventPayloadDto.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TagAnon.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["number'})@useguards(autoroutingguard)@delete('/:id",{"_index":763,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["number'})@useguards(autoroutingguard)@put('/:id/disable",{"_index":767,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["number'})@useguards(autoroutingguard)@put('/:id/enable",{"_index":771,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["number(rule.value",{"_index":681,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["number(value",{"_index":686,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["number.ts",{"_index":1301,"title":{},"body":{"classes/IsNumberOrString.html":{},"coverage.html":{}}}],["number.ts:13",{"_index":1306,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["number.ts:9",{"_index":1309,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["number_of_frames",{"_index":3444,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["number_of_slices",{"_index":3418,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["number_of_temporal_positions",{"_index":3416,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["number_of_time_slices",{"_index":3420,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["numberofframes",{"_index":3445,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["numberofseriesrelatedinstances",{"_index":2478,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["numberofslices",{"_index":3419,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["numberofstudyrelatedinstances",{"_index":2542,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["numberofstudyrelatedseries",{"_index":2543,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["numberoftemporalpositions",{"_index":3417,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["numberoftimeslices",{"_index":3421,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["oauth",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/OauthConfigController.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"interfaces/UserInfoResponse.html":{}}}],["oauth.guard",{"_index":387,"title":{},"body":{"controllers/AuthController.html":{},"modules/GuardsModule.html":{}}}],["oauth.guard.ts",{"_index":1332,"title":{},"body":{"injectables/JwtOAuthGuard.html":{},"coverage.html":{}}}],["oauth.strategy",{"_index":483,"title":{},"body":{"modules/AuthModule.html":{}}}],["oauth.strategy.ts",{"_index":1338,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{},"coverage.html":{}}}],["oauth.strategy.ts:25",{"_index":1349,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["oauth.strategy.ts:34",{"_index":1354,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["oauth.strategy.ts:45",{"_index":1359,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["oauth.strategy.ts:52",{"_index":1351,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["oauth.strategy.ts:56",{"_index":1361,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["oauth.strategy.ts:83",{"_index":1357,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["oauth2",{"_index":354,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{},"dependencies.html":{}}}],["oauth2')@public()@useguards(jwtoauthguard)@httpcode(httpstatus.ok)@post('oauth2",{"_index":363,"title":{},"body":{"controllers/AuthController.html":{}}}],["oauth2login",{"_index":323,"title":{},"body":{"controllers/AuthController.html":{}}}],["oauth2login(@request",{"_index":413,"title":{},"body":{"controllers/AuthController.html":{}}}],["oauth2login(req",{"_index":351,"title":{},"body":{"controllers/AuthController.html":{}}}],["oauth2redirect",{"_index":186,"title":{},"body":{"controllers/AppController.html":{}}}],["oauthconfig",{"_index":481,"title":{"entities/OauthConfig.html":{}},"body":{"modules/AuthModule.html":{},"entities/OauthConfig.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"modules/SeederModule.html":{},"coverage.html":{}}}],["oauthconfigcontroller",{"_index":1660,"title":{"controllers/OauthConfigController.html":{}},"body":{"controllers/OauthConfigController.html":{},"modules/OauthConfigModule.html":{},"coverage.html":{}}}],["oauthconfigdto",{"_index":1666,"title":{"classes/OauthConfigDto.html":{}},"body":{"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"injectables/OauthConfigService.html":{},"coverage.html":{}}}],["oauthconfigdto.name",{"_index":1697,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["oauthconfigdto})@useguards(adminguard)@post",{"_index":1671,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["oauthconfigmodule",{"_index":221,"title":{"modules/OauthConfigModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OauthConfigModule.html":{},"modules.html":{},"overview.html":{}}}],["oauthconfigservice",{"_index":468,"title":{"injectables/OauthConfigService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/OauthConfigController.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"interfaces/UserInfoResponse.html":{},"coverage.html":{},"overview.html":{}}}],["oauthconfigsrepository",{"_index":1717,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["object",{"_index":40,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/AutoroutingHandler.html":{},"classes/HttpClient.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"interfaces/UserInfoResponse.html":{}}}],["object.fromentries(url.searchparams.entries",{"_index":1083,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["object.keys(this.query).length",{"_index":1057,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["object|string",{"_index":1272,"title":{},"body":{"classes/HttpClient.html":{}}}],["object})@apiresponse({status",{"_index":2267,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["obs.pipe(this.handleerror",{"_index":1865,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["observable",{"_index":1637,"title":{},"body":{"injectables/NotFoundInterceptor.html":{},"interfaces/OrGuardOptions.html":{}}}],["observable).pipe",{"_index":1883,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["occurrence",{"_index":1120,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["of(false",{"_index":1879,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["of(guardval",{"_index":1874,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["omittype",{"_index":919,"title":{},"body":{"classes/CreateAutoroutingDto.html":{}}}],["omittype(autorouting",{"_index":918,"title":{},"body":{"classes/CreateAutoroutingDto.html":{}}}],["one",{"_index":858,"title":{},"body":{"classes/ChangePasswordDto.html":{},"injectables/OptionsService.html":{},"miscellaneous/variables.html":{}}}],["onevent",{"_index":662,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["onevent('autorouting.updated",{"_index":622,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["onevent('orthanc",{"_index":626,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["onno",{"_index":1133,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["open",{"_index":3531,"title":{},"body":{"index.html":{}}}],["openapi.json",{"_index":3592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["operatorfunction",{"_index":1840,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["operators_name",{"_index":3426,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["operatorsname",{"_index":3427,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["option",{"_index":1266,"title":{"entities/Option.html":{}},"body":{"classes/HttpClient.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"injectables/QueryQueueTask.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["option.dto",{"_index":1160,"title":{},"body":{"classes/GetOptionDto.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"classes/UpdateOptionDto.html":{}}}],["option.dto.ts",{"_index":922,"title":{},"body":{"classes/CreateOptionDto.html":{},"classes/GetOptionDto.html":{},"classes/UpdateOptionDto.html":{},"coverage.html":{}}}],["option.dto.ts:11",{"_index":945,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:12",{"_index":1156,"title":{},"body":{"classes/GetOptionDto.html":{}}}],["option.dto.ts:15",{"_index":943,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:16",{"_index":1155,"title":{},"body":{"classes/GetOptionDto.html":{}}}],["option.dto.ts:19",{"_index":946,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:20",{"_index":1157,"title":{},"body":{"classes/GetOptionDto.html":{}}}],["option.dto.ts:23",{"_index":973,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:24",{"_index":1158,"title":{},"body":{"classes/GetOptionDto.html":{}}}],["option.dto.ts:27",{"_index":962,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:31",{"_index":953,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:35",{"_index":960,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:39",{"_index":956,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:43",{"_index":957,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:47",{"_index":952,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:51",{"_index":965,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:55",{"_index":970,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:59",{"_index":969,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:63",{"_index":951,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:67",{"_index":968,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:7",{"_index":941,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:71",{"_index":948,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["option.dto.ts:8",{"_index":1154,"title":{},"body":{"classes/GetOptionDto.html":{}}}],["option.entity",{"_index":1815,"title":{},"body":{"modules/OptionsModule.html":{},"injectables/OptionsService.html":{}}}],["optional",{"_index":38,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"guards/ReadAllGuard.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"classes/TmtvService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["optionrepository",{"_index":2451,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["options",{"_index":1539,"title":{},"body":{"modules/MailModule.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"injectables/QueryQueueTask.html":{}}}],["options.autoqueryhourstart",{"_index":2467,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["options.autoqueryhourstop",{"_index":2469,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["options.autoqueryminutestart",{"_index":2468,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["options.autoqueryminutestop",{"_index":2470,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["options.controller",{"_index":1814,"title":{},"body":{"modules/OptionsModule.html":{}}}],["options.service",{"_index":1797,"title":{},"body":{"controllers/OptionsController.html":{},"modules/OptionsModule.html":{}}}],["options/option.entity",{"_index":2456,"title":{},"body":{"injectables/QueryQueueTask.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{}}}],["options/options.module",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["options/options.service",{"_index":2969,"title":{},"body":{"modules/SeederModule.html":{},"injectables/SeederService.html":{}}}],["optionscontroller",{"_index":1785,"title":{"controllers/OptionsController.html":{}},"body":{"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"coverage.html":{}}}],["optionservice",{"_index":1802,"title":{},"body":{"controllers/OptionsController.html":{},"injectables/SeederService.html":{}}}],["optionsmodule",{"_index":222,"title":{"modules/OptionsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OptionsModule.html":{},"modules.html":{},"overview.html":{}}}],["optionsrepository",{"_index":1822,"title":{},"body":{"injectables/OptionsService.html":{}}}],["optionsservice",{"_index":1796,"title":{"injectables/OptionsService.html":{}},"body":{"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"coverage.html":{},"overview.html":{}}}],["orguard",{"_index":1440,"title":{},"body":{"controllers/LabelsController.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancController.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["orguard(guards",{"_index":3489,"title":{},"body":{"miscellaneous/functions.html":{}}}],["orguardoptions",{"_index":1832,"title":{"interfaces/OrGuardOptions.html":{}},"body":{"interfaces/OrGuardOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["orguardoptions?.throwonfirsterror",{"_index":1877,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["orientation",{"_index":1578,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["originaet",{"_index":2370,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["original",{"_index":1127,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["ormixinguard",{"_index":1852,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["orthanc",{"_index":1205,"title":{},"body":{"classes/HttpClient.html":{},"injectables/InstanceGuard.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"modules/TasksModule.html":{},"miscellaneous/variables.html":{}}}],["orthanc.controller",{"_index":2143,"title":{},"body":{"modules/OrthancModule.html":{}}}],["orthanc/orthanc.module",{"_index":273,"title":{},"body":{"modules/AppModule.html":{}}}],["orthanc_monitoring_rate",{"_index":1782,"title":{},"body":{"entities/Option.html":{}}}],["orthanc_study_id",{"_index":2646,"title":{},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["orthanc_study_id'})@isstring",{"_index":2642,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["orthancaddress",{"_index":1149,"title":{},"body":{"classes/GetOptionDto.html":{},"controllers/OptionsController.html":{}}}],["orthancadmincontroller",{"_index":1885,"title":{"controllers/OrthancAdminController.html":{}},"body":{"controllers/OrthancAdminController.html":{},"modules/OrthancModule.html":{},"coverage.html":{}}}],["orthanccalledapi",{"_index":3612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["orthancclient",{"_index":619,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"modules/AutoroutingsModule.html":{},"guards/DicomWebGuard.html":{},"modules/GuardsModule.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"guards/StudyGuard.html":{},"modules/TasksModule.html":{},"classes/TmtvService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["orthancclient.streamanswertores(orthanccalledapi",{"_index":3616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["orthanccontroller",{"_index":1964,"title":{"controllers/OrthancController.html":{}},"body":{"controllers/OrthancController.html":{},"modules/OrthancModule.html":{},"coverage.html":{}}}],["orthancdeletecontroller",{"_index":2026,"title":{"controllers/OrthancDeleteController.html":{}},"body":{"controllers/OrthancDeleteController.html":{},"modules/OrthancModule.html":{},"coverage.html":{}}}],["orthanceventpayloaddto",{"_index":625,"title":{"classes/OrthancEventPayloadDto.html":{}},"body":{"injectables/AutoroutingHandler.html":{},"classes/OrthancEventPayloadDto.html":{},"coverage.html":{}}}],["orthancexportcontroller",{"_index":2061,"title":{"controllers/OrthancExportController.html":{}},"body":{"controllers/OrthancExportController.html":{},"modules/OrthancModule.html":{},"coverage.html":{}}}],["orthancid",{"_index":647,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"injectables/InstanceGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["orthancimportcontroller",{"_index":2102,"title":{"controllers/OrthancImportController.html":{}},"body":{"controllers/OrthancImportController.html":{},"modules/OrthancModule.html":{},"coverage.html":{}}}],["orthancleveltype",{"_index":2201,"title":{},"body":{"controllers/OrthancQueryController.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["orthancleveltype.level_series",{"_index":2209,"title":{},"body":{"controllers/OrthancQueryController.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{}}}],["orthancleveltype.level_study",{"_index":2219,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["orthancleveltype})@isenum(orthancleveltype",{"_index":2419,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{}}}],["orthancmodifycontroller",{"_index":2116,"title":{"controllers/OrthancModifyController.html":{}},"body":{"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"coverage.html":{}}}],["orthancmodule",{"_index":223,"title":{"modules/OrthancModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrthancModule.html":{},"modules.html":{},"overview.html":{}}}],["orthancmonitoringcron",{"_index":2161,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["orthancmonitoringrate",{"_index":939,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["orthancmonitoringtask",{"_index":2151,"title":{"injectables/OrthancMonitoringTask.html":{}},"body":{"injectables/OrthancMonitoringTask.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{}}}],["orthancpassword",{"_index":1150,"title":{},"body":{"classes/GetOptionDto.html":{},"controllers/OptionsController.html":{}}}],["orthancquerycontroller",{"_index":2141,"title":{"controllers/OrthancQueryController.html":{}},"body":{"modules/OrthancModule.html":{},"controllers/OrthancQueryController.html":{},"coverage.html":{}}}],["orthancreadallcontroller",{"_index":2140,"title":{"controllers/OrthancReadAllController.html":{}},"body":{"modules/OrthancModule.html":{},"controllers/OrthancReadAllController.html":{},"coverage.html":{}}}],["orthancseriesid",{"_index":1105,"title":{},"body":{"guards/DicomWebGuard.html":{},"controllers/QueuesDeleteController.html":{},"classes/TmtvService.html":{}}}],["orthancseriesids",{"_index":2698,"title":{},"body":{"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{}}}],["orthancseriesids.foreach((orthancseriesid",{"_index":2700,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["orthancstudyid",{"_index":1088,"title":{},"body":{"guards/DicomWebGuard.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["orthancusername",{"_index":1151,"title":{},"body":{"classes/GetOptionDto.html":{},"controllers/OptionsController.html":{}}}],["other_patient_ids",{"_index":3386,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["otherpatientids",{"_index":3387,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["out",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/GuardsModule.html":{},"modules/LabelsModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":3558,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":3312,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":776,"title":{},"body":{"controllers/AutoroutingsController.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserRoleGuard.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancController.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":2207,"title":{},"body":{"controllers/OrthancQueryController.html":{},"controllers/UsersController.html":{}}}],["param('label",{"_index":2902,"title":{},"body":{"controllers/RolesController.html":{}}}],["param('labelname",{"_index":1450,"title":{},"body":{"controllers/LabelsController.html":{}}}],["param('name",{"_index":2886,"title":{},"body":{"controllers/RolesController.html":{}}}],["param('rolename",{"_index":2892,"title":{},"body":{"controllers/RolesController.html":{}}}],["param('uuid",{"_index":2298,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["parameters",{"_index":34,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"guards/ReadAllGuard.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"classes/TmtvService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1082,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["params.guard",{"_index":1188,"title":{},"body":{"modules/GuardsModule.html":{},"controllers/UsersController.html":{}}}],["params.guard.ts",{"_index":899,"title":{},"body":{"guards/CheckUserIdParamsGuard.html":{},"coverage.html":{}}}],["params.guard.ts:6",{"_index":902,"title":{},"body":{"guards/CheckUserIdParamsGuard.html":{}}}],["params.guard.ts:9",{"_index":903,"title":{},"body":{"guards/CheckUserIdParamsGuard.html":{}}}],["parent",{"_index":1297,"title":{},"body":{"injectables/InstanceGuard.html":{},"injectables/SeriesGuard.html":{}}}],["parentstudies",{"_index":1113,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["parentstudies.length",{"_index":1115,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["parentstudies[0].id",{"_index":1116,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["parentstudy",{"_index":1107,"title":{},"body":{"guards/DicomWebGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/SeriesGuard.html":{}}}],["parentstudy.id",{"_index":1111,"title":{},"body":{"guards/DicomWebGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/SeriesGuard.html":{}}}],["parentstudy?.id",{"_index":1110,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["parsed",{"_index":2199,"title":{},"body":{"controllers/OrthancQueryController.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"coverage.html":{}}}],["parsing",{"_index":1022,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["partialtype",{"_index":1159,"title":{},"body":{"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/UpdateOptionDto.html":{}}}],["partialtype(createoptiondto",{"_index":1148,"title":{},"body":{"classes/GetOptionDto.html":{},"classes/UpdateOptionDto.html":{}}}],["partialtype(createroledto",{"_index":1163,"title":{},"body":{"classes/GetRoleDto.html":{}}}],["party",{"_index":1203,"title":{},"body":{"classes/HttpClient.html":{}}}],["pass",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{},"modules/MailModule.html":{}}}],["passport",{"_index":1339,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/UserInfoResponse.html":{},"dependencies.html":{}}}],["passportstrategy",{"_index":1362,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["passportstrategy(strategy",{"_index":1342,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["password",{"_index":301,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/HttpClient.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["password'})@exclude",{"_index":3103,"title":{},"body":{"entities/User.html":{}}}],["password.dto",{"_index":395,"title":{},"body":{"controllers/AuthController.html":{}}}],["password.dto.ts",{"_index":848,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/LostPassworDto.html":{},"coverage.html":{}}}],["password.dto.ts:19",{"_index":865,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password.dto.ts:24",{"_index":850,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password.dto.ts:29",{"_index":867,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password.dto.ts:34",{"_index":869,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password.dto.ts:7",{"_index":1514,"title":{},"body":{"classes/LostPassworDto.html":{}}}],["password1234!change",{"_index":874,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password1234!change'})@isstring()@isnotempty",{"_index":849,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password1234!change'})@isstring()@isnotempty()@minlength(12)@matches(/^(?=.*[a",{"_index":851,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password?token=${token}&userid=${userid",{"_index":1550,"title":{},"body":{"injectables/MailService.html":{}}}],["passwordfield",{"_index":1503,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["patch",{"_index":1795,"title":{},"body":{"controllers/OptionsController.html":{}}}],["path",{"_index":312,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"classes/OrthancEventPayloadDto.html":{}}}],["pathname",{"_index":1028,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["patient",{"_index":1068,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["patient_birthdate",{"_index":2435,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["patient_birthdate'})@isstring",{"_index":2566,"title":{},"body":{"classes/QueryStudyDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["patient_id",{"_index":2434,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["patient_id'})@isstring",{"_index":2562,"title":{},"body":{"classes/QueryStudyDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["patient_name",{"_index":2433,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["patient_name'})@isstring",{"_index":2564,"title":{},"body":{"classes/QueryStudyDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["patient_sex",{"_index":3384,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["patientbirthdate",{"_index":3383,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["patientid",{"_index":2371,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["patientname",{"_index":2372,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["patients",{"_index":1060,"title":{},"body":{"guards/DicomWebGuard.html":{},"miscellaneous/enumerations.html":{}}}],["patientsex",{"_index":3385,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pause",{"_index":2766,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["paused",{"_index":100,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["pausing/resuming",{"_index":2444,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["payload",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AutoroutingHandler.html":{},"injectables/JwtStrategy.html":{},"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{}}}],["payload.changetype",{"_index":736,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["payload.dto",{"_index":665,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["payload.dto.ts",{"_index":2047,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{},"coverage.html":{}}}],["payload.dto.ts:12",{"_index":2055,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["payload.dto.ts:16",{"_index":2056,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["payload.dto.ts:20",{"_index":2057,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["payload.dto.ts:24",{"_index":2058,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["payload.dto.ts:28",{"_index":2060,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["payload.dto.ts:8",{"_index":2053,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["payload.email",{"_index":1407,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.id",{"_index":729,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["payload.role",{"_index":1408,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":1406,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["peer",{"_index":726,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"miscellaneous/enumerations.html":{}}}],["performed_procedure_step_description",{"_index":3428,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["performedprocedurestepdescription",{"_index":3429,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["permission",{"_index":143,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["petid",{"_index":1564,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["petseriesorthancid",{"_index":1565,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["pg",{"_index":3347,"title":{},"body":{"dependencies.html":{}}}],["pixilib",{"_index":3565,"title":{},"body":{"properties.html":{}}}],["please",{"_index":3540,"title":{},"body":{"index.html":{}}}],["port",{"_index":296,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["pos",{"_index":1141,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["post",{"_index":371,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["post('/:rolename/labels",{"_index":2891,"title":{},"body":{"controllers/RolesController.html":{}}}],["post('/instances",{"_index":2114,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["post('/jobs",{"_index":1957,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["post('/modalities/*/echo",{"_index":1959,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["post('/modalities/*/query",{"_index":2202,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["post('/modalities/*/store",{"_index":2094,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["post('/modalities/:id/parsed",{"_index":2206,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["post('/patients/*/modify",{"_index":2132,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["post('/patients/:id/archive",{"_index":2257,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["post('/peers/*/store",{"_index":2100,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["post('/queries/:id/answers/:index/retrieve",{"_index":2205,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["post('/queries/:id/answers/:index/retrieve')@useguards(undefined",{"_index":2194,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["post('/series/*/modify",{"_index":2135,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["post('/series/:id/archive",{"_index":2020,"title":{},"body":{"controllers/OrthancController.html":{}}}],["post('/studies/*/modify",{"_index":2134,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["post('/studies/:id/archive",{"_index":2018,"title":{},"body":{"controllers/OrthancController.html":{}}}],["post('/tasks/:user/export",{"_index":2101,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["post('/tools/create",{"_index":2096,"title":{},"body":{"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{}}}],["post('/tools/find",{"_index":2254,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["post('/tools/reset",{"_index":1952,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["post('/tools/shutdown",{"_index":1953,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["post('change",{"_index":446,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":407,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('lost",{"_index":455,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('oauth2",{"_index":412,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":430,"title":{},"body":{"controllers/AuthController.html":{}}}],["postgres",{"_index":292,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["preferred_username",{"_index":1368,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["prefix",{"_index":742,"title":{},"body":{"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["primary",{"_index":2874,"title":{},"body":{"controllers/RolesController.html":{}}}],["primarycolumn",{"_index":1418,"title":{},"body":{"entities/Label.html":{},"entities/OauthConfig.html":{},"entities/Role.html":{}}}],["primarygeneratedcolumn",{"_index":557,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"entities/Option.html":{},"classes/Router.html":{},"classes/Rule.html":{},"entities/User.html":{}}}],["prioritized",{"_index":99,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["private",{"_index":401,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/AutoroutingHandler.html":{},"injectables/AutoroutingsService.html":{},"guards/DicomWebGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/LabelsService.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"injectables/QueryQueueTask.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["processevent",{"_index":613,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["processevent(autorouting",{"_index":640,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["processing",{"_index":1206,"title":{},"body":{"classes/HttpClient.html":{},"injectables/MaskProcessingService.html":{},"controllers/ProcessingController.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"classes/TmtvService.html":{},"miscellaneous/functions.html":{}}}],["processing.controller",{"_index":2338,"title":{},"body":{"modules/ProcessingModule.html":{}}}],["processing.file",{"_index":3043,"title":{},"body":{"classes/TmtvService.html":{}}}],["processing.service",{"_index":3044,"title":{},"body":{"classes/TmtvService.html":{}}}],["processing.service.ts",{"_index":1560,"title":{},"body":{"injectables/MaskProcessingService.html":{},"coverage.html":{}}}],["processing.service.ts:10",{"_index":1588,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing.service.ts:11",{"_index":1574,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing.service.ts:15",{"_index":1583,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing.service.ts:19",{"_index":1580,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing.service.ts:23",{"_index":1585,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing.service.ts:28",{"_index":1579,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing.service.ts:60",{"_index":1581,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing.service.ts:67",{"_index":1576,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing.service.ts:79",{"_index":1586,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing.service.ts:9",{"_index":1587,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processing/processing",{"_index":671,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"modules/AutoroutingsModule.html":{}}}],["processing/processing.module",{"_index":274,"title":{},"body":{"modules/AppModule.html":{}}}],["processingclient",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"injectables/MaskProcessingService.html":{},"classes/TmtvService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["processingcontroller",{"_index":2258,"title":{"controllers/ProcessingController.html":{}},"body":{"controllers/ProcessingController.html":{},"modules/ProcessingModule.html":{},"coverage.html":{}}}],["processingfile",{"_index":2313,"title":{"classes/ProcessingFile.html":{}},"body":{"classes/ProcessingFile.html":{},"classes/TmtvService.html":{},"coverage.html":{}}}],["processingfile(ctresponse",{"_index":3057,"title":{},"body":{"classes/TmtvService.html":{}}}],["processingfile(fragmentedmaskid",{"_index":3077,"title":{},"body":{"classes/TmtvService.html":{}}}],["processingfile(maskid",{"_index":3074,"title":{},"body":{"classes/TmtvService.html":{}}}],["processingfile(ptresponse",{"_index":3053,"title":{},"body":{"classes/TmtvService.html":{}}}],["processingfile(this.ctseriesid",{"_index":3062,"title":{},"body":{"classes/TmtvService.html":{}}}],["processingfile(this.ptseriesid",{"_index":3066,"title":{},"body":{"classes/TmtvService.html":{}}}],["processingjobdto",{"_index":2265,"title":{"classes/ProcessingJobDto.html":{}},"body":{"controllers/ProcessingController.html":{},"classes/ProcessingJobDto.html":{},"injectables/ProcessingQueueService.html":{},"classes/TmtvJobDto.html":{},"coverage.html":{}}}],["processingjobtype",{"_index":673,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{},"miscellaneous/enumerations.html":{}}}],["processingjobtype.tmtv",{"_index":715,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["processingjobtype})@isenum(processingjobtype",{"_index":2327,"title":{},"body":{"classes/ProcessingJobDto.html":{}}}],["processingmask",{"_index":674,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"injectables/MaskProcessingService.html":{},"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"miscellaneous/enumerations.html":{}}}],["processingmask.nifti",{"_index":1593,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processingmask.rtss",{"_index":719,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"injectables/MaskProcessingService.html":{}}}],["processingmask.seg",{"_index":720,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"injectables/MaskProcessingService.html":{}}}],["processingmodule",{"_index":224,"title":{"modules/ProcessingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProcessingModule.html":{},"modules.html":{},"overview.html":{}}}],["processingqueue",{"_index":2340,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["processingqueueservice",{"_index":618,"title":{"injectables/ProcessingQueueService.html":{}},"body":{"injectables/AutoroutingHandler.html":{},"modules/AutoroutingsModule.html":{},"controllers/ProcessingController.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"coverage.html":{},"overview.html":{}}}],["processingservice",{"_index":1575,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["processseries",{"_index":3291,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["processseries(orthancclient",{"_index":3491,"title":{},"body":{"miscellaneous/functions.html":{}}}],["processstudy",{"_index":3292,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["processstudy(orthancclient",{"_index":3492,"title":{},"body":{"miscellaneous/functions.html":{}}}],["production",{"_index":3521,"title":{},"body":{"index.html":{}}}],["profile",{"_index":2620,"title":{},"body":{"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{}}}],["profile'})@isstring",{"_index":2644,"title":{},"body":{"classes/QueuesAnonDto.html":{}}}],["progress",{"_index":131,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{}}}],["progressive",{"_index":3500,"title":{},"body":{"index.html":{}}}],["project",{"_index":3532,"title":{},"body":{"index.html":{}}}],["promise",{"_index":44,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CheckLabelInRole.html":{},"guards/DicomWebGuard.html":{},"classes/HttpClient.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["promise).then",{"_index":1881,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["promise.all",{"_index":108,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["properties",{"_index":18,"title":{"properties.html":{}},"body":{"injectables/AbstractQueueService.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"injectables/MaskProcessingService.html":{},"entities/OauthConfig.html":{},"classes/OauthConfigDto.html":{},"entities/Option.html":{},"interfaces/OrGuardOptions.html":{},"classes/OrthancEventPayloadDto.html":{},"injectables/OrthancMonitoringTask.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TagAnon.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"classes/WithLabels.html":{},"properties.html":{}}}],["protected",{"_index":1099,"title":{},"body":{"guards/DicomWebGuard.html":{},"classes/HttpClient.html":{},"guards/StudyGuard.html":{}}}],["protocol",{"_index":1240,"title":{},"body":{"classes/HttpClient.html":{}}}],["protocol_name",{"_index":2425,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["protocol_name'})@isstring",{"_index":2529,"title":{},"body":{"classes/QuerySeriesDto.html":{},"classes/QueuesQuerySeriesDto.html":{}}}],["protocolname",{"_index":2426,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["provide",{"_index":309,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["provider",{"_index":1341,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"entities/OauthConfig.html":{},"classes/OauthConfigDto.html":{},"injectables/OauthConfigService.html":{},"interfaces/UserInfoResponse.html":{}}}],["providers",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/GuardsModule.html":{},"modules/LabelsModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["proxy",{"_index":3622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["proxying",{"_index":1889,"title":{},"body":{"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{}}}],["pt",{"_index":711,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["ptorthancseriesid",{"_index":716,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{}}}],["ptresponse",{"_index":3050,"title":{},"body":{"classes/TmtvService.html":{}}}],["ptseriesid",{"_index":710,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/TmtvService.html":{}}}],["public",{"_index":195,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"classes/ProcessingFile.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@get('oauth2",{"_index":188,"title":{},"body":{"controllers/AppController.html":{}}}],["purposes",{"_index":1855,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["put",{"_index":779,"title":{},"body":{"controllers/AutoroutingsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["put('/:id",{"_index":3154,"title":{},"body":{"controllers/UsersController.html":{}}}],["put('/:id/disable",{"_index":799,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["put('/:id/enable",{"_index":796,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["put('/:name",{"_index":2885,"title":{},"body":{"controllers/RolesController.html":{}}}],["put('/modalities",{"_index":1960,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["put('/peers",{"_index":1963,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["put('/studies/*/labels",{"_index":2251,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["put('/tools/log",{"_index":1955,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["qido",{"_index":1092,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["query",{"_index":15,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"classes/CreateRoleDto.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"modules/GuardsModule.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"guards/ReadAllGuard.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"modules/TasksModule.html":{},"miscellaneous/functions.html":{}}}],["query')@useguards(undefined",{"_index":2191,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["query('userid",{"_index":2293,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["query.answer",{"_index":2518,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["query.controller",{"_index":2148,"title":{},"body":{"modules/OrthancModule.html":{},"modules/QueueModule.html":{}}}],["query.controller.ts",{"_index":2176,"title":{},"body":{"controllers/OrthancQueryController.html":{},"controllers/QueuesQueryController.html":{},"coverage.html":{}}}],["query.controller.ts:108",{"_index":2721,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["query.controller.ts:148",{"_index":2727,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["query.controller.ts:35",{"_index":2183,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["query.controller.ts:44",{"_index":2722,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["query.controller.ts:45",{"_index":2186,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["query.controller.ts:54",{"_index":2195,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["query.controller.ts:55",{"_index":2724,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["query.controller.ts:64",{"_index":2192,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["query.controller.ts:82",{"_index":2723,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["query.dto",{"_index":2730,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["query.dto.ts",{"_index":2752,"title":{},"body":{"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"coverage.html":{}}}],["query.dto.ts:104",{"_index":2754,"title":{},"body":{"classes/QueuesQueryDto.html":{}}}],["query.dto.ts:11",{"_index":2782,"title":{},"body":{"classes/QueuesQueryStudyDto.html":{}}}],["query.dto.ts:15",{"_index":2784,"title":{},"body":{"classes/QueuesQueryStudyDto.html":{}}}],["query.dto.ts:19",{"_index":2781,"title":{},"body":{"classes/QueuesQueryStudyDto.html":{}}}],["query.dto.ts:23",{"_index":2785,"title":{},"body":{"classes/QueuesQueryStudyDto.html":{}}}],["query.dto.ts:27",{"_index":2779,"title":{},"body":{"classes/QueuesQueryStudyDto.html":{}}}],["query.dto.ts:31",{"_index":2786,"title":{},"body":{"classes/QueuesQueryStudyDto.html":{}}}],["query.dto.ts:35",{"_index":2780,"title":{},"body":{"classes/QueuesQueryStudyDto.html":{}}}],["query.dto.ts:41",{"_index":2763,"title":{},"body":{"classes/QueuesQuerySeriesDto.html":{}}}],["query.dto.ts:45",{"_index":2758,"title":{},"body":{"classes/QueuesQuerySeriesDto.html":{}}}],["query.dto.ts:49",{"_index":2759,"title":{},"body":{"classes/QueuesQuerySeriesDto.html":{}}}],["query.dto.ts:53",{"_index":2760,"title":{},"body":{"classes/QueuesQuerySeriesDto.html":{}}}],["query.dto.ts:57",{"_index":2762,"title":{},"body":{"classes/QueuesQuerySeriesDto.html":{}}}],["query.dto.ts:61",{"_index":2761,"title":{},"body":{"classes/QueuesQuerySeriesDto.html":{}}}],["query.dto.ts:65",{"_index":2757,"title":{},"body":{"classes/QueuesQuerySeriesDto.html":{}}}],["query.dto.ts:7",{"_index":2783,"title":{},"body":{"classes/QueuesQueryStudyDto.html":{}}}],["query.dto.ts:86",{"_index":2755,"title":{},"body":{"classes/QueuesQueryDto.html":{}}}],["query.guard",{"_index":1197,"title":{},"body":{"modules/GuardsModule.html":{},"controllers/ProcessingController.html":{}}}],["query.guard.ts",{"_index":907,"title":{},"body":{"guards/CheckUserIdQueryGuard.html":{},"coverage.html":{}}}],["query.guard.ts:6",{"_index":908,"title":{},"body":{"guards/CheckUserIdQueryGuard.html":{}}}],["query.guard.ts:9",{"_index":909,"title":{},"body":{"guards/CheckUserIdQueryGuard.html":{}}}],["query.service",{"_index":2455,"title":{},"body":{"injectables/QueryQueueTask.html":{},"modules/QueueModule.html":{},"controllers/QueuesQueryController.html":{},"modules/TasksModule.html":{}}}],["query.service.ts",{"_index":2764,"title":{},"body":{"injectables/QueuesQueryService.html":{},"coverage.html":{}}}],["query.service.ts:10",{"_index":2768,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["query.service.ts:22",{"_index":2770,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["query.service.ts:26",{"_index":2771,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["query.service.ts:30",{"_index":2769,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["query/queue",{"_index":2584,"title":{},"body":{"modules/QueueModule.html":{}}}],["queryanswer",{"_index":2364,"title":{"classes/QueryAnswer.html":{}},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"coverage.html":{}}}],["queryanswer:10",{"_index":2517,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:11",{"_index":2516,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:12",{"_index":2505,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:14",{"_index":2501,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:4",{"_index":2499,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:40",{"_index":2507,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:44",{"_index":2508,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:48",{"_index":2509,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:5",{"_index":2500,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:52",{"_index":2510,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:56",{"_index":2512,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:6",{"_index":2502,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:60",{"_index":2511,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:64",{"_index":2506,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:68",{"_index":2515,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:7",{"_index":2504,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:72",{"_index":2514,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:76",{"_index":2513,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:8",{"_index":2503,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswer:9",{"_index":2498,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["queryanswertype",{"_index":2386,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"miscellaneous/enumerations.html":{}}}],["queryanswertype.level_series",{"_index":2520,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["queryanswertype.level_study",{"_index":2555,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["queryguard",{"_index":161,"title":{"guards/QueryGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"modules/GuardsModule.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"controllers/OrthancController.html":{},"controllers/OrthancQueryController.html":{},"guards/QueryGuard.html":{},"controllers/QueuesQueryController.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["querying",{"_index":2177,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["queryparsedanswer",{"_index":2188,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["queryparsedanswer.level",{"_index":2208,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["queryparsedanswer.query",{"_index":2211,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["queryparsedanswerdto",{"_index":2189,"title":{"classes/QueryParsedAnswerDto.html":{}},"body":{"controllers/OrthancQueryController.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"coverage.html":{}}}],["queryqueue",{"_index":2772,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["queryqueue.pause",{"_index":2774,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["queryqueuecron",{"_index":2446,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["queryqueuetask",{"_index":2441,"title":{"injectables/QueryQueueTask.html":{}},"body":{"injectables/QueryQueueTask.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{}}}],["queryseriesanswer",{"_index":2475,"title":{"classes/QuerySeriesAnswer.html":{}},"body":{"classes/QuerySeriesAnswer.html":{},"coverage.html":{}}}],["queryseriesdto",{"_index":2196,"title":{"classes/QuerySeriesDto.html":{}},"body":{"controllers/OrthancQueryController.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"coverage.html":{}}}],["querystudyanswer",{"_index":2539,"title":{"classes/QueryStudyAnswer.html":{}},"body":{"classes/QueryStudyAnswer.html":{},"coverage.html":{}}}],["querystudydto",{"_index":2197,"title":{"classes/QueryStudyDto.html":{}},"body":{"controllers/OrthancQueryController.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"coverage.html":{}}}],["queue",{"_index":10,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueryQueueTask.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{}}}],["queue('anon",{"_index":2666,"title":{},"body":{"injectables/QueuesAnonService.html":{}}}],["queue('delete",{"_index":2712,"title":{},"body":{"injectables/QueuesDeleteService.html":{}}}],["queue('processing",{"_index":2354,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["queue('query",{"_index":2773,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["queue.service",{"_index":672,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"modules/AutoroutingsModule.html":{},"controllers/ProcessingController.html":{},"modules/ProcessingModule.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["queue.service.ts",{"_index":2339,"title":{},"body":{"injectables/ProcessingQueueService.html":{},"coverage.html":{}}}],["queue.service.ts:12",{"_index":2342,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["queue.service.ts:24",{"_index":2345,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["queue.service.ts:28",{"_index":2351,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["queue.service.ts:32",{"_index":2344,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["queue.service.ts:49",{"_index":2348,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["queue.service.ts:90",{"_index":2346,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["queue.service.ts:97",{"_index":2350,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["queue.task",{"_index":3004,"title":{},"body":{"modules/TasksModule.html":{}}}],["queue.task.ts",{"_index":2443,"title":{},"body":{"injectables/QueryQueueTask.html":{},"coverage.html":{}}}],["queue.task.ts:14",{"_index":2450,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["queue.task.ts:22",{"_index":2453,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["queuemodule",{"_index":225,"title":{"modules/QueueModule.html":{}},"body":{"modules/AppModule.html":{},"modules/QueueModule.html":{},"modules.html":{},"overview.html":{}}}],["queuequeryservice",{"_index":2448,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["queues/anon",{"_index":2589,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["queues/delete",{"_index":2676,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["queues/query",{"_index":2715,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["queues/query/queue",{"_index":2454,"title":{},"body":{"injectables/QueryQueueTask.html":{},"modules/TasksModule.html":{}}}],["queues/queue.module",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["queuesanoncontroller",{"_index":2577,"title":{"controllers/QueuesAnonController.html":{}},"body":{"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"coverage.html":{}}}],["queuesanondto",{"_index":2632,"title":{"classes/QueuesAnonDto.html":{}},"body":{"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"coverage.html":{}}}],["queuesanonsdto",{"_index":2593,"title":{"classes/QueuesAnonsDto.html":{}},"body":{"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"coverage.html":{}}}],["queuesanonsdto.anonymizes",{"_index":2616,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["queuesanonservice",{"_index":2574,"title":{"injectables/QueuesAnonService.html":{}},"body":{"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"coverage.html":{},"overview.html":{}}}],["queuesdeletecontroller",{"_index":2578,"title":{"controllers/QueuesDeleteController.html":{}},"body":{"modules/QueueModule.html":{},"controllers/QueuesDeleteController.html":{},"coverage.html":{}}}],["queuesdeletedto",{"_index":2680,"title":{"classes/QueuesDeleteDto.html":{}},"body":{"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"coverage.html":{}}}],["queuesdeletedto.orthancseriesids",{"_index":2699,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["queuesdeleteservice",{"_index":2575,"title":{"injectables/QueuesDeleteService.html":{}},"body":{"modules/QueueModule.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"coverage.html":{},"overview.html":{}}}],["queuesquerycontroller",{"_index":2579,"title":{"controllers/QueuesQueryController.html":{}},"body":{"modules/QueueModule.html":{},"controllers/QueuesQueryController.html":{},"coverage.html":{}}}],["queuesquerydto",{"_index":2719,"title":{"classes/QueuesQueryDto.html":{}},"body":{"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"coverage.html":{}}}],["queuesquerydto.series",{"_index":2743,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["queuesquerydto.studies",{"_index":2741,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["queuesqueryseries",{"_index":2742,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["queuesqueryseries.foreach((series",{"_index":2749,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["queuesqueryseries.length",{"_index":2744,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["queuesqueryseriesdto",{"_index":2729,"title":{"classes/QueuesQuerySeriesDto.html":{}},"body":{"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"coverage.html":{}}}],["queuesqueryservice",{"_index":2449,"title":{"injectables/QueuesQueryService.html":{}},"body":{"injectables/QueryQueueTask.html":{},"modules/QueueModule.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{}}}],["queuesquerystudy",{"_index":2740,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["queuesquerystudy.foreach((study",{"_index":2747,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["queuesquerystudy.length",{"_index":2745,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["queuesquerystudydto",{"_index":2728,"title":{"classes/QueuesQueryStudyDto.html":{}},"body":{"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"coverage.html":{}}}],["queuestate",{"_index":2471,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["randomuuid",{"_index":3602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rawbodyrequest",{"_index":2111,"title":{},"body":{"controllers/OrthancImportController.html":{},"miscellaneous/variables.html":{}}}],["read",{"_index":2149,"title":{},"body":{"modules/OrthancModule.html":{},"controllers/OrthancReadAllController.html":{},"coverage.html":{},"index.html":{}}}],["read_all",{"_index":2816,"title":{},"body":{"entities/Role.html":{}}}],["readall",{"_index":178,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"classes/CreateRoleDto.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"entities/Role.html":{},"injectables/RolesService.html":{}}}],["readallguard",{"_index":179,"title":{"guards/ReadAllGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"modules/GuardsModule.html":{},"guards/ImportGuard.html":{},"controllers/LabelsController.html":{},"guards/ModifyGuard.html":{},"controllers/OrthancController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["readonly",{"_index":1056,"title":{},"body":{"guards/DicomWebGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/LabelsController.html":{},"injectables/MaskProcessingService.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"interfaces/OrGuardOptions.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"injectables/SeederService.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{}}}],["record",{"_index":1055,"title":{},"body":{"guards/DicomWebGuard.html":{},"injectables/OptionsService.html":{}}}],["redirect",{"_index":194,"title":{},"body":{"controllers/AppController.html":{}}}],["redirect('/docs/oauth2",{"_index":200,"title":{},"body":{"controllers/AppController.html":{}}}],["redirect.html",{"_index":190,"title":{},"body":{"controllers/AppController.html":{}}}],["redirect.html')@redirect('/docs/oauth2",{"_index":189,"title":{},"body":{"controllers/AppController.html":{}}}],["redis",{"_index":3480,"title":{},"body":{"miscellaneous/functions.html":{}}}],["redis_address",{"_index":2668,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["redis_port",{"_index":2670,"title":{},"body":{"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["redisaddress",{"_index":1152,"title":{},"body":{"classes/GetOptionDto.html":{},"controllers/OptionsController.html":{}}}],["redisport",{"_index":1153,"title":{},"body":{"classes/GetOptionDto.html":{},"controllers/OptionsController.html":{}}}],["referring_physician_name",{"_index":3399,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["referringphysicianname",{"_index":3400,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["reflect",{"_index":3350,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":1318,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["register",{"_index":324,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(@body",{"_index":431,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(registerdto",{"_index":365,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerdto",{"_index":366,"title":{"classes/RegisterDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/RegisterDto.html":{},"coverage.html":{}}}],["registerdto.email",{"_index":433,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerdto.firstname",{"_index":438,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerdto.lastname",{"_index":439,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerdto})@public()@post('register",{"_index":369,"title":{},"body":{"controllers/AuthController.html":{}}}],["registered",{"_index":1629,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["related",{"_index":318,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"controllers/OrthancModifyController.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["relations",{"_index":1488,"title":{},"body":{"injectables/LabelsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["remove",{"_index":812,"title":{},"body":{"injectables/AutoroutingsService.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["remove(@param('labelname",{"_index":1454,"title":{},"body":{"controllers/LabelsController.html":{}}}],["remove(id",{"_index":831,"title":{},"body":{"injectables/AutoroutingsService.html":{},"injectables/UsersService.html":{}}}],["remove(labelname",{"_index":1434,"title":{},"body":{"controllers/LabelsController.html":{},"injectables/LabelsService.html":{}}}],["remove(name",{"_index":2930,"title":{},"body":{"injectables/RolesService.html":{}}}],["removeanonjob",{"_index":2591,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["removeanonjob(@param('uuid",{"_index":2630,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["removeanonjob(uuid",{"_index":2600,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["removechildren",{"_index":89,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["removedeletejob",{"_index":2678,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["removedeletejob(@param('uuid",{"_index":2702,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["removedeletejob(uuid",{"_index":2686,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["removejob",{"_index":29,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["removejob(@param('uuid",{"_index":2311,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["removejob(data",{"_index":63,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{}}}],["removejob(uuid",{"_index":2281,"title":{},"body":{"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{}}}],["removelabelfromrole",{"_index":2825,"title":{},"body":{"controllers/RolesController.html":{}}}],["removelabelfromrole(rolename",{"_index":2848,"title":{},"body":{"controllers/RolesController.html":{}}}],["removeoncomplete",{"_index":73,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["removeonfail",{"_index":76,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["removequeryjob",{"_index":2717,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["removequeryjob(@param('uuid",{"_index":2750,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["removequeryjob(uuid",{"_index":2725,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["removerolelabel",{"_index":2915,"title":{},"body":{"injectables/RolesService.html":{}}}],["removerolelabel(rolename",{"_index":2932,"title":{},"body":{"injectables/RolesService.html":{}}}],["repeat",{"_index":101,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["replace",{"_index":3462,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["replacevalue",{"_index":2989,"title":{},"body":{"classes/TagAnon.html":{}}}],["reply",{"_index":1533,"title":{},"body":{"modules/MailModule.html":{}}}],["repository",{"_index":815,"title":{},"body":{"injectables/AutoroutingsService.html":{},"injectables/LabelsService.html":{},"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"injectables/QueryQueueTask.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["req",{"_index":342,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"miscellaneous/functions.html":{}}}],["req['user",{"_index":415,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":152,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AuthController.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"guards/ModifyGuard.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"guards/QueryGuard.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"guards/ReadAllGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"controllers/UsersController.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["request'})@apibody({type",{"_index":332,"title":{},"body":{"controllers/AuthController.html":{}}}],["request'})@apiresponse({status",{"_index":3125,"title":{},"body":{"controllers/UsersController.html":{}}}],["request(config",{"_index":1288,"title":{},"body":{"classes/HttpClient.html":{}}}],["request(option",{"_index":1274,"title":{},"body":{"classes/HttpClient.html":{}}}],["request.body",{"_index":3615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.headers.accept",{"_index":3620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.headers['content",{"_index":3618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.method",{"_index":3614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.params.id",{"_index":904,"title":{},"body":{"guards/CheckUserIdParamsGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["request.params.labelname",{"_index":891,"title":{},"body":{"guards/CheckLabelInRole.html":{}}}],["request.params.rolename",{"_index":914,"title":{},"body":{"guards/CheckUserRoleGuard.html":{}}}],["request.query.userid",{"_index":910,"title":{},"body":{"guards/CheckUserIdQueryGuard.html":{}}}],["request.url",{"_index":1081,"title":{},"body":{"guards/DicomWebGuard.html":{},"miscellaneous/variables.html":{}}}],["request.user",{"_index":154,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["request.user.role.name",{"_index":893,"title":{},"body":{"guards/CheckLabelInRole.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DicomWebGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["request.user.userid",{"_index":905,"title":{},"body":{"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{}}}],["request['user",{"_index":2294,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["requestbuffer",{"_index":1210,"title":{},"body":{"classes/HttpClient.html":{}}}],["requested",{"_index":882,"title":{},"body":{"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{}}}],["requested_procedure_description",{"_index":3394,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["requestedproceduredescription",{"_index":2373,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"miscellaneous/enumerations.html":{}}}],["requesteduri",{"_index":1046,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["requesting_physician",{"_index":3397,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["requestingphysician",{"_index":3398,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["requestmethod",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["requestmethod.all",{"_index":314,"title":{},"body":{"modules/AppModule.html":{}}}],["requeststream",{"_index":1211,"title":{},"body":{"classes/HttpClient.html":{}}}],["requesttype",{"_index":1907,"title":{},"body":{"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{}}}],["required",{"_index":762,"title":{},"body":{"controllers/AutoroutingsController.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"entities/Label.html":{},"controllers/OauthConfigController.html":{},"entities/Option.html":{},"controllers/OrthancController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingJobDto.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"entities/Role.html":{},"classes/TmtvJobDto.html":{},"classes/UpdateUserDto.html":{}}}],["res",{"_index":1273,"title":{},"body":{"classes/HttpClient.html":{},"miscellaneous/functions.html":{}}}],["res.setheader('content",{"_index":1276,"title":{},"body":{"classes/HttpClient.html":{}}}],["res.status(500).send('bad",{"_index":1284,"title":{},"body":{"classes/HttpClient.html":{}}}],["reset",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/GuardsModule.html":{},"modules/LabelsModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resetorthanc",{"_index":1903,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["resetorthanc(request",{"_index":1938,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["resource",{"_index":2308,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["resources",{"_index":2029,"title":{},"body":{"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{}}}],["resourcetype",{"_index":2049,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["response",{"_index":1252,"title":{},"body":{"classes/HttpClient.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"interfaces/UserInfoResponse.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["response.data",{"_index":1291,"title":{},"body":{"classes/HttpClient.html":{}}}],["response.data.email",{"_index":1390,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["response.data.family_name",{"_index":1392,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["response.data.given_name",{"_index":1391,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["response.data.pipe(res",{"_index":1278,"title":{},"body":{"classes/HttpClient.html":{}}}],["response.data.pipe(streamwriter).on('finish",{"_index":1289,"title":{},"body":{"classes/HttpClient.html":{}}}],["response.headers['content",{"_index":1277,"title":{},"body":{"classes/HttpClient.html":{}}}],["responsetype",{"_index":1255,"title":{},"body":{"classes/HttpClient.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{}}}],["ressource",{"_index":1026,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["ressources",{"_index":2119,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["result",{"_index":113,"title":{},"body":{"injectables/AbstractQueueService.html":{},"classes/TmtvService.html":{}}}],["results",{"_index":126,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"modules/GuardsModule.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"modules/TasksModule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["results.push",{"_index":2305,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["results[id",{"_index":134,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["resume",{"_index":2767,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["retrieve",{"_index":1095,"title":{},"body":{"guards/DicomWebGuard.html":{},"controllers/OrthancQueryController.html":{}}}],["retrieve(request",{"_index":2193,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["return",{"_index":110,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancController.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"injectables/ProcessingQueueService.html":{},"guards/QueryGuard.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"guards/ReadAllGuard.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TmtvService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":1680,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["returns",{"_index":43,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"controllers/OauthConfigController.html":{},"injectables/OauthConfigService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"injectables/ProcessingQueueService.html":{},"guards/QueryGuard.html":{},"injectables/QueryQueueTask.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{},"guards/ReadAllGuard.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TmtvService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["reverse",{"_index":1888,"title":{},"body":{"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"miscellaneous/variables.html":{}}}],["role",{"_index":520,"title":{"entities/Role.html":{}},"body":{"injectables/AuthService.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DicomWebGuard.html":{},"classes/GetUserDto.html":{},"injectables/InstanceGuard.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SeederModule.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["role'})@apiresponse({status",{"_index":2827,"title":{},"body":{"controllers/RolesController.html":{}}}],["role.dto",{"_index":1166,"title":{},"body":{"classes/GetRoleDto.html":{},"controllers/RolesController.html":{}}}],["role.dto.ts",{"_index":979,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/GetRoleDto.html":{},"coverage.html":{}}}],["role.dto.ts:11",{"_index":987,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:15",{"_index":981,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:19",{"_index":986,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:23",{"_index":991,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:27",{"_index":982,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:31",{"_index":985,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:35",{"_index":980,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:39",{"_index":988,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:43",{"_index":984,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:47",{"_index":983,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:51",{"_index":992,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:7",{"_index":990,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/GetRoleDto.html":{}}}],["role.entity",{"_index":2856,"title":{},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{}}}],["role.guard",{"_index":1187,"title":{},"body":{"modules/GuardsModule.html":{},"controllers/OrthancController.html":{},"controllers/RolesController.html":{}}}],["role.guard.ts",{"_index":880,"title":{},"body":{"guards/CheckLabelInRole.html":{},"guards/CheckUserRoleGuard.html":{},"coverage.html":{}}}],["role.guard.ts:10",{"_index":888,"title":{},"body":{"guards/CheckLabelInRole.html":{}}}],["role.guard.ts:6",{"_index":912,"title":{},"body":{"guards/CheckUserRoleGuard.html":{}}}],["role.guard.ts:7",{"_index":887,"title":{},"body":{"guards/CheckLabelInRole.html":{}}}],["role.guard.ts:9",{"_index":913,"title":{},"body":{"guards/CheckUserRoleGuard.html":{}}}],["role.labels",{"_index":1414,"title":{},"body":{"entities/Label.html":{},"injectables/RolesService.html":{}}}],["role.labels.filter((label",{"_index":2947,"title":{},"body":{"injectables/RolesService.html":{}}}],["role.labels.find((label",{"_index":2945,"title":{},"body":{"injectables/RolesService.html":{}}}],["role.labels.push(label",{"_index":2946,"title":{},"body":{"injectables/RolesService.html":{}}}],["role.name",{"_index":1452,"title":{},"body":{"controllers/LabelsController.html":{},"entities/User.html":{}}}],["role.name)@joincolumn({name",{"_index":3106,"title":{},"body":{"entities/User.html":{}}}],["role_label",{"_index":2810,"title":{},"body":{"entities/Role.html":{}}}],["role_name",{"_index":3107,"title":{},"body":{"entities/User.html":{}}}],["rolecount",{"_index":3203,"title":{},"body":{"injectables/UsersService.html":{}}}],["rolecount[1",{"_index":3205,"title":{},"body":{"injectables/UsersService.html":{}}}],["rolename",{"_index":427,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["roles",{"_index":1410,"title":{},"body":{"entities/Label.html":{},"injectables/LabelsService.html":{},"controllers/RolesController.html":{}}}],["roles.controller",{"_index":2909,"title":{},"body":{"modules/RolesModule.html":{}}}],["roles.guard",{"_index":1193,"title":{},"body":{"modules/GuardsModule.html":{}}}],["roles.service",{"_index":2855,"title":{},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{}}}],["roles/role.entity",{"_index":1179,"title":{},"body":{"classes/GetUserDto.html":{},"entities/Label.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"modules/SeederModule.html":{},"entities/User.html":{},"modules/UsersModule.html":{}}}],["roles/roles.module",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"modules/GuardsModule.html":{},"modules/OrthancModule.html":{}}}],["roles/roles.service",{"_index":889,"title":{},"body":{"guards/CheckLabelInRole.html":{},"guards/DicomWebGuard.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"guards/StudyGuard.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["rolescontroller",{"_index":2819,"title":{"controllers/RolesController.html":{}},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{},"coverage.html":{}}}],["roleservice",{"_index":2861,"title":{},"body":{"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["rolesmodule",{"_index":226,"title":{"modules/RolesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GuardsModule.html":{},"modules/OrthancModule.html":{},"modules/RolesModule.html":{},"modules.html":{},"overview.html":{}}}],["rolesrepository",{"_index":2918,"title":{},"body":{"injectables/RolesService.html":{}}}],["rolesservice",{"_index":886,"title":{"injectables/RolesService.html":{}},"body":{"guards/CheckLabelInRole.html":{},"guards/DicomWebGuard.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"guards/StudyGuard.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["rolesservice.getrolelabels(role)).map",{"_index":3594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["role})@apiresponse({status",{"_index":2842,"title":{},"body":{"controllers/RolesController.html":{}}}],["route",{"_index":1890,"title":{},"body":{"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{}}}],["router",{"_index":541,"title":{"classes/Router.html":{}},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{},"coverage.html":{}}}],["routes",{"_index":744,"title":{},"body":{"controllers/AutoroutingsController.html":{},"guards/DicomWebGuard.html":{},"injectables/JwtAuthGuard.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{}}}],["rtss",{"_index":3458,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rtssbuffer",{"_index":1597,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["rtssdata",{"_index":3080,"title":{},"body":{"classes/TmtvService.html":{}}}],["rtssid",{"_index":1595,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["rule",{"_index":574,"title":{"classes/Rule.html":{}},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{},"coverage.html":{}}}],["rule.value.tostring",{"_index":682,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["rule.value.tostring().includes(value.tostring",{"_index":685,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["rule.valuerepresentation",{"_index":679,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["rule_condition",{"_index":589,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["rule_condition'})@isenum(rulecondition",{"_index":2953,"title":{},"body":{"classes/Router.html":{}}}],["rulecondition",{"_index":568,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{},"miscellaneous/enumerations.html":{}}}],["rulecondition.and",{"_index":588,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["rules",{"_index":591,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["ruletoboolean",{"_index":614,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["ruletoboolean(rule",{"_index":642,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["run",{"_index":3516,"title":{},"body":{"index.html":{}}}],["runinference",{"_index":3018,"title":{},"body":{"classes/TmtvService.html":{}}}],["runinference(fragmented",{"_index":3033,"title":{},"body":{"classes/TmtvService.html":{}}}],["rxjs",{"_index":1364,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"injectables/NotFoundInterceptor.html":{},"interfaces/OrGuardOptions.html":{},"interfaces/UserInfoResponse.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1845,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["salttest",{"_index":3609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["same",{"_index":900,"title":{},"body":{"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{}}}],["sas",{"_index":3566,"title":{},"body":{"properties.html":{}}}],["scalable",{"_index":3505,"title":{},"body":{"index.html":{}}}],["schedulemodule",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["schema",{"_index":2890,"title":{},"body":{"controllers/RolesController.html":{}}}],["scheme",{"_index":3582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secret",{"_index":487,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":1404,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":1527,"title":{},"body":{"modules/MailModule.html":{}}}],["seed",{"_index":1714,"title":{},"body":{"injectables/OauthConfigService.html":{},"injectables/OptionsService.html":{},"injectables/RolesService.html":{},"injectables/SeederService.html":{},"injectables/UsersService.html":{}}}],["seeder",{"_index":3298,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["seeder.service",{"_index":2968,"title":{},"body":{"modules/SeederModule.html":{}}}],["seeder/seeder.module",{"_index":277,"title":{},"body":{"modules/AppModule.html":{}}}],["seedermodule",{"_index":227,"title":{"modules/SeederModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SeederModule.html":{},"modules.html":{},"overview.html":{}}}],["seederservice",{"_index":2966,"title":{"injectables/SeederService.html":{}},"body":{"modules/SeederModule.html":{},"injectables/SeederService.html":{},"coverage.html":{},"overview.html":{}}}],["seeding",{"_index":2973,"title":{},"body":{"injectables/SeederService.html":{},"miscellaneous/variables.html":{}}}],["seedservice",{"_index":3625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seedservice.seed",{"_index":3627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seg",{"_index":3459,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["segbuffer",{"_index":1602,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["segdata",{"_index":3083,"title":{},"body":{"classes/TmtvService.html":{}}}],["segid",{"_index":1600,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["send",{"_index":353,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AutoroutingHandler.html":{}}}],["send(error.response.statusmessage",{"_index":1287,"title":{},"body":{"classes/HttpClient.html":{}}}],["sendchangepasswordemail",{"_index":1542,"title":{},"body":{"injectables/MailService.html":{}}}],["sendchangepasswordemail(email",{"_index":1546,"title":{},"body":{"injectables/MailService.html":{}}}],["senddicomtoprocessing",{"_index":3019,"title":{},"body":{"classes/TmtvService.html":{}}}],["sendmaskasrtsstoorthanc",{"_index":3020,"title":{},"body":{"classes/TmtvService.html":{}}}],["sendmaskassegtoorthanc",{"_index":3021,"title":{},"body":{"classes/TmtvService.html":{}}}],["sendmasktoorthancas",{"_index":718,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{}}}],["sendtodestination",{"_index":615,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["sendtodestination(destination",{"_index":644,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["sendtopeer(destination.name",{"_index":724,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["sent",{"_index":454,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AutoroutingHandler.html":{}}}],["sent'})@apiresponse({status",{"_index":347,"title":{},"body":{"controllers/AuthController.html":{}}}],["seq",{"_index":2050,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["sequence_name",{"_index":3410,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sequencename",{"_index":3411,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["series",{"_index":695,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"guards/DicomWebGuard.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"injectables/SeriesGuard.html":{},"classes/TmtvService.html":{},"miscellaneous/enumerations.html":{}}}],["series.answer.ts",{"_index":2477,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"coverage.html":{}}}],["series.answer.ts:10",{"_index":2486,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:49",{"_index":2496,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:5",{"_index":2497,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:53",{"_index":2494,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:57",{"_index":2491,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:6",{"_index":2489,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:61",{"_index":2493,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:65",{"_index":2495,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:69",{"_index":2492,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:7",{"_index":2487,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:8",{"_index":2488,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.answer.ts:9",{"_index":2490,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["series.guard",{"_index":1194,"title":{},"body":{"modules/GuardsModule.html":{}}}],["series.length",{"_index":1103,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["series.maindicomtags.modality",{"_index":700,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["series[0].id",{"_index":1106,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["series_date",{"_index":3401,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["series_description",{"_index":2427,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["series_description'})@isstring",{"_index":2531,"title":{},"body":{"classes/QuerySeriesDto.html":{},"classes/QueuesQuerySeriesDto.html":{}}}],["series_id_1",{"_index":2707,"title":{},"body":{"classes/QueuesDeleteDto.html":{}}}],["series_id_2",{"_index":2708,"title":{},"body":{"classes/QueuesDeleteDto.html":{}}}],["series_instance_uid",{"_index":2431,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["series_instance_uid'})@isstring",{"_index":2533,"title":{},"body":{"classes/QuerySeriesDto.html":{},"classes/QueuesQuerySeriesDto.html":{}}}],["series_number",{"_index":2429,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["series_number'})@isstring",{"_index":2535,"title":{},"body":{"classes/QuerySeriesDto.html":{},"classes/QueuesQuerySeriesDto.html":{}}}],["series_time",{"_index":3403,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["series_type",{"_index":3424,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["seriesdate",{"_index":3402,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["seriesdescription",{"_index":2428,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["seriesdetails",{"_index":696,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"controllers/OrthancQueryController.html":{}}}],["seriesdetails.find",{"_index":708,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["seriesdetails.map",{"_index":699,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["seriesdto",{"_index":2210,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["seriesdto.modality",{"_index":2214,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["seriesdto.protocolname",{"_index":2215,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["seriesdto.seriesdescription",{"_index":2216,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["seriesdto.seriesinstanceuid",{"_index":2218,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["seriesdto.seriesnumber",{"_index":2217,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["seriesdto.studyinstanceuid",{"_index":2213,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["seriesguard",{"_index":1185,"title":{"injectables/SeriesGuard.html":{}},"body":{"modules/GuardsModule.html":{},"controllers/OrthancController.html":{},"injectables/SeriesGuard.html":{},"coverage.html":{},"overview.html":{}}}],["seriesinstanceuid",{"_index":2432,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["seriesnumber",{"_index":2430,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["seriestime",{"_index":3404,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["seriestype",{"_index":3425,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["server",{"_index":3506,"title":{},"body":{"index.html":{}}}],["service",{"_index":601,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"injectables/MaskProcessingService.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"injectables/QueuesQueryService.html":{},"classes/TmtvService.html":{}}}],["services",{"_index":11,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/OrthancMonitoringTask.html":{}}}],["set",{"_index":1557,"title":{},"body":{"injectables/MailService.html":{}}}],["set(uuids",{"_index":121,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["setaccessionnumber",{"_index":2374,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setanswerid",{"_index":2375,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setanswernumber",{"_index":2376,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setctorthancseriesid",{"_index":3022,"title":{},"body":{"classes/TmtvService.html":{}}}],["setctorthancseriesid(orthancseriesid",{"_index":3039,"title":{},"body":{"classes/TmtvService.html":{}}}],["setdescription('the",{"_index":3579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setforwardedadress",{"_index":1215,"title":{},"body":{"classes/HttpClient.html":{}}}],["setforwardedadress(address",{"_index":1235,"title":{},"body":{"classes/HttpClient.html":{}}}],["setforwardedprotocol",{"_index":1216,"title":{},"body":{"classes/HttpClient.html":{}}}],["setforwardedprotocol(protocol",{"_index":1238,"title":{},"body":{"classes/HttpClient.html":{}}}],["setlevel",{"_index":1033,"title":{},"body":{"guards/DicomWebGuard.html":{},"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setmaskid",{"_index":1570,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["setmaskid(maskid",{"_index":1582,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["setmetadata(is_public_key",{"_index":3623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmodalitiesinstudy",{"_index":2544,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["setmodality",{"_index":2479,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["setnumberofseriesrelatedinstances",{"_index":2480,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["setnumberofstudyrelatedinstances",{"_index":2545,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["setnumberofstudyrelatedseries",{"_index":2546,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["setoriginaet",{"_index":2377,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setpassword",{"_index":1217,"title":{},"body":{"classes/HttpClient.html":{}}}],["setpassword(password",{"_index":1241,"title":{},"body":{"classes/HttpClient.html":{}}}],["setpatientid",{"_index":2378,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setpatientname",{"_index":2379,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setpetid",{"_index":1571,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["setpetid(petid",{"_index":1584,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["setptorthancseriesid",{"_index":3023,"title":{},"body":{"classes/TmtvService.html":{}}}],["setptorthancseriesid(orthancseriesid",{"_index":3041,"title":{},"body":{"classes/TmtvService.html":{}}}],["setrequestedproceduredescription",{"_index":2380,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setseriesdescription",{"_index":2481,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["setseriesinstanceuid",{"_index":2482,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["setseriesnumber",{"_index":2483,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["setstudydate",{"_index":2381,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setstudydescription",{"_index":2382,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["setstudyinstanceuid",{"_index":2484,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["settitle('gaelo",{"_index":3578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setupanonworker",{"_index":3287,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupanonworker(orthancclient",{"_index":3478,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setupdeleteworker",{"_index":3289,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupdeleteworker(orthancclient",{"_index":3494,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setupprocessingworker",{"_index":3281,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupprocessingworker(orthancclient",{"_index":3495,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setupqueryworker",{"_index":3293,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupqueryworker(orthancclient",{"_index":3493,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setupworkers",{"_index":3265,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupworkers(app",{"_index":3475,"title":{},"body":{"miscellaneous/functions.html":{}}}],["seturl",{"_index":1218,"title":{},"body":{"classes/HttpClient.html":{}}}],["seturl(url",{"_index":1243,"title":{},"body":{"classes/HttpClient.html":{}}}],["setusername",{"_index":1219,"title":{},"body":{"classes/HttpClient.html":{}}}],["setusername(username",{"_index":1245,"title":{},"body":{"classes/HttpClient.html":{}}}],["setversion('2.0",{"_index":3580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shutdownorthanc",{"_index":1904,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["shutdownorthanc(request",{"_index":1941,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["side",{"_index":3507,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":489,"title":{},"body":{"modules/AuthModule.html":{}}}],["sop_instance_uid",{"_index":3448,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sopclassuid",{"_index":3477,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sopinstanceuid",{"_index":3449,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"modules/AutoroutingsModule.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateAutoroutingDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"modules/GuardsModule.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"modules/LabelsModule.html":{},"injectables/LabelsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"modules/OptionsModule.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"modules/ProcessingModule.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"modules/QueueModule.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"modules/TasksModule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateOptionDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"index.html":{}}}],["special",{"_index":863,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["specific",{"_index":13,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/DicomWebGuard.html":{},"controllers/LabelsController.html":{}}}],["sponsors",{"_index":3535,"title":{},"body":{"index.html":{}}}],["sqlite",{"_index":3353,"title":{},"body":{"dependencies.html":{}}}],["sqlite3",{"_index":3355,"title":{},"body":{"dependencies.html":{}}}],["src/.../anon.worker.ts",{"_index":3465,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../autorouting.enum.ts",{"_index":3362,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../build_docs.ts",{"_index":3568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../check",{"_index":3569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":3572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../delete.worker.ts",{"_index":3470,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../enums.ts",{"_index":3363,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../is",{"_index":3466,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../logger.middleware.ts",{"_index":3467,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":3464,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../or.guard.ts",{"_index":3468,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../passwords.ts",{"_index":3570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../processing.worker.ts",{"_index":3471,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../public.ts",{"_index":3573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../query.worker.ts",{"_index":3469,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../seed.ts",{"_index":3574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../utils.ts",{"_index":3571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":185,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:13",{"_index":192,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:89",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":316,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:130",{"_index":334,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:150",{"_index":349,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:54",{"_index":341,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:72",{"_index":364,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:99",{"_index":370,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":469,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:15",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:21",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:30",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:43",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:52",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/change",{"_index":847,"title":{},"body":{"classes/ChangePasswordDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":1505,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:11",{"_index":1509,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:7",{"_index":1507,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/lost",{"_index":1512,"title":{},"body":{"classes/LostPassworDto.html":{},"coverage.html":{}}}],["src/auth/dto/register.dto.ts",{"_index":2788,"title":{},"body":{"classes/RegisterDto.html":{},"coverage.html":{}}}],["src/auth/dto/register.dto.ts:11",{"_index":2792,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:15",{"_index":2794,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:7",{"_index":2790,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/jwt",{"_index":1337,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":1394,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:10",{"_index":1397,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:19",{"_index":1399,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/local.strategy.ts",{"_index":1497,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/local.strategy.ts:11",{"_index":1499,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/local.strategy.ts:19",{"_index":1501,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/autorouting/autorouting.entity.ts",{"_index":538,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{},"coverage.html":{}}}],["src/autorouting/autorouting.entity.ts:104",{"_index":549,"title":{},"body":{"entities/Autorouting.html":{}}}],["src/autorouting/autorouting.entity.ts:109",{"_index":544,"title":{},"body":{"entities/Autorouting.html":{}}}],["src/autorouting/autorouting.entity.ts:115",{"_index":555,"title":{},"body":{"entities/Autorouting.html":{}}}],["src/autorouting/autorouting.entity.ts:25",{"_index":2959,"title":{},"body":{"classes/Rule.html":{}}}],["src/autorouting/autorouting.entity.ts:30",{"_index":2963,"title":{},"body":{"classes/Rule.html":{}}}],["src/autorouting/autorouting.entity.ts:35",{"_index":2961,"title":{},"body":{"classes/Rule.html":{}}}],["src/autorouting/autorouting.entity.ts:40",{"_index":2957,"title":{},"body":{"classes/Rule.html":{}}}],["src/autorouting/autorouting.entity.ts:47",{"_index":1016,"title":{},"body":{"classes/Destination.html":{}}}],["src/autorouting/autorouting.entity.ts:52",{"_index":1017,"title":{},"body":{"classes/Destination.html":{}}}],["src/autorouting/autorouting.entity.ts:59",{"_index":2954,"title":{},"body":{"classes/Router.html":{}}}],["src/autorouting/autorouting.entity.ts:74",{"_index":2955,"title":{},"body":{"classes/Router.html":{}}}],["src/autorouting/autorouting.entity.ts:87",{"_index":2952,"title":{},"body":{"classes/Router.html":{}}}],["src/autorouting/autorouting.entity.ts:94",{"_index":551,"title":{},"body":{"entities/Autorouting.html":{}}}],["src/autorouting/autorouting.entity.ts:99",{"_index":553,"title":{},"body":{"entities/Autorouting.html":{}}}],["src/autorouting/autorouting.enum.ts",{"_index":3364,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/autorouting/autorouting.handler.ts",{"_index":599,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"coverage.html":{}}}],["src/autorouting/autorouting.handler.ts:118",{"_index":639,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:133",{"_index":648,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:196",{"_index":641,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:212",{"_index":627,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:24",{"_index":650,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:26",{"_index":661,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:34",{"_index":620,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:45",{"_index":623,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:49",{"_index":629,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:60",{"_index":633,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:67",{"_index":637,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:74",{"_index":631,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:83",{"_index":635,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autorouting.handler.ts:92",{"_index":643,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["src/autorouting/autoroutings.controller.ts",{"_index":741,"title":{},"body":{"controllers/AutoroutingsController.html":{},"coverage.html":{}}}],["src/autorouting/autoroutings.controller.ts:36",{"_index":758,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["src/autorouting/autoroutings.controller.ts:51",{"_index":775,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["src/autorouting/autoroutings.controller.ts:64",{"_index":764,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["src/autorouting/autoroutings.controller.ts:78",{"_index":772,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["src/autorouting/autoroutings.controller.ts:91",{"_index":768,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["src/autorouting/autoroutings.module.ts",{"_index":804,"title":{},"body":{"modules/AutoroutingsModule.html":{}}}],["src/autorouting/autoroutings.service.ts",{"_index":808,"title":{},"body":{"injectables/AutoroutingsService.html":{},"coverage.html":{}}}],["src/autorouting/autoroutings.service.ts:13",{"_index":818,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["src/autorouting/autoroutings.service.ts:20",{"_index":826,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["src/autorouting/autoroutings.service.ts:24",{"_index":828,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["src/autorouting/autoroutings.service.ts:32",{"_index":830,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["src/autorouting/autoroutings.service.ts:38",{"_index":821,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["src/autorouting/autoroutings.service.ts:43",{"_index":834,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["src/autorouting/autoroutings.service.ts:48",{"_index":832,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["src/autorouting/autoroutings.service.ts:53",{"_index":825,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["src/autorouting/autoroutings.service.ts:59",{"_index":823,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["src/autorouting/dto/create",{"_index":915,"title":{},"body":{"classes/CreateAutoroutingDto.html":{},"coverage.html":{}}}],["src/autorouting/dto/orthanc",{"_index":2046,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{},"coverage.html":{}}}],["src/build_docs.ts",{"_index":3251,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/constants/constants.ts",{"_index":3254,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/constants/enums.ts",{"_index":3455,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/guards/check",{"_index":878,"title":{},"body":{"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"coverage.html":{}}}],["src/guards/dicom",{"_index":1019,"title":{},"body":{"guards/DicomWebGuard.html":{},"coverage.html":{}}}],["src/guards/guards.module.ts",{"_index":1186,"title":{},"body":{"modules/GuardsModule.html":{}}}],["src/guards/instance.guard.ts",{"_index":1296,"title":{},"body":{"injectables/InstanceGuard.html":{},"coverage.html":{}}}],["src/guards/instance.guard.ts:9",{"_index":1298,"title":{},"body":{"injectables/InstanceGuard.html":{}}}],["src/guards/jwt",{"_index":1331,"title":{},"body":{"injectables/JwtOAuthGuard.html":{},"coverage.html":{}}}],["src/guards/jwt.guard.ts",{"_index":1313,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/guards/jwt.guard.ts:10",{"_index":1319,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["src/guards/jwt.guard.ts:15",{"_index":1320,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["src/guards/local.guard.ts",{"_index":1494,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/guards/or.guard.ts",{"_index":1834,"title":{},"body":{"interfaces/OrGuardOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/guards/roles.guard.ts",{"_index":139,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{},"coverage.html":{}}}],["src/guards/roles.guard.ts:111",{"_index":845,"title":{},"body":{"guards/CdBurnerGuard.html":{}}}],["src/guards/roles.guard.ts:124",{"_index":535,"title":{},"body":{"guards/AutoRoutingGuard.html":{}}}],["src/guards/roles.guard.ts:137",{"_index":2787,"title":{},"body":{"guards/ReadAllGuard.html":{}}}],["src/guards/roles.guard.ts:20",{"_index":181,"title":{},"body":{"guards/AnonymizeGuard.html":{}}}],["src/guards/roles.guard.ts:33",{"_index":1145,"title":{},"body":{"guards/ExportGuard.html":{}}}],["src/guards/roles.guard.ts:46",{"_index":2416,"title":{},"body":{"guards/QueryGuard.html":{}}}],["src/guards/roles.guard.ts:59",{"_index":534,"title":{},"body":{"guards/AutoQueryGuard.html":{}}}],["src/guards/roles.guard.ts:7",{"_index":1295,"title":{},"body":{"guards/ImportGuard.html":{}}}],["src/guards/roles.guard.ts:72",{"_index":1014,"title":{},"body":{"guards/DeleteGuard.html":{}}}],["src/guards/roles.guard.ts:85",{"_index":147,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/guards/roles.guard.ts:98",{"_index":1619,"title":{},"body":{"guards/ModifyGuard.html":{}}}],["src/guards/series.guard.ts",{"_index":2980,"title":{},"body":{"injectables/SeriesGuard.html":{},"coverage.html":{}}}],["src/guards/series.guard.ts:10",{"_index":2981,"title":{},"body":{"injectables/SeriesGuard.html":{}}}],["src/guards/study.guard.ts",{"_index":2982,"title":{},"body":{"guards/StudyGuard.html":{},"coverage.html":{}}}],["src/guards/study.guard.ts:15",{"_index":2985,"title":{},"body":{"guards/StudyGuard.html":{}}}],["src/guards/study.guard.ts:9",{"_index":2984,"title":{},"body":{"guards/StudyGuard.html":{}}}],["src/interceptors/not",{"_index":1620,"title":{},"body":{"injectables/NotFoundInterceptor.html":{},"coverage.html":{}}}],["src/interceptors/public.ts",{"_index":3259,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/labels/label.entity.ts",{"_index":1409,"title":{},"body":{"entities/Label.html":{},"coverage.html":{}}}],["src/labels/label.entity.ts:13",{"_index":1415,"title":{},"body":{"entities/Label.html":{}}}],["src/labels/label.entity.ts:9",{"_index":1412,"title":{},"body":{"entities/Label.html":{}}}],["src/labels/labels.controller.ts",{"_index":1423,"title":{},"body":{"controllers/LabelsController.html":{},"coverage.html":{}}}],["src/labels/labels.controller.ts:31",{"_index":1430,"title":{},"body":{"controllers/LabelsController.html":{}}}],["src/labels/labels.controller.ts:45",{"_index":1433,"title":{},"body":{"controllers/LabelsController.html":{}}}],["src/labels/labels.controller.ts:58",{"_index":1436,"title":{},"body":{"controllers/LabelsController.html":{}}}],["src/labels/labels.controller.ts:68",{"_index":1428,"title":{},"body":{"controllers/LabelsController.html":{}}}],["src/labels/labels.dto.ts",{"_index":1420,"title":{},"body":{"classes/LabelDto.html":{},"coverage.html":{}}}],["src/labels/labels.dto.ts:7",{"_index":1421,"title":{},"body":{"classes/LabelDto.html":{}}}],["src/labels/labels.module.ts",{"_index":1464,"title":{},"body":{"modules/LabelsModule.html":{}}}],["src/labels/labels.service.ts",{"_index":1468,"title":{},"body":{"injectables/LabelsService.html":{},"coverage.html":{}}}],["src/labels/labels.service.ts:12",{"_index":1473,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/labels/labels.service.ts:18",{"_index":1477,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/labels/labels.service.ts:22",{"_index":1479,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/labels/labels.service.ts:31",{"_index":1481,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/labels/labels.service.ts:35",{"_index":1483,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/labels/labels.service.ts:40",{"_index":1484,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/labels/labels.service.ts:44",{"_index":1476,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/mail/mail.module.ts",{"_index":1516,"title":{},"body":{"modules/MailModule.html":{}}}],["src/mail/mail.service.ts",{"_index":1541,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/mail/mail.service.ts:12",{"_index":1547,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:6",{"_index":1545,"title":{},"body":{"injectables/MailService.html":{}}}],["src/main.ts",{"_index":3263,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/oauth",{"_index":1644,"title":{},"body":{"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"modules/OauthConfigModule.html":{},"injectables/OauthConfigService.html":{},"coverage.html":{}}}],["src/options/dto/create",{"_index":921,"title":{},"body":{"classes/CreateOptionDto.html":{},"coverage.html":{}}}],["src/options/dto/get",{"_index":1147,"title":{},"body":{"classes/GetOptionDto.html":{},"coverage.html":{}}}],["src/options/dto/update",{"_index":3089,"title":{},"body":{"classes/UpdateOptionDto.html":{},"coverage.html":{}}}],["src/options/option.entity.ts",{"_index":1736,"title":{},"body":{"entities/Option.html":{},"coverage.html":{}}}],["src/options/option.entity.ts:10",{"_index":1781,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:14",{"_index":1739,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:18",{"_index":1745,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:22",{"_index":1742,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:26",{"_index":1747,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:30",{"_index":1783,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:34",{"_index":1768,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:38",{"_index":1758,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:42",{"_index":1766,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:46",{"_index":1761,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:50",{"_index":1763,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:54",{"_index":1755,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:58",{"_index":1771,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:62",{"_index":1778,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:66",{"_index":1776,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:70",{"_index":1753,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:74",{"_index":1774,"title":{},"body":{"entities/Option.html":{}}}],["src/options/option.entity.ts:78",{"_index":1750,"title":{},"body":{"entities/Option.html":{}}}],["src/options/options.controller.ts",{"_index":1786,"title":{},"body":{"controllers/OptionsController.html":{},"coverage.html":{}}}],["src/options/options.controller.ts:30",{"_index":1789,"title":{},"body":{"controllers/OptionsController.html":{}}}],["src/options/options.controller.ts:53",{"_index":1794,"title":{},"body":{"controllers/OptionsController.html":{}}}],["src/options/options.module.ts",{"_index":1813,"title":{},"body":{"modules/OptionsModule.html":{}}}],["src/options/options.service.ts",{"_index":1817,"title":{},"body":{"injectables/OptionsService.html":{},"coverage.html":{}}}],["src/options/options.service.ts:11",{"_index":1821,"title":{},"body":{"injectables/OptionsService.html":{}}}],["src/options/options.service.ts:17",{"_index":1823,"title":{},"body":{"injectables/OptionsService.html":{}}}],["src/options/options.service.ts:21",{"_index":1826,"title":{},"body":{"injectables/OptionsService.html":{}}}],["src/options/options.service.ts:26",{"_index":1824,"title":{},"body":{"injectables/OptionsService.html":{}}}],["src/orthanc/dto/query",{"_index":2417,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"coverage.html":{}}}],["src/orthanc/orthanc",{"_index":1886,"title":{},"body":{"controllers/OrthancAdminController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"coverage.html":{}}}],["src/orthanc/orthanc.controller.ts",{"_index":1965,"title":{},"body":{"controllers/OrthancController.html":{},"coverage.html":{}}}],["src/orthanc/orthanc.controller.ts:102",{"_index":1985,"title":{},"body":{"controllers/OrthancController.html":{}}}],["src/orthanc/orthanc.controller.ts:112",{"_index":1982,"title":{},"body":{"controllers/OrthancController.html":{}}}],["src/orthanc/orthanc.controller.ts:122",{"_index":1993,"title":{},"body":{"controllers/OrthancController.html":{}}}],["src/orthanc/orthanc.controller.ts:150",{"_index":1990,"title":{},"body":{"controllers/OrthancController.html":{}}}],["src/orthanc/orthanc.controller.ts:43",{"_index":2005,"title":{},"body":{"controllers/OrthancController.html":{}}}],["src/orthanc/orthanc.controller.ts:62",{"_index":2002,"title":{},"body":{"controllers/OrthancController.html":{}}}],["src/orthanc/orthanc.controller.ts:72",{"_index":1978,"title":{},"body":{"controllers/OrthancController.html":{}}}],["src/orthanc/orthanc.controller.ts:82",{"_index":1996,"title":{},"body":{"controllers/OrthancController.html":{}}}],["src/orthanc/orthanc.controller.ts:92",{"_index":1999,"title":{},"body":{"controllers/OrthancController.html":{}}}],["src/orthanc/orthanc.module.ts",{"_index":2139,"title":{},"body":{"modules/OrthancModule.html":{}}}],["src/orthanc/query",{"_index":2365,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"coverage.html":{}}}],["src/orthanc/tag",{"_index":2987,"title":{},"body":{"classes/TagAnon.html":{},"coverage.html":{}}}],["src/orthanc/utils.ts",{"_index":3275,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/processing/mask",{"_index":1559,"title":{},"body":{"injectables/MaskProcessingService.html":{},"coverage.html":{}}}],["src/processing/processing",{"_index":2324,"title":{},"body":{"classes/ProcessingJobDto.html":{},"injectables/ProcessingQueueService.html":{},"classes/TmtvJobDto.html":{},"coverage.html":{}}}],["src/processing/processing.controller.ts",{"_index":2259,"title":{},"body":{"controllers/ProcessingController.html":{},"coverage.html":{}}}],["src/processing/processing.controller.ts:116",{"_index":2269,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["src/processing/processing.controller.ts:136",{"_index":2284,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["src/processing/processing.controller.ts:44",{"_index":2272,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["src/processing/processing.controller.ts:55",{"_index":2280,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["src/processing/processing.controller.ts:78",{"_index":2276,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["src/processing/processing.file.ts",{"_index":2314,"title":{},"body":{"classes/ProcessingFile.html":{},"coverage.html":{}}}],["src/processing/processing.file.ts:10",{"_index":2321,"title":{},"body":{"classes/ProcessingFile.html":{}}}],["src/processing/processing.file.ts:14",{"_index":2320,"title":{},"body":{"classes/ProcessingFile.html":{}}}],["src/processing/processing.file.ts:2",{"_index":2319,"title":{},"body":{"classes/ProcessingFile.html":{}}}],["src/processing/processing.file.ts:3",{"_index":2318,"title":{},"body":{"classes/ProcessingFile.html":{}}}],["src/processing/processing.module.ts",{"_index":2337,"title":{},"body":{"modules/ProcessingModule.html":{}}}],["src/processing/processing.worker.ts",{"_index":3280,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/processing/tmtv.service.ts",{"_index":3012,"title":{},"body":{"classes/TmtvService.html":{},"coverage.html":{}}}],["src/processing/tmtv.service.ts:10",{"_index":3028,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:103",{"_index":3038,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:109",{"_index":3031,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:11",{"_index":3025,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:12",{"_index":3029,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:13",{"_index":3026,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:15",{"_index":3027,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:17",{"_index":3024,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:24",{"_index":3042,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:28",{"_index":3040,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:32",{"_index":3032,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:36",{"_index":3036,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:52",{"_index":3030,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:69",{"_index":3034,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/processing/tmtv.service.ts:97",{"_index":3037,"title":{},"body":{"classes/TmtvService.html":{}}}],["src/queues/anon/anon.worker.ts",{"_index":3285,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/queues/anon/queue",{"_index":2587,"title":{},"body":{"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"coverage.html":{}}}],["src/queues/delete/delete.worker.ts",{"_index":3288,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/queues/delete/queue",{"_index":2674,"title":{},"body":{"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"coverage.html":{}}}],["src/queues/query/query.worker.ts",{"_index":3290,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/queues/query/queue",{"_index":2714,"title":{},"body":{"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"coverage.html":{}}}],["src/queues/queue.module.ts",{"_index":2576,"title":{},"body":{"modules/QueueModule.html":{}}}],["src/queues/queue.service.ts",{"_index":6,"title":{},"body":{"injectables/AbstractQueueService.html":{},"coverage.html":{}}}],["src/queues/queue.service.ts:103",{"_index":50,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/queues/queue.service.ts:107",{"_index":60,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/queues/queue.service.ts:14",{"_index":41,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/queues/queue.service.ts:25",{"_index":64,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/queues/queue.service.ts:40",{"_index":55,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/queues/queue.service.ts:77",{"_index":47,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/queues/queue.service.ts:8",{"_index":33,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/queues/queue.service.ts:84",{"_index":62,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/queues/queue.service.ts:92",{"_index":51,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/queues/queue.service.ts:99",{"_index":49,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["src/roles/dto/create",{"_index":978,"title":{},"body":{"classes/CreateRoleDto.html":{},"coverage.html":{}}}],["src/roles/dto/get",{"_index":1162,"title":{},"body":{"classes/GetRoleDto.html":{},"coverage.html":{}}}],["src/roles/dto/with",{"_index":3223,"title":{},"body":{"classes/WithLabels.html":{},"coverage.html":{}}}],["src/roles/role.entity.ts",{"_index":2796,"title":{},"body":{"entities/Role.html":{},"coverage.html":{}}}],["src/roles/role.entity.ts:13",{"_index":2808,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:17",{"_index":2799,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:21",{"_index":2807,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:25",{"_index":2815,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:29",{"_index":2801,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:33",{"_index":2806,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:37",{"_index":2798,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:41",{"_index":2812,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:45",{"_index":2805,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:49",{"_index":2803,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:53",{"_index":2817,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:58",{"_index":2811,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/role.entity.ts:9",{"_index":2814,"title":{},"body":{"entities/Role.html":{}}}],["src/roles/roles.controller.ts",{"_index":2820,"title":{},"body":{"controllers/RolesController.html":{},"coverage.html":{}}}],["src/roles/roles.controller.ts:103",{"_index":2853,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:119",{"_index":2830,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:135",{"_index":2847,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:150",{"_index":2850,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:52",{"_index":2840,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:63",{"_index":2844,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:74",{"_index":2834,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:89",{"_index":2837,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.module.ts",{"_index":2908,"title":{},"body":{"modules/RolesModule.html":{}}}],["src/roles/roles.service.ts",{"_index":2911,"title":{},"body":{"injectables/RolesService.html":{},"coverage.html":{}}}],["src/roles/roles.service.ts:11",{"_index":2917,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:19",{"_index":2923,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:23",{"_index":2924,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:30",{"_index":2926,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:34",{"_index":2929,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:38",{"_index":2922,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:42",{"_index":2931,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:46",{"_index":2935,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:50",{"_index":2920,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:65",{"_index":2927,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:73",{"_index":2933,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:84",{"_index":2934,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/seeder/seed.ts",{"_index":3297,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/seeder/seeder.module.ts",{"_index":2967,"title":{},"body":{"modules/SeederModule.html":{}}}],["src/seeder/seeder.service.ts",{"_index":2972,"title":{},"body":{"injectables/SeederService.html":{},"coverage.html":{}}}],["src/seeder/seeder.service.ts:11",{"_index":2974,"title":{},"body":{"injectables/SeederService.html":{}}}],["src/seeder/seeder.service.ts:19",{"_index":2975,"title":{},"body":{"injectables/SeederService.html":{}}}],["src/tasks/orthanc",{"_index":2152,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{},"coverage.html":{}}}],["src/tasks/query",{"_index":2442,"title":{},"body":{"injectables/QueryQueueTask.html":{},"coverage.html":{}}}],["src/tasks/tasks.module.ts",{"_index":3003,"title":{},"body":{"modules/TasksModule.html":{}}}],["src/users/dto/create",{"_index":994,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/get",{"_index":1169,"title":{},"body":{"classes/GetUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":3091,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/user.entity.ts",{"_index":3093,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/users/user.entity.ts:17",{"_index":3099,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:23",{"_index":3098,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:29",{"_index":3101,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:36",{"_index":3104,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:43",{"_index":3096,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:51",{"_index":3112,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:56",{"_index":3108,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:62",{"_index":3114,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:68",{"_index":3115,"title":{},"body":{"entities/User.html":{}}}],["src/users/users.controller.ts",{"_index":3119,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:112",{"_index":3131,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:126",{"_index":3127,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:50",{"_index":3132,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:69",{"_index":3136,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:86",{"_index":3138,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":3175,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":3177,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:11",{"_index":3183,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:17",{"_index":3196,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:26",{"_index":3187,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:32",{"_index":3190,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:43",{"_index":3194,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:50",{"_index":3192,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:64",{"_index":3199,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:68",{"_index":3201,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:75",{"_index":3186,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:79",{"_index":3197,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:84",{"_index":3198,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/utils/check",{"_index":3299,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/http.client.ts",{"_index":1199,"title":{},"body":{"classes/HttpClient.html":{},"coverage.html":{}}}],["src/utils/http.client.ts:10",{"_index":1221,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:11",{"_index":1222,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:125",{"_index":1250,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:13",{"_index":1223,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:145",{"_index":1234,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:154",{"_index":1232,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:41",{"_index":1236,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:45",{"_index":1239,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:49",{"_index":1244,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:53",{"_index":1246,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:57",{"_index":1242,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:61",{"_index":1225,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:7",{"_index":1229,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:73",{"_index":1226,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:8",{"_index":1230,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:85",{"_index":1227,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:9",{"_index":1224,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/http.client.ts:97",{"_index":1228,"title":{},"body":{"classes/HttpClient.html":{}}}],["src/utils/is",{"_index":3302,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/logger.middleware.ts",{"_index":3304,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/orthanc",{"_index":3305,"title":{},"body":{"coverage.html":{}}}],["src/utils/passwords.ts",{"_index":3308,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/processing.client.ts",{"_index":3309,"title":{},"body":{"coverage.html":{}}}],["src/validators/string",{"_index":1300,"title":{},"body":{"classes/IsNumberOrString.html":{},"coverage.html":{}}}],["stable_patient",{"_index":3376,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stable_series",{"_index":3372,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stable_study",{"_index":3374,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stablepatient",{"_index":3377,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stableseries",{"_index":3373,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stablestudy",{"_index":3375,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["start",{"_index":3517,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":3520,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":3522,"title":{},"body":{"index.html":{}}}],["started",{"_index":3499,"title":{"index.html":{}},"body":{}}],["starter",{"_index":3511,"title":{},"body":{"index.html":{}}}],["starthour",{"_index":3486,"title":{},"body":{"miscellaneous/functions.html":{}}}],["startminute",{"_index":3483,"title":{},"body":{"miscellaneous/functions.html":{}}}],["state",{"_index":102,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"injectables/QueryQueueTask.html":{}}}],["statejobs",{"_index":103,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["statejobs.foreach((job",{"_index":105,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["statements",{"_index":3233,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":91,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["station_name",{"_index":3406,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stationname",{"_index":3407,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["status",{"_index":402,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["status(error.response.status",{"_index":1286,"title":{},"body":{"classes/HttpClient.html":{}}}],["stay",{"_index":3543,"title":{},"body":{"index.html":{}}}],["strategies",{"_index":1967,"title":{},"body":{"controllers/OrthancController.html":{}}}],["strategy",{"_index":1334,"title":{},"body":{"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["stream",{"_index":1271,"title":{},"body":{"classes/HttpClient.html":{}}}],["streamanswertores",{"_index":1212,"title":{},"body":{"classes/HttpClient.html":{}}}],["streamtowriteanswerwithcallback",{"_index":1220,"title":{},"body":{"classes/HttpClient.html":{}}}],["streamtowriteanswerwithcallback(url",{"_index":1247,"title":{},"body":{"classes/HttpClient.html":{}}}],["streamwriter",{"_index":1248,"title":{},"body":{"classes/HttpClient.html":{}}}],["strict",{"_index":1540,"title":{},"body":{"modules/MailModule.html":{},"interfaces/OrGuardOptions.html":{}}}],["string",{"_index":53,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/AuthService.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtOauthStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OrthancController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancQueryController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TagAnon.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["string|null",{"_index":2519,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["strstr",{"_index":1034,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["strstr(haystack",{"_index":1048,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["strstr(‘kevin",{"_index":1136,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["strstr(‘name@example.com",{"_index":1138,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["studies",{"_index":1063,"title":{},"body":{"guards/DicomWebGuard.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["studies/series",{"_index":1098,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["study",{"_index":958,"title":{},"body":{"classes/CreateOptionDto.html":{},"guards/DicomWebGuard.html":{},"injectables/InstanceGuard.html":{},"entities/Option.html":{},"controllers/OrthancController.html":{},"controllers/QueuesQueryController.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["study'})@column({default",{"_index":1764,"title":{},"body":{"entities/Option.html":{}}}],["study'})@isstring",{"_index":959,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["study.answer.ts",{"_index":2540,"title":{},"body":{"classes/QueryStudyAnswer.html":{},"coverage.html":{}}}],["study.answer.ts:43",{"_index":2550,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["study.answer.ts:47",{"_index":2553,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["study.answer.ts:5",{"_index":2554,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["study.answer.ts:51",{"_index":2552,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["study.answer.ts:57",{"_index":2551,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["study.answer.ts:6",{"_index":2548,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["study.answer.ts:7",{"_index":2549,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["study.answer.ts:8",{"_index":2547,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["study.guard",{"_index":1196,"title":{},"body":{"modules/GuardsModule.html":{},"injectables/InstanceGuard.html":{},"injectables/SeriesGuard.html":{}}}],["study.ts",{"_index":3300,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["study_date",{"_index":3388,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["study_description",{"_index":2436,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["study_description'})@isstring",{"_index":2568,"title":{},"body":{"classes/QueryStudyDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["study_id",{"_index":3391,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["study_instance_uid",{"_index":2439,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["study_instance_uid'})@isstring",{"_index":2570,"title":{},"body":{"classes/QueryStudyDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["study_time",{"_index":3389,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["study_uid",{"_index":2423,"title":{},"body":{"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{}}}],["study_uid'})@isstring",{"_index":2537,"title":{},"body":{"classes/QuerySeriesDto.html":{},"classes/QueuesQuerySeriesDto.html":{}}}],["studydate",{"_index":2383,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["studydescription",{"_index":2384,"title":{},"body":{"classes/QueryAnswer.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["studydetails",{"_index":2221,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["studydto",{"_index":2220,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["studydto.accessionnb",{"_index":2228,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["studydto.modality",{"_index":2226,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["studydto.patientid",{"_index":2224,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["studydto.patientname",{"_index":2223,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["studydto.studydate",{"_index":2225,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["studydto.studydescription",{"_index":2227,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["studydto.studyinstanceuid",{"_index":2229,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["studyguard",{"_index":1195,"title":{"guards/StudyGuard.html":{}},"body":{"modules/GuardsModule.html":{},"injectables/InstanceGuard.html":{},"controllers/OrthancController.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"coverage.html":{}}}],["studyid",{"_index":3392,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["studyinstanceuid",{"_index":1078,"title":{},"body":{"guards/DicomWebGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"miscellaneous/enumerations.html":{}}}],["studysubstring",{"_index":1073,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["studysubstring.indexof",{"_index":1077,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["studysubstring.replace",{"_index":1075,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["studysubstring.substr(0",{"_index":1079,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["studytime",{"_index":3390,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sub",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["subject",{"_index":1552,"title":{},"body":{"injectables/MailService.html":{}}}],["success",{"_index":403,"title":{},"body":{"controllers/AuthController.html":{}}}],["success'})@apiresponse({status",{"_index":337,"title":{},"body":{"controllers/AuthController.html":{}}}],["super",{"_index":1325,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"interfaces/UserInfoResponse.html":{}}}],["super(anonqueue",{"_index":2671,"title":{},"body":{"injectables/QueuesAnonService.html":{}}}],["super(deletequeue",{"_index":2713,"title":{},"body":{"injectables/QueuesDeleteService.html":{}}}],["super(queryqueue",{"_index":2775,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["super.canactivate(context",{"_index":1330,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["support",{"_index":3536,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":3554,"title":{},"body":{"modules.html":{}}}],["swaggermodule.createdocument(app",{"_index":3586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["switch",{"_index":1592,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["synchronize",{"_index":307,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":1818,"title":{},"body":{"injectables/OptionsService.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":3311,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":2990,"title":{},"body":{"classes/TagAnon.html":{}}}],["taganon",{"_index":2986,"title":{"classes/TagAnon.html":{}},"body":{"classes/TagAnon.html":{},"coverage.html":{}}}],["tagpolicies",{"_index":2993,"title":{},"body":{"classes/TagAnon.html":{},"miscellaneous/enumerations.html":{}}}],["tagpolicy",{"_index":2991,"title":{},"body":{"classes/TagAnon.html":{}}}],["takewhile",{"_index":1844,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["takewhile((val",{"_index":1866,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["task",{"_index":2260,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["tasks/tasks.module",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["tasksmodule",{"_index":228,"title":{"modules/TasksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["template",{"_index":1534,"title":{},"body":{"modules/MailModule.html":{}}}],["templates",{"_index":1537,"title":{},"body":{"modules/MailModule.html":{}}}],["temporal_position_identifier",{"_index":3446,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["temporalpositionidentifier",{"_index":3447,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["test",{"_index":3525,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":3528,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":3527,"title":{},"body":{"index.html":{}}}],["tested",{"_index":1850,"title":{},"body":{"interfaces/OrGuardOptions.html":{},"miscellaneous/functions.html":{}}}],["testing",{"_index":1846,"title":{},"body":{"interfaces/OrGuardOptions.html":{},"miscellaneous/functions.html":{}}}],["tests",{"_index":3524,"title":{},"body":{"index.html":{}}}],["text",{"_index":1310,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["thanks",{"_index":3534,"title":{},"body":{"index.html":{}}}],["then((ctseriesid",{"_index":3060,"title":{},"body":{"classes/TmtvService.html":{}}}],["then((ptseriesid",{"_index":3064,"title":{},"body":{"classes/TmtvService.html":{}}}],["then((response",{"_index":1275,"title":{},"body":{"classes/HttpClient.html":{}}}],["then(async",{"_index":3049,"title":{},"body":{"classes/TmtvService.html":{}}}],["third",{"_index":1202,"title":{},"body":{"classes/HttpClient.html":{},"injectables/JwtOAuthGuard.html":{}}}],["this.accessionnumber",{"_index":2412,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["this.answerid",{"_index":2407,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["this.answernumber",{"_index":2408,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["this.authservice.createconfirmationtoken(newuser",{"_index":441,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.createconfirmationtoken(user",{"_index":458,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(req['user",{"_index":409,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(user",{"_index":428,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(email",{"_index":1504,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.authservice.verifyconfirmationtoken(token",{"_index":452,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.autoroutingconfigs",{"_index":677,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["this.autoroutingconfigs.filter",{"_index":734,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["this.autoroutingservice.create(createautoroutingdto",{"_index":791,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["this.autoroutingservice.disable(id",{"_index":801,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["this.autoroutingservice.enable(id",{"_index":798,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["this.autoroutingservice.findall",{"_index":678,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{}}}],["this.autoroutingservice.findoneorfail(id",{"_index":794,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["this.autoroutingservice.remove(id",{"_index":795,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["this.autoroutingsrepository.delete(id",{"_index":842,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["this.autoroutingsrepository.find",{"_index":837,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["this.autoroutingsrepository.findoneorfail",{"_index":838,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["this.autoroutingsrepository.save(autorouting",{"_index":839,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["this.autoroutingsrepository.update(id",{"_index":841,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["this.configservice.get('app_url')}/change",{"_index":1549,"title":{},"body":{"injectables/MailService.html":{}}}],["this.configservice.get('orthanc_address",{"_index":1804,"title":{},"body":{"controllers/OptionsController.html":{}}}],["this.configservice.get('orthanc_password",{"_index":1806,"title":{},"body":{"controllers/OptionsController.html":{}}}],["this.configservice.get('orthanc_username",{"_index":1805,"title":{},"body":{"controllers/OptionsController.html":{}}}],["this.configservice.get('redis_address",{"_index":1807,"title":{},"body":{"controllers/OptionsController.html":{},"injectables/ProcessingQueueService.html":{}}}],["this.configservice.get('redis_port",{"_index":1808,"title":{},"body":{"controllers/OptionsController.html":{},"injectables/ProcessingQueueService.html":{}}}],["this.createdfiles",{"_index":3047,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.createdfiles.foreach((file",{"_index":3086,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.createdfiles.push(new",{"_index":3052,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.ctorthancseriesid",{"_index":3046,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.ctseriesid",{"_index":3061,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.deferguard(guard",{"_index":1862,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["this.eventemitter.emit('autorouting.updated",{"_index":840,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["this.eventemitter.emit('orthanc",{"_index":2173,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["this.findone(id",{"_index":3212,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.findoneorfail(id",{"_index":843,"title":{},"body":{"injectables/AutoroutingsService.html":{}}}],["this.forwardedaddress",{"_index":1263,"title":{},"body":{"classes/HttpClient.html":{}}}],["this.forwardedprotocol",{"_index":1265,"title":{},"body":{"classes/HttpClient.html":{}}}],["this.fragmentedmask",{"_index":3079,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.fragmentedmask.getmaskas(processingmask.rtss",{"_index":3081,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.fragmentedmask.getmaskas(processingmask.seg",{"_index":3084,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.getjobs",{"_index":2362,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["this.getjobs(uuid",{"_index":125,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["this.getoptions(url",{"_index":1267,"title":{},"body":{"classes/HttpClient.html":{}}}],["this.getpatientid",{"_index":1100,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.getseriesinstanceuid",{"_index":1101,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.getstudyinstanceuid",{"_index":1112,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.getuid(this.pathname",{"_index":1072,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.getuserinfourl(wellknown",{"_index":1384,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["this.getwellknown(decoded.iss",{"_index":1383,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["this.guardisobservable(guardval",{"_index":1873,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["this.guardispromise(guardval",{"_index":1871,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["this.guards",{"_index":1857,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["this.guards.map",{"_index":1861,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["this.handleautoroutingupdated",{"_index":676,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["this.httpservice.get(iss",{"_index":1372,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["this.httpservice.get(url",{"_index":1388,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["this.id",{"_index":2322,"title":{},"body":{"classes/ProcessingFile.html":{}}}],["this.issendable(autorouting.router",{"_index":730,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["this.jwtservice.decode(token",{"_index":1382,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["this.jwtservice.signasync(payload",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.labelservice.findonebyorfail(label",{"_index":2903,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.labelservice.islabelexist(labeldto.name",{"_index":2894,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.labelsrepository.delete(labelname",{"_index":1492,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.labelsrepository.find",{"_index":1486,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.labelsrepository.findoneby",{"_index":1491,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.labelsrepository.findonebyorfail",{"_index":1489,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.labelsrepository.findoneorfail",{"_index":1487,"title":{},"body":{"injectables/LabelsService.html":{},"injectables/RolesService.html":{}}}],["this.labelsrepository.save(label",{"_index":1493,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.labelsservice.create(labeldto",{"_index":1461,"title":{},"body":{"controllers/LabelsController.html":{}}}],["this.labelsservice.findall",{"_index":1446,"title":{},"body":{"controllers/LabelsController.html":{}}}],["this.labelsservice.findallrolesforlabel(labelname)).map",{"_index":1451,"title":{},"body":{"controllers/LabelsController.html":{}}}],["this.labelsservice.findonebyorfail(labelname",{"_index":1455,"title":{},"body":{"controllers/LabelsController.html":{}}}],["this.labelsservice.islabelexist(labeldto.name",{"_index":1458,"title":{},"body":{"controllers/LabelsController.html":{}}}],["this.labelsservice.remove(labelname",{"_index":1456,"title":{},"body":{"controllers/LabelsController.html":{}}}],["this.lastchanges",{"_index":2167,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["this.lastchanges.tostring",{"_index":2170,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["this.level",{"_index":1059,"title":{},"body":{"guards/DicomWebGuard.html":{},"classes/QueryAnswer.html":{}}}],["this.levelmapping[payload.changetype",{"_index":727,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["this.mailerservice.sendmail",{"_index":1551,"title":{},"body":{"injectables/MailService.html":{}}}],["this.mailservice.sendchangepasswordemail",{"_index":442,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.mailservice.sendchangepasswordemail(user.email",{"_index":459,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.maskid",{"_index":1589,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.modalitiesinstudy",{"_index":2556,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["this.modality",{"_index":2523,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["this.modref.get(guard",{"_index":1859,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["this.numberofseriesrelatedinstances",{"_index":2526,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["this.numberofstudyrelatedinstances",{"_index":2558,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["this.numberofstudyrelatedseries",{"_index":2557,"title":{},"body":{"classes/QueryStudyAnswer.html":{}}}],["this.oauthconfigservice.addoauthconfig(oauthconfigdto",{"_index":1699,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["this.oauthconfigservice.deleteoauthconfig(name",{"_index":1693,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["this.oauthconfigservice.findonebyauthorizationurl(authorizationurl",{"_index":1379,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["this.oauthconfigservice.findonebyname",{"_index":1696,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["this.oauthconfigservice.findonebyname(name",{"_index":1691,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["this.oauthconfigservice.getoauthconfig",{"_index":1687,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["this.oauthconfigservice.seed",{"_index":2979,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.oauthconfigsrepository.create",{"_index":1734,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["this.oauthconfigsrepository.create(oauthconfigdto",{"_index":1730,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["this.oauthconfigsrepository.delete",{"_index":1729,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["this.oauthconfigsrepository.find",{"_index":1728,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["this.oauthconfigsrepository.findone",{"_index":1727,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["this.oauthconfigsrepository.insert(config",{"_index":1731,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["this.oauthconfigsrepository.insert(option",{"_index":1735,"title":{},"body":{"injectables/OauthConfigService.html":{}}}],["this.optionrepository.find())[0",{"_index":2461,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["this.optionservice.getoptions",{"_index":1803,"title":{},"body":{"controllers/OptionsController.html":{}}}],["this.optionservice.seed",{"_index":2978,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.optionservice.update(options",{"_index":1810,"title":{},"body":{"controllers/OptionsController.html":{}}}],["this.optionsrepository.create",{"_index":1830,"title":{},"body":{"injectables/OptionsService.html":{}}}],["this.optionsrepository.findonebyorfail",{"_index":1828,"title":{},"body":{"injectables/OptionsService.html":{}}}],["this.optionsrepository.insert(option",{"_index":1831,"title":{},"body":{"injectables/OptionsService.html":{}}}],["this.optionsrepository.update(1",{"_index":1829,"title":{},"body":{"injectables/OptionsService.html":{}}}],["this.originaet",{"_index":2409,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["this.orthancclient",{"_index":723,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"guards/DicomWebGuard.html":{},"injectables/InstanceGuard.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TmtvService.html":{}}}],["this.orthancclient.findinorthanc",{"_index":2015,"title":{},"body":{"controllers/OrthancController.html":{}}}],["this.orthancclient.getchangessince",{"_index":2169,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["this.orthancclient.getlastchanges()).last",{"_index":2168,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["this.orthancclient.getorthancdetails(level",{"_index":728,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["this.orthancclient.getseriesdetailsofstudy(orthancid",{"_index":697,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["this.orthancclient.lookup(getseriesinstanceuid",{"_index":1102,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.orthancclient.lookup(getstudyinstanceuid",{"_index":1114,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.orthancclient.queryseriesinaet",{"_index":2212,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["this.orthancclient.querystudiesinaet",{"_index":2222,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["this.orthancclient.senddicomtoorthanc(rtssdata",{"_index":3082,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.orthancclient.senddicomtoorthanc(segdata",{"_index":3085,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.password",{"_index":1260,"title":{},"body":{"classes/HttpClient.html":{}}}],["this.pathname",{"_index":1084,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.pathname.endswith('/series",{"_index":1065,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.pathname.endswith('/studies",{"_index":1064,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.patientid",{"_index":2411,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["this.patientname",{"_index":2410,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["this.petid",{"_index":1590,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.petseriesorthancid",{"_index":1591,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processevent(autorouting",{"_index":739,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["this.processingclient",{"_index":3058,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.processingclient.createdicom(result",{"_index":3051,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.processingclient.deleteressource(file.gettype",{"_index":3087,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.processingclient.executeinference('pt_seg_attentionunet",{"_index":3067,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.processingclient.fragmentmask",{"_index":3076,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.processingqueue",{"_index":2353,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["this.processingqueue.add(jobid",{"_index":2360,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["this.processingqueue.getjobs(state",{"_index":2361,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["this.processingqueue.obliterate",{"_index":2358,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["this.processingqueue.remove(uuid",{"_index":2359,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["this.processingqueue.resume",{"_index":2357,"title":{},"body":{"injectables/ProcessingQueueService.html":{}}}],["this.processingqueueservice.addjob",{"_index":2309,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["this.processingqueueservice.addjob(null",{"_index":713,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["this.processingqueueservice.flush",{"_index":2291,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["this.processingqueueservice.getalluuids",{"_index":2295,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["this.processingqueueservice.getjobs(undefined",{"_index":2304,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["this.processingqueueservice.getuuidsofuser",{"_index":2301,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["this.processingqueueservice.getuuidsofuser(userid",{"_index":2296,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["this.processingqueueservice.removejob(uuid",{"_index":2312,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["this.processingservice.creatertssfrommask",{"_index":1596,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processingservice.createsegfrommask",{"_index":1601,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processingservice.deleteressource('rtss",{"_index":1599,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processingservice.deleteressource('seg",{"_index":1604,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processingservice.fragmentmask",{"_index":1608,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processingservice.getmaskdicomorientation",{"_index":1594,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processingservice.getrtss(rtssid",{"_index":1598,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processingservice.getseg(segid",{"_index":1603,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processingservice.getstatsmaskseries",{"_index":1606,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.processingservice.thresholdmask",{"_index":1614,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["this.ptorthancseriesid",{"_index":3045,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.ptseriesid",{"_index":3065,"title":{},"body":{"classes/TmtvService.html":{}}}],["this.query",{"_index":1086,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.query?.['0020000d",{"_index":1070,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.query?.['studyinstanceuid",{"_index":1071,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.query['00100020",{"_index":1058,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.query['00100020'].replace",{"_index":1066,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.query['0020000d",{"_index":1061,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.query['studyinstanceuid",{"_index":1062,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.queue",{"_index":70,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["this.queue.add(data['uuid",{"_index":72,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["this.queue.close",{"_index":122,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["this.queue.getjobs",{"_index":80,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["this.queue.getjobs(state",{"_index":104,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["this.queue.ispaused",{"_index":2778,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["this.queue.obliterate",{"_index":123,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["this.queue.pause",{"_index":2776,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["this.queue.remove(job.id",{"_index":88,"title":{},"body":{"injectables/AbstractQueueService.html":{}}}],["this.queue.resume",{"_index":2777,"title":{},"body":{"injectables/QueuesQueryService.html":{}}}],["this.queuequeryservice.ispaused",{"_index":2472,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["this.queuequeryservice.pause",{"_index":2474,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["this.queuequeryservice.resume",{"_index":2473,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["this.queuesanonservice.addjob",{"_index":2618,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["this.queuesanonservice.checkifuseridhasjobs(user.userid",{"_index":2613,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["this.queuesanonservice.flush",{"_index":2606,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["this.queuesanonservice.getalluuids",{"_index":2607,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["this.queuesanonservice.getjobsforuuid(uuid",{"_index":2611,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["this.queuesanonservice.getuuidofuser(user.userid",{"_index":2610,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["this.queuesanonservice.getuuidofuser(userid",{"_index":2608,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["this.queuesanonservice.removejob",{"_index":2631,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["this.queuesdeleteservice.addjob",{"_index":2701,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["this.queuesdeleteservice.checkifuseridhasjobs(user.userid",{"_index":2697,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["this.queuesdeleteservice.flush",{"_index":2692,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["this.queuesdeleteservice.getalluuids",{"_index":2693,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["this.queuesdeleteservice.getjobsforuuid(uuid",{"_index":2696,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["this.queuesdeleteservice.getuuidofuser",{"_index":2695,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["this.queuesdeleteservice.getuuidofuser(userid",{"_index":2694,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["this.queuesdeleteservice.removejob",{"_index":2703,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["this.queuesqueryservice.addjob",{"_index":2748,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["this.queuesqueryservice.checkifuseridhasjobs(user.userid",{"_index":2739,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["this.queuesqueryservice.flush",{"_index":2733,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["this.queuesqueryservice.getalluuids",{"_index":2734,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["this.queuesqueryservice.getjobsforuuid(uuid",{"_index":2737,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["this.queuesqueryservice.getuuidofuser(user.userid",{"_index":2736,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["this.queuesqueryservice.getuuidofuser(userid",{"_index":2735,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["this.queuesqueryservice.removejob",{"_index":2751,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":1327,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.replacevalue",{"_index":2999,"title":{},"body":{"classes/TagAnon.html":{}}}],["this.requestbuffer(url",{"_index":1292,"title":{},"body":{"classes/HttpClient.html":{}}}],["this.requestedproceduredescription",{"_index":2415,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["this.requeststream(url",{"_index":1290,"title":{},"body":{"classes/HttpClient.html":{}}}],["this.roleservice.addrolelabel(rolename",{"_index":2896,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.create(createroledto",{"_index":2878,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.findall",{"_index":2867,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.findallwithlabels",{"_index":2866,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.findonebyorfail(name",{"_index":2870,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.findonebyorfail(rolename",{"_index":2893,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.findonebyorfail(userdto.rolename",{"_index":3158,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.roleservice.getrolelabels(rolename)).map",{"_index":2900,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.isroleexist(createroledto.name",{"_index":2876,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.isroleexist(name",{"_index":2887,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.isroleexist(userdto.rolename",{"_index":3169,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.roleservice.remove(name",{"_index":2884,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.removerolelabel(rolename",{"_index":2904,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.update(name",{"_index":2889,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesrepository.create",{"_index":2948,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesrepository.delete(name",{"_index":2942,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesrepository.find",{"_index":2937,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesrepository.findoneby",{"_index":2940,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesrepository.findonebyorfail",{"_index":2939,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesrepository.findoneorfail",{"_index":2944,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesrepository.insert([admin",{"_index":2949,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesrepository.save(role",{"_index":2941,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesrepository.update(name",{"_index":2943,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesservice",{"_index":1117,"title":{},"body":{"guards/DicomWebGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["this.rolesservice.getrolelabels(userrole)).map",{"_index":895,"title":{},"body":{"guards/CheckLabelInRole.html":{}}}],["this.rolesservice.seed",{"_index":2976,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.sendtodestination(destination",{"_index":732,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["this.seriesdescription",{"_index":2524,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["this.seriesinstanceuid",{"_index":2522,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["this.seriesnumber",{"_index":2525,"title":{},"body":{"classes/QuerySeriesAnswer.html":{}}}],["this.setlevel",{"_index":1087,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.strstr($requesteduri",{"_index":1074,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["this.studydate",{"_index":2414,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["this.studydescription",{"_index":2413,"title":{},"body":{"classes/QueryAnswer.html":{}}}],["this.studyinstanceuid",{"_index":2521,"title":{},"body":{"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{}}}],["this.tag",{"_index":2998,"title":{},"body":{"classes/TagAnon.html":{}}}],["this.tagpolicy",{"_index":2997,"title":{},"body":{"classes/TagAnon.html":{}}}],["this.type",{"_index":2323,"title":{},"body":{"classes/ProcessingFile.html":{}}}],["this.update(id",{"_index":844,"title":{},"body":{"injectables/AutoroutingsService.html":{},"injectables/UsersService.html":{}}}],["this.url",{"_index":1257,"title":{},"body":{"classes/HttpClient.html":{}}}],["this.username",{"_index":1259,"title":{},"body":{"classes/HttpClient.html":{}}}],["this.userservice.create(user)).id",{"_index":3172,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.findall",{"_index":3146,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.findone(id",{"_index":3153,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.findonebyemail(userdto.email",{"_index":3160,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.isexistinguser(id",{"_index":3166,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.isroleused(role.name",{"_index":2881,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.userservice.remove(id",{"_index":3167,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.update(id",{"_index":3164,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersrepository.create",{"_index":3220,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.delete(id",{"_index":3215,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.find",{"_index":3206,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.findandcount",{"_index":3204,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.findone",{"_index":3207,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.insert([admin",{"_index":3222,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.save(user",{"_index":3214,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.update(id",{"_index":3208,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create",{"_index":422,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.findone(userid",{"_index":451,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["this.usersservice.findonebyemail",{"_index":432,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.findonebyemail(email",{"_index":457,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["this.usersservice.findonebyemail(userdata.email",{"_index":421,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.seed",{"_index":2977,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.usersservice.update(user.id",{"_index":527,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.updateuserpassword(userid",{"_index":453,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.validateissuer(wellknown",{"_index":1385,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["this.verifytoken(token",{"_index":1393,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["thresholdedmask",{"_index":1616,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["thresholdedmask.setmaskid(thresholdedmaskid",{"_index":1617,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["thresholdedmask.setpetid(this.petid",{"_index":1618,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["thresholdedmaskid",{"_index":1613,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["thresholdmaskto41",{"_index":1572,"title":{},"body":{"injectables/MaskProcessingService.html":{}}}],["throw",{"_index":417,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/DicomWebGuard.html":{},"classes/HttpClient.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/LabelsController.html":{},"injectables/LocalStrategy.html":{},"injectables/MaskProcessingService.html":{},"injectables/NotFoundInterceptor.html":{},"controllers/OauthConfigController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["throwerror",{"_index":1841,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["throwonfirsterror",{"_index":1835,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["throws",{"_index":1626,"title":{},"body":{"injectables/NotFoundInterceptor.html":{}}}],["time",{"_index":2459,"title":{},"body":{"injectables/QueryQueueTask.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["tls",{"_index":1529,"title":{},"body":{"modules/MailModule.html":{}}}],["tmp",{"_index":3357,"title":{},"body":{"dependencies.html":{}}}],["tmtv",{"_index":3013,"title":{},"body":{"classes/TmtvService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["tmtvjob",{"_index":3282,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["tmtvjob(job",{"_index":3496,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tmtvjobdto",{"_index":2329,"title":{"classes/TmtvJobDto.html":{}},"body":{"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{},"coverage.html":{}}}],["tmtvservice",{"_index":3011,"title":{"classes/TmtvService.html":{}},"body":{"classes/TmtvService.html":{},"coverage.html":{}}}],["toclassonly",{"_index":3227,"title":{},"body":{"classes/WithLabels.html":{}}}],["token",{"_index":356,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/AutoroutingsController.html":{},"classes/ChangePasswordDto.html":{},"injectables/JwtOAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"controllers/LabelsController.html":{},"injectables/MailService.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["token')@apibody({type",{"_index":1670,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["token')@apiparam({name",{"_index":1677,"title":{},"body":{"controllers/OauthConfigController.html":{},"controllers/OrthancController.html":{}}}],["token')@apiresponse({status",{"_index":753,"title":{},"body":{"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OptionsController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["token')@delete('/modalities/*')@useguards(adminguard",{"_index":1914,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@delete('/patients/*')@useguards(deleteguard",{"_index":2034,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["token')@delete('/peers/*')@useguards(adminguard",{"_index":1917,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@delete('/series/*')@useguards(deleteguard",{"_index":2037,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["token')@delete('/studies/*')@useguards(deleteguard",{"_index":2040,"title":{},"body":{"controllers/OrthancDeleteController.html":{}}}],["token')@delete('/studies/*/labels/*')@useguards(readallguard",{"_index":2237,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["token')@get('/dicom",{"_index":1980,"title":{},"body":{"controllers/OrthancController.html":{}}}],["token')@get('/instances/*')@useguards(undefined",{"_index":1984,"title":{},"body":{"controllers/OrthancController.html":{}}}],["token')@get('/labels/:labelname/studies')@useguards(checklabelinrole",{"_index":2004,"title":{},"body":{"controllers/OrthancController.html":{}}}],["token')@get('/modalities*')@useguards(undefined",{"_index":1992,"title":{},"body":{"controllers/OrthancController.html":{}}}],["token')@get('/patients/*')@useguards(readallguard",{"_index":2243,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["token')@get('/peers*')@useguards(exportguard",{"_index":2092,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["token')@get('/peers/*/system')@useguards(adminguard",{"_index":1930,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@get('/plugins')@useguards(adminguard",{"_index":1933,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@get('/queries/*/answers*')@useguards(undefined",{"_index":2185,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["token')@get('/series/*')@useguards(undefined",{"_index":1995,"title":{},"body":{"controllers/OrthancController.html":{}}}],["token')@get('/studies/*')@useguards(undefined",{"_index":2001,"title":{},"body":{"controllers/OrthancController.html":{}}}],["token')@get('/system')@useguards(adminguard",{"_index":1936,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@get('/tools/log",{"_index":1926,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@post('/instances')@useguards(importguard",{"_index":2112,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["token')@post('/jobs/*')@useguards(adminguard",{"_index":1911,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@post('/modalities/*/echo')@useguards(adminguard",{"_index":1908,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@post('/modalities/*/query')@useguards(undefined",{"_index":2182,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["token')@post('/modalities/*/store')@useguards(exportguard",{"_index":2083,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["token')@post('/modalities/:id/parsed",{"_index":2190,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["token')@post('/patients/*/modify')@useguards(modifyguard",{"_index":2124,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["token')@post('/patients/:id/archive')@useguards(readallguard",{"_index":2246,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["token')@post('/peers/*/store')@useguards(exportguard",{"_index":2086,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["token')@post('/series/*/modify')@useguards(modifyguard",{"_index":2127,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["token')@post('/series/:id/archive')@useguards(undefined",{"_index":1998,"title":{},"body":{"controllers/OrthancController.html":{}}}],["token')@post('/studies/*/modify')@useguards(modifyguard",{"_index":2130,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["token')@post('/studies/:id/archive')@useguards(undefined",{"_index":1977,"title":{},"body":{"controllers/OrthancController.html":{}}}],["token')@post('/tasks/:user/export')@useguards(exportguard",{"_index":2089,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["token')@post('/tools/create",{"_index":2072,"title":{},"body":{"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{}}}],["token')@post('/tools/find')@useguards(readallguard",{"_index":2240,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["token')@post('/tools/reset')@useguards(adminguard",{"_index":1939,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@post('/tools/shutdown')@useguards(adminguard",{"_index":1942,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@put('/modalities/*')@useguards(adminguard",{"_index":1920,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@put('/peers/*/')@useguards(adminguard",{"_index":1923,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["token')@put('/studies/*/labels/*')@useguards(readallguard",{"_index":2249,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["token')@put('/tools/log",{"_index":1945,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["tokenexpiration",{"_index":3094,"title":{},"body":{"entities/User.html":{}}}],["touch",{"_index":3544,"title":{},"body":{"index.html":{}}}],["transform",{"_index":790,"title":{},"body":{"controllers/AutoroutingsController.html":{},"classes/WithLabels.html":{}}}],["transformer",{"_index":571,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"entities/Option.html":{},"classes/Router.html":{},"classes/Rule.html":{},"entities/User.html":{},"classes/WithLabels.html":{},"dependencies.html":{}}}],["transport",{"_index":1524,"title":{},"body":{"modules/MailModule.html":{}}}],["true",{"_index":90,"title":{},"body":{"injectables/AbstractQueueService.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"classes/GetUserDto.html":{},"injectables/JwtAuthGuard.html":{},"modules/MailModule.html":{},"injectables/MaskProcessingService.html":{},"controllers/OauthConfigController.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingJobDto.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"entities/Role.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"miscellaneous/variables.html":{}}}],["true})@column({default",{"_index":2797,"title":{},"body":{"entities/Role.html":{}}}],["true})@get('/jobs/:id?')@useguards(undefined",{"_index":1989,"title":{},"body":{"controllers/OrthancController.html":{}}}],["true})@get(':uuid",{"_index":2275,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["true})@isboolean",{"_index":961,"title":{},"body":{"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/WithLabels.html":{}}}],["true})@isemail",{"_index":997,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{}}}],["true})@isenum(autoroutingeventtype",{"_index":2052,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["true})@isenum(processingmask",{"_index":3008,"title":{},"body":{"classes/TmtvJobDto.html":{}}}],["true})@isnumber",{"_index":2059,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["true})@isstring",{"_index":989,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/TmtvJobDto.html":{},"classes/UpdateUserDto.html":{}}}],["true})@public()@get",{"_index":1682,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["true})@transform",{"_index":3226,"title":{},"body":{"classes/WithLabels.html":{}}}],["true})@type(undefined",{"_index":2951,"title":{},"body":{"classes/Router.html":{}}}],["true})@useguards(adminguard)@delete(':name",{"_index":1678,"title":{},"body":{"controllers/OauthConfigController.html":{}}}],["true})@useguards(undefined)@get(':uuid",{"_index":2597,"title":{},"body":{"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["try",{"_index":1371,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["twitter",{"_index":3550,"title":{},"body":{"index.html":{}}}],["type",{"_index":37,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"controllers/AutoroutingsController.html":{},"injectables/AutoroutingsService.html":{},"guards/CdBurnerGuard.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckLabelInRole.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"guards/DeleteGuard.html":{},"classes/Destination.html":{},"guards/DicomWebGuard.html":{},"guards/ExportGuard.html":{},"classes/GetOptionDto.html":{},"classes/GetRoleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpClient.html":{},"guards/ImportGuard.html":{},"injectables/InstanceGuard.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/Label.html":{},"classes/LabelDto.html":{},"controllers/LabelsController.html":{},"injectables/LabelsService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"injectables/MailService.html":{},"injectables/MaskProcessingService.html":{},"guards/ModifyGuard.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"controllers/OauthConfigController.html":{},"classes/OauthConfigDto.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"interfaces/OrGuardOptions.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"classes/OrthancEventPayloadDto.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"classes/ProcessingFile.html":{},"classes/ProcessingJobDto.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"guards/QueryGuard.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueryQueueTask.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyAnswer.html":{},"classes/QueryStudyDto.html":{},"controllers/QueuesAnonController.html":{},"classes/QueuesAnonDto.html":{},"injectables/QueuesAnonService.html":{},"classes/QueuesAnonsDto.html":{},"controllers/QueuesDeleteController.html":{},"classes/QueuesDeleteDto.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"injectables/QueuesQueryService.html":{},"classes/QueuesQueryStudyDto.html":{},"guards/ReadAllGuard.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"injectables/SeederService.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"classes/TagAnon.html":{},"classes/TmtvJobDto.html":{},"classes/TmtvService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["type'})@isenum(destinationtype",{"_index":1015,"title":{},"body":{"classes/Destination.html":{}}}],["typeof",{"_index":1312,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["typeorm",{"_index":558,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingsService.html":{},"classes/Destination.html":{},"entities/Label.html":{},"injectables/LabelsService.html":{},"injectables/NotFoundInterceptor.html":{},"entities/OauthConfig.html":{},"injectables/OauthConfigService.html":{},"entities/Option.html":{},"injectables/OptionsService.html":{},"injectables/QueryQueueTask.html":{},"entities/Role.html":{},"injectables/RolesService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["typeorm_type",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmodule",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/LabelsModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature",{"_index":2971,"title":{},"body":{"modules/SeederModule.html":{}}}],["typeormmodule.forfeature([autorouting",{"_index":807,"title":{},"body":{"modules/AutoroutingsModule.html":{}}}],["typeormmodule.forfeature([label",{"_index":1467,"title":{},"body":{"modules/LabelsModule.html":{}}}],["typeormmodule.forfeature([oauthconfig",{"_index":1710,"title":{},"body":{"modules/OauthConfigModule.html":{}}}],["typeormmodule.forfeature([option",{"_index":1816,"title":{},"body":{"modules/OptionsModule.html":{},"modules/TasksModule.html":{}}}],["typeormmodule.forfeature([role",{"_index":2910,"title":{},"body":{"modules/RolesModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":492,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forrootasync",{"_index":287,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":3322,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":3510,"title":{},"body":{"index.html":{}}}],["uid",{"_index":1045,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["uk",{"_index":949,"title":{},"body":{"classes/CreateOptionDto.html":{},"entities/Option.html":{}}}],["uk'})@column({default",{"_index":1751,"title":{},"body":{"entities/Option.html":{}}}],["uk'})@isstring",{"_index":950,"title":{},"body":{"classes/CreateOptionDto.html":{}}}],["unauthorized",{"_index":404,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["unauthorized'})@apibody({schema",{"_index":2828,"title":{},"body":{"controllers/RolesController.html":{}}}],["unauthorized'})@apibody({type",{"_index":339,"title":{},"body":{"controllers/AuthController.html":{}}}],["unauthorized'})@apioauth2(['openid",{"_index":362,"title":{},"body":{"controllers/AuthController.html":{}}}],["unauthorized'})@apiparam({name",{"_index":761,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["unauthorized'})@apiresponse({status",{"_index":1668,"title":{},"body":{"controllers/OauthConfigController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/UsersController.html":{}}}],["unauthorized'})@useguards(adminguard)@apibody({type",{"_index":2832,"title":{},"body":{"controllers/RolesController.html":{}}}],["unauthorized'})@useguards(adminguard)@delete",{"_index":2271,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["unauthorized'})@useguards(adminguard)@delete('/:labelname",{"_index":1435,"title":{},"body":{"controllers/LabelsController.html":{}}}],["unauthorized'})@useguards(adminguard)@delete('/:name",{"_index":2836,"title":{},"body":{"controllers/RolesController.html":{}}}],["unauthorized'})@useguards(adminguard)@get",{"_index":1788,"title":{},"body":{"controllers/OptionsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["unauthorized'})@useguards(adminguard)@get('/:name",{"_index":2843,"title":{},"body":{"controllers/RolesController.html":{}}}],["unauthorized'})@useguards(adminguard)@get(':labelname/roles",{"_index":1432,"title":{},"body":{"controllers/LabelsController.html":{}}}],["unauthorized'})@useguards(adminguard)@patch",{"_index":1793,"title":{},"body":{"controllers/OptionsController.html":{}}}],["unauthorized'})@useguards(adminguard)@post",{"_index":1427,"title":{},"body":{"controllers/LabelsController.html":{}}}],["unauthorized'})@useguards(adminguard)@put('/:name",{"_index":2852,"title":{},"body":{"controllers/RolesController.html":{}}}],["unauthorized'})@useguards(anonymizeguard)@delete(':uuid",{"_index":2601,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["unauthorized'})@useguards(autoroutingguard)@get",{"_index":774,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["unauthorized'})@useguards(autoroutingguard)@usepipes(new",{"_index":756,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["unauthorized'})@useguards(deleteguard)@delete(':uuid",{"_index":2687,"title":{},"body":{"controllers/QueuesDeleteController.html":{}}}],["unauthorized'})@useguards(queryguard)@delete(':uuid",{"_index":2726,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["unauthorized'})@useguards(readallguard)@post",{"_index":2268,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["unauthorized'})@useguards(undefined)@delete('/:id",{"_index":3130,"title":{},"body":{"controllers/UsersController.html":{}}}],["unauthorized'})@useguards(undefined)@delete('/:rolename/labels/:label",{"_index":2849,"title":{},"body":{"controllers/RolesController.html":{}}}],["unauthorized'})@useguards(undefined)@get",{"_index":1429,"title":{},"body":{"controllers/LabelsController.html":{}}}],["unauthorized'})@useguards(undefined)@get('/:id",{"_index":3135,"title":{},"body":{"controllers/UsersController.html":{}}}],["unauthorized'})@useguards(undefined)@get('/:rolename/labels",{"_index":2846,"title":{},"body":{"controllers/RolesController.html":{}}}],["unauthorized'})@useguards(undefined)@put('/:id",{"_index":3137,"title":{},"body":{"controllers/UsersController.html":{}}}],["unauthorizedexception",{"_index":374,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["unauthorizedexception('invalid",{"_index":419,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["unauthorizedexception('unknown",{"_index":1386,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["undefined",{"_index":54,"title":{},"body":{"injectables/AbstractQueueService.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/GetRoleDto.html":{},"classes/HttpClient.html":{},"entities/Label.html":{},"controllers/OrthancController.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryParsedAnswerDto.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"classes/QueuesQueryDto.html":{},"injectables/QueuesQueryService.html":{},"entities/Role.html":{},"controllers/RolesController.html":{},"classes/TagAnon.html":{},"injectables/UsersService.html":{}}}],["undefined})@apiresponse({status",{"_index":773,"title":{},"body":{"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["undefined})@column({name",{"_index":547,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["undefined})@isarray",{"_index":2705,"title":{},"body":{"classes/QueuesDeleteDto.html":{}}}],["undefined})@isarray()@isobject({each",{"_index":2672,"title":{},"body":{"classes/QueuesAnonsDto.html":{}}}],["undefined})@manytomany(undefined",{"_index":1413,"title":{},"body":{"entities/Label.html":{},"entities/Role.html":{}}}],["undefined})@useguards(undefined)@post('/:rolename/labels",{"_index":2829,"title":{},"body":{"controllers/RolesController.html":{}}}],["unique",{"_index":3110,"title":{},"body":{"entities/User.html":{}}}],["unit",{"_index":3523,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":193,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/HttpClient.html":{},"injectables/JwtStrategy.html":{},"controllers/OauthConfigController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancQueryController.html":{}}}],["update",{"_index":813,"title":{},"body":{"injectables/AutoroutingsService.html":{},"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(@body",{"_index":1809,"title":{},"body":{"controllers/OptionsController.html":{}}}],["update(id",{"_index":833,"title":{},"body":{"injectables/AutoroutingsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(name",{"_index":2851,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["update(option",{"_index":1825,"title":{},"body":{"injectables/OptionsService.html":{}}}],["update(options",{"_index":1790,"title":{},"body":{"controllers/OptionsController.html":{}}}],["updatelabels",{"_index":2235,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["updatelabels(request",{"_index":2248,"title":{},"body":{"controllers/OrthancReadAllController.html":{}}}],["updateloglevel",{"_index":1905,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["updateloglevel(request",{"_index":1944,"title":{},"body":{"controllers/OrthancAdminController.html":{}}}],["updateoptiondto",{"_index":1791,"title":{"classes/UpdateOptionDto.html":{}},"body":{"controllers/OptionsController.html":{},"injectables/OptionsService.html":{},"classes/UpdateOptionDto.html":{},"coverage.html":{}}}],["updateoptiondto})@apiresponse({status",{"_index":1792,"title":{},"body":{"controllers/OptionsController.html":{}}}],["updateuserdto",{"_index":3090,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["updateuserpassword",{"_index":3181,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserpassword(id",{"_index":3200,"title":{},"body":{"injectables/UsersService.html":{}}}],["uppercase",{"_index":859,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["url",{"_index":202,"title":{},"body":{"controllers/AppController.html":{},"guards/DicomWebGuard.html":{},"classes/HttpClient.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{},"miscellaneous/variables.html":{}}}],["url('http://localhost:3000",{"_index":1080,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["url.pathname",{"_index":1085,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["url.replace('/api",{"_index":3613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":1096,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["useclass",{"_index":310,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["used",{"_index":2883,"title":{},"body":{"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["usefactory",{"_index":289,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{}}}],["useguards",{"_index":377,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoroutingsController.html":{},"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["useguards(adminguard",{"_index":1448,"title":{},"body":{"controllers/LabelsController.html":{},"controllers/OauthConfigController.html":{},"controllers/OptionsController.html":{},"controllers/OrthancAdminController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["useguards(anonymizeguard",{"_index":2612,"title":{},"body":{"controllers/QueuesAnonController.html":{}}}],["useguards(autoroutingguard",{"_index":788,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["useguards(checklabelinrole",{"_index":2012,"title":{},"body":{"controllers/OrthancController.html":{}}}],["useguards(deleteguard",{"_index":2043,"title":{},"body":{"controllers/OrthancDeleteController.html":{},"controllers/QueuesDeleteController.html":{}}}],["useguards(exportguard",{"_index":2095,"title":{},"body":{"controllers/OrthancExportController.html":{}}}],["useguards(importguard",{"_index":2115,"title":{},"body":{"controllers/OrthancImportController.html":{}}}],["useguards(jwtoauthguard",{"_index":411,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard",{"_index":406,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(modifyguard",{"_index":2133,"title":{},"body":{"controllers/OrthancModifyController.html":{}}}],["useguards(orguard([adminguard",{"_index":1444,"title":{},"body":{"controllers/LabelsController.html":{},"controllers/OrthancController.html":{},"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["useguards(orguard([queryguard",{"_index":2203,"title":{},"body":{"controllers/OrthancQueryController.html":{}}}],["useguards(orguard([readallguard",{"_index":2017,"title":{},"body":{"controllers/OrthancController.html":{}}}],["useguards(queryguard",{"_index":2738,"title":{},"body":{"controllers/QueuesQueryController.html":{}}}],["useguards(readallguard",{"_index":2252,"title":{},"body":{"controllers/OrthancReadAllController.html":{},"controllers/ProcessingController.html":{}}}],["usepipes",{"_index":777,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["usepipes(new",{"_index":789,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["user",{"_index":141,"title":{"entities/User.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"modules/GuardsModule.html":{},"guards/ImportGuard.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"guards/ModifyGuard.html":{},"controllers/ProcessingController.html":{},"guards/QueryGuard.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"guards/ReadAllGuard.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SeederModule.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user's",{"_index":884,"title":{},"body":{"guards/CheckLabelInRole.html":{},"guards/DicomWebGuard.html":{},"injectables/InstanceGuard.html":{}}}],["user'})@apiresponse({status",{"_index":3124,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.dto",{"_index":3141,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.dto.ts",{"_index":995,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:11",{"_index":1002,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:12",{"_index":1171,"title":{},"body":{"classes/GetUserDto.html":{}}}],["user.dto.ts:15",{"_index":998,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:16",{"_index":1174,"title":{},"body":{"classes/GetUserDto.html":{}}}],["user.dto.ts:19",{"_index":1010,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:20",{"_index":1170,"title":{},"body":{"classes/GetUserDto.html":{}}}],["user.dto.ts:24",{"_index":1177,"title":{},"body":{"classes/GetUserDto.html":{}}}],["user.dto.ts:26",{"_index":1009,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:28",{"_index":1176,"title":{},"body":{"classes/GetUserDto.html":{}}}],["user.dto.ts:7",{"_index":1000,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:8",{"_index":1173,"title":{},"body":{"classes/GetUserDto.html":{}}}],["user.email",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["user.entity",{"_index":3140,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["user.firstname",{"_index":3148,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.id",{"_index":460,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["user.lastname",{"_index":3149,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.password",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.role",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["user.role.admin",{"_index":168,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"controllers/ProcessingController.html":{},"guards/QueryGuard.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.anonymize",{"_index":158,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.autoquery",{"_index":165,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.autorouting",{"_index":177,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.cdburner",{"_index":174,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.delete",{"_index":167,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.export",{"_index":160,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.import",{"_index":155,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.modify",{"_index":171,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.query",{"_index":162,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.role.readall",{"_index":180,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AnonymizeGuard.html":{},"guards/AutoQueryGuard.html":{},"guards/AutoRoutingGuard.html":{},"guards/CdBurnerGuard.html":{},"guards/DeleteGuard.html":{},"guards/ExportGuard.html":{},"guards/ImportGuard.html":{},"guards/ModifyGuard.html":{},"guards/QueryGuard.html":{},"guards/ReadAllGuard.html":{}}}],["user.rolename",{"_index":3150,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.token",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.tokenexpiration",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.userid",{"_index":2302,"title":{},"body":{"controllers/ProcessingController.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["user1@mail.com",{"_index":1515,"title":{},"body":{"classes/LostPassworDto.html":{}}}],["user1@mail.com'})@isnotempty",{"_index":1513,"title":{},"body":{"classes/LostPassworDto.html":{}}}],["user@gaelo.fr",{"_index":3221,"title":{},"body":{"injectables/UsersService.html":{}}}],["userdata",{"_index":414,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["userdata.email",{"_index":416,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["userdata.firstname",{"_index":424,"title":{},"body":{"controllers/AuthController.html":{}}}],["userdata.lastname",{"_index":426,"title":{},"body":{"controllers/AuthController.html":{}}}],["userdto",{"_index":3128,"title":{},"body":{"controllers/UsersController.html":{}}}],["userdto.email",{"_index":3163,"title":{},"body":{"controllers/UsersController.html":{}}}],["userdto.firstname",{"_index":3156,"title":{},"body":{"controllers/UsersController.html":{}}}],["userdto.lastname",{"_index":3157,"title":{},"body":{"controllers/UsersController.html":{}}}],["userexists",{"_index":420,"title":{},"body":{"controllers/AuthController.html":{}}}],["userid",{"_index":48,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{}}}],["userinforesponse",{"_index":1366,"title":{"interfaces/UserInfoResponse.html":{}},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{},"coverage.html":{}}}],["username",{"_index":299,"title":{},"body":{"modules/AppModule.html":{},"classes/HttpClient.html":{}}}],["usernamefield",{"_index":1502,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["userrole",{"_index":892,"title":{},"body":{"guards/CheckLabelInRole.html":{},"guards/CheckUserRoleGuard.html":{},"guards/DicomWebGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["users",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["users.controller",{"_index":3176,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":3139,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/user.entity",{"_index":476,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{}}}],["users/users.module",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["users/users.service",{"_index":391,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{}}}],["userscontroller",{"_index":3118,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":2863,"title":{},"body":{"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["usersmodule",{"_index":229,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersrepository",{"_index":3184,"title":{},"body":{"injectables/UsersService.html":{}}}],["usersservice",{"_index":390,"title":{"injectables/UsersService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["userwithpasswordupdated",{"_index":3213,"title":{},"body":{"injectables/UsersService.html":{}}}],["using",{"_index":2156,"title":{},"body":{"injectables/OrthancMonitoringTask.html":{}}}],["utility",{"_index":3621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["utils",{"_index":1948,"title":{},"body":{"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"miscellaneous/variables.html":{}}}],["utils/check",{"_index":1054,"title":{},"body":{"guards/DicomWebGuard.html":{},"injectables/InstanceGuard.html":{},"injectables/SeriesGuard.html":{},"guards/StudyGuard.html":{}}}],["utils/is",{"_index":2458,"title":{},"body":{"injectables/QueryQueueTask.html":{}}}],["utils/logger.middleware",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["utils/orthanc",{"_index":668,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"modules/AutoroutingsModule.html":{},"guards/DicomWebGuard.html":{},"modules/GuardsModule.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"modules/OrthancModule.html":{},"injectables/OrthancMonitoringTask.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"guards/StudyGuard.html":{},"modules/TasksModule.html":{},"classes/TmtvService.html":{}}}],["utils/passwords",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["utils/processing.client",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"injectables/MaskProcessingService.html":{},"classes/TmtvService.html":{}}}],["uuid",{"_index":58,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"injectables/QueuesAnonService.html":{},"controllers/QueuesDeleteController.html":{},"injectables/QueuesDeleteService.html":{},"controllers/QueuesQueryController.html":{},"injectables/QueuesQueryService.html":{}}}],["uuidofuser",{"_index":2609,"title":{},"body":{"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["uuids",{"_index":118,"title":{},"body":{"injectables/AbstractQueueService.html":{},"controllers/ProcessingController.html":{},"injectables/ProcessingQueueService.html":{},"controllers/QueuesAnonController.html":{},"controllers/QueuesDeleteController.html":{},"controllers/QueuesQueryController.html":{}}}],["uuidsofuser",{"_index":2300,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["uuidsofuser.includes(uuid",{"_index":2303,"title":{},"body":{"controllers/ProcessingController.html":{}}}],["val",{"_index":1867,"title":{},"body":{"interfaces/OrGuardOptions.html":{}}}],["validate",{"_index":359,"title":{},"body":{"controllers/AuthController.html":{},"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/IsNumberOrString.html":{},"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["validate(email",{"_index":1500,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(isnumberorstring",{"_index":582,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["validate(payload",{"_index":1398,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(text",{"_index":1308,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["validate(token",{"_index":1356,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["validateissuer",{"_index":1345,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["validateissuer(wellknown",{"_index":1358,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["validatenested",{"_index":563,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["validates",{"_index":1340,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["validateuser",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{}}}],["validation",{"_index":1335,"title":{},"body":{"injectables/JwtOAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["validationarguments",{"_index":1305,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["validationpipe",{"_index":778,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["validationpipe())@post",{"_index":757,"title":{},"body":{"controllers/AutoroutingsController.html":{}}}],["validator",{"_index":564,"title":{},"body":{"entities/Autorouting.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateOptionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Destination.html":{},"classes/GetOptionDto.html":{},"classes/GetUserDto.html":{},"classes/IsNumberOrString.html":{},"classes/LabelDto.html":{},"classes/LoginDto.html":{},"classes/LostPassworDto.html":{},"classes/OauthConfigDto.html":{},"classes/OrthancEventPayloadDto.html":{},"classes/ProcessingJobDto.html":{},"classes/QueryParsedAnswerDto.html":{},"classes/QuerySeriesDto.html":{},"classes/QueryStudyDto.html":{},"classes/QueuesAnonDto.html":{},"classes/QueuesAnonsDto.html":{},"classes/QueuesDeleteDto.html":{},"classes/QueuesQueryDto.html":{},"classes/QueuesQuerySeriesDto.html":{},"classes/QueuesQueryStudyDto.html":{},"classes/RegisterDto.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvJobDto.html":{},"classes/UpdateUserDto.html":{},"classes/WithLabels.html":{},"dependencies.html":{}}}],["validatorconstraint",{"_index":1311,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["validatorconstraintinterface",{"_index":1302,"title":{},"body":{"classes/IsNumberOrString.html":{}}}],["validators/string",{"_index":573,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["value",{"_index":57,"title":{},"body":{"injectables/AbstractQueueService.html":{},"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"guards/CheckUserIdParamsGuard.html":{},"guards/CheckUserIdQueryGuard.html":{},"guards/CheckUserRoleGuard.html":{},"classes/Destination.html":{},"classes/HttpClient.html":{},"classes/IsNumberOrString.html":{},"injectables/MaskProcessingService.html":{},"injectables/OrthancMonitoringTask.html":{},"injectables/ProcessingQueueService.html":{},"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"injectables/QueuesAnonService.html":{},"injectables/QueuesDeleteService.html":{},"classes/QueuesQueryDto.html":{},"injectables/QueuesQueryService.html":{},"classes/Router.html":{},"classes/Rule.html":{},"classes/TmtvService.html":{},"injectables/UsersService.html":{},"classes/WithLabels.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value'})@validate(isnumberorstring",{"_index":2960,"title":{},"body":{"classes/Rule.html":{}}}],["value_representation",{"_index":580,"title":{},"body":{"entities/Autorouting.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["value_representation'})@isenum(valuerepresentation",{"_index":2962,"title":{},"body":{"classes/Rule.html":{}}}],["valuerepresentation",{"_index":569,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{},"miscellaneous/enumerations.html":{}}}],["valuerepresentation.date",{"_index":683,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["valuerepresentation.number",{"_index":680,"title":{},"body":{"injectables/AutoroutingHandler.html":{}}}],["valuerepresentation.string",{"_index":579,"title":{},"body":{"entities/Autorouting.html":{},"injectables/AutoroutingHandler.html":{},"classes/Destination.html":{},"classes/Router.html":{},"classes/Rule.html":{}}}],["van",{"_index":1129,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["variable",{"_index":3252,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":3567,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verifyconfirmationtoken",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifyconfirmationtoken(token",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifytoken",{"_index":1346,"title":{},"body":{"injectables/JwtOauthStrategy.html":{}}}],["verifytoken(token",{"_index":1360,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["version",{"_index":1123,"title":{},"body":{"guards/DicomWebGuard.html":{},"properties.html":{}}}],["void",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"guards/DicomWebGuard.html":{},"classes/HttpClient.html":{},"injectables/MaskProcessingService.html":{},"controllers/OrthancAdminController.html":{},"controllers/OrthancController.html":{},"controllers/OrthancDeleteController.html":{},"controllers/OrthancExportController.html":{},"controllers/OrthancImportController.html":{},"controllers/OrthancModifyController.html":{},"controllers/OrthancQueryController.html":{},"controllers/OrthancReadAllController.html":{},"classes/QueryAnswer.html":{},"classes/QuerySeriesAnswer.html":{},"classes/QueryStudyAnswer.html":{},"classes/TmtvService.html":{}}}],["wait",{"_index":96,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["waiting",{"_index":97,"title":{},"body":{"injectables/AbstractQueueService.html":{},"injectables/ProcessingQueueService.html":{}}}],["watch",{"_index":3518,"title":{},"body":{"index.html":{}}}],["weak",{"_index":1008,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["web",{"_index":1024,"title":{},"body":{"guards/DicomWebGuard.html":{},"controllers/OrthancController.html":{}}}],["web.guard",{"_index":1189,"title":{},"body":{"modules/GuardsModule.html":{},"controllers/OrthancController.html":{}}}],["web.guard.ts",{"_index":1020,"title":{},"body":{"guards/DicomWebGuard.html":{},"coverage.html":{}}}],["web.guard.ts:12",{"_index":1036,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["web.guard.ts:124",{"_index":1051,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["web.guard.ts:19",{"_index":1047,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["web.guard.ts:37",{"_index":1038,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["web.guard.ts:44",{"_index":1040,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["web.guard.ts:53",{"_index":1039,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["web.guard.ts:61",{"_index":1042,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["web.guard.ts:77",{"_index":1037,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["web/*')@useguards(undefined",{"_index":1981,"title":{},"body":{"controllers/OrthancController.html":{}}}],["website",{"_index":3548,"title":{},"body":{"index.html":{}}}],["well",{"_index":1373,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["wellknown",{"_index":1352,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["wellknown.data",{"_index":1376,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["wellknown['authorization_endpoint",{"_index":1378,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["wellknown['userinfo_endpoint",{"_index":1380,"title":{},"body":{"injectables/JwtOauthStrategy.html":{},"interfaces/UserInfoResponse.html":{}}}],["wildcard",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["withfragmentedmask",{"_index":721,"title":{},"body":{"injectables/AutoroutingHandler.html":{},"classes/ProcessingJobDto.html":{},"classes/TmtvJobDto.html":{}}}],["within",{"_index":1121,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["withlabels",{"_index":2839,"title":{"classes/WithLabels.html":{}},"body":{"controllers/RolesController.html":{},"classes/WithLabels.html":{},"coverage.html":{}}}],["withlabels.withlabels",{"_index":2865,"title":{},"body":{"controllers/RolesController.html":{}}}],["withrole",{"_index":3189,"title":{},"body":{"injectables/UsersService.html":{}}}],["writefilesync('../openapi.json",{"_index":3587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":3490,"title":{},"body":{"miscellaneous/functions.html":{}}}],["you'd",{"_index":3539,"title":{},"body":{"index.html":{}}}],["yyyymmddthhmmss",{"_index":2054,"title":{},"body":{"classes/OrthancEventPayloadDto.html":{}}}],["z\\d\\w]{12",{"_index":855,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["z])(?=.*?[0",{"_index":1005,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z])(?=.*?[a",{"_index":1004,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z])(?=.*[a",{"_index":852,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["z])(?=.*\\d)(?=.*[\\w])[a",{"_index":853,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["za",{"_index":854,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["zonneveld",{"_index":1130,"title":{},"body":{"guards/DicomWebGuard.html":{}}}],["zoom",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoroutingsModule.html":{},"modules/GuardsModule.html":{},"modules/LabelsModule.html":{},"modules/OauthConfigModule.html":{},"modules/OptionsModule.html":{},"modules/OrthancModule.html":{},"modules/ProcessingModule.html":{},"modules/QueueModule.html":{},"modules/RolesModule.html":{},"modules/SeederModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AbstractQueueService.html":{"url":"injectables/AbstractQueueService.html","title":"injectable - AbstractQueueService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AbstractQueueService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/queue.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class for queue services, will be inherited by the specific queue services (Anon, Query, Delete).\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                queue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addJob\n                            \n                            \n                                    Async\n                                checkIfUserIdHasJobs\n                            \n                            \n                                    Async\n                                closeQueueConnection\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                    Async\n                                getAllUuids\n                            \n                            \n                                    Async\n                                getJobs\n                            \n                            \n                                    Async\n                                getJobsForUuid\n                            \n                            \n                                    Async\n                                getUuidOfUser\n                            \n                            \n                                    Async\n                                removeJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(queue: Queue)\n                    \n                \n                        \n                            \n                                Defined in src/queues/queue.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        queue\n                                                  \n                                                        \n                                                                    Queue\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    addJob(data: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/queue.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkIfUserIdHasJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkIfUserIdHasJobs(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/queue.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        closeQueueConnection\n                        \n                    \n                \n            \n            \n                \n                        \n                    closeQueueConnection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/queue.service.ts:99\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                        \n                    flush()\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/queue.service.ts:103\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllUuids\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllUuids()\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/queue.service.ts:92\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(uuid: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/queue.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getJobsForUuid\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobsForUuid(uuid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/queue.service.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUuidOfUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUuidOfUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/queue.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeJob(data: object | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/queue.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        object | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        queue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Queue\n\n                    \n                \n                    \n                        \n                                Defined in src/queues/queue.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Job, Queue } from 'bullmq';\n/**\n * Abstract class for queue services, will be inherited by the specific queue services (Anon, Query, Delete).\n */\n@Injectable()\nexport abstract class AbstractQueueService {\n  queue: Queue;\n\n  constructor(queue: Queue) {\n    this.queue = queue;\n  }\n\n  async addJob(data: object): Promise {\n    await this.queue.add(data['uuid'], data, {\n      removeOnComplete: {\n        age: 3600,\n      },\n      removeOnFail: {\n        age: 24 * 3600,\n      },\n    });\n  }\n\n  async removeJob(data: object | undefined = undefined): Promise {\n    const jobs: Job[] = await this.queue.getJobs();\n\n    jobs.forEach((job) => {\n      if (\n        data == undefined ||\n        ((job.data.uuid == data['uuid'] || data['uuid'] == undefined) &&\n          (job.data.userId == data['userId'] || data['userId'] == undefined) &&\n          (job.data.jobId == data['jobId'] || data['jobId'] == undefined))\n      ) {\n        this.queue.remove(job.id, { removeChildren: true });\n      }\n    });\n  }\n\n  async getJobs(\n    uuid: string | undefined = undefined,\n  ): Promise[]> {\n    const states = [\n      'completed',\n      'failed',\n      'delayed',\n      'active',\n      'wait',\n      'waiting-children',\n      'prioritized',\n      'paused',\n      'repeat',\n    ];\n    let jobs = [];\n\n    for (const state of states) {\n      const stateJobs = await this.queue.getJobs(state as any);\n      stateJobs.forEach((job) => {\n        job.data.state = state;\n        jobs.push(job);\n      });\n    }\n\n    jobs = await Promise.all(\n      jobs.map(async (job) => {\n        return job;\n      }),\n    );\n\n    const filteredJob = jobs.filter((job) => {\n      return job.data.uuid == uuid || uuid == undefined;\n    });\n\n    return filteredJob;\n  }\n\n  async checkIfUserIdHasJobs(userId: number): Promise {\n    const jobs: Job[] = await this.queue.getJobs();\n    const result: Job | null = jobs.find((job) => job.data.userId == userId);\n\n    return result ? true : false;\n  }\n\n  async getUuidOfUser(userId: number): Promise {\n    const jobs: Job[] | null = await this.queue.getJobs();\n    const uuid: string | null = jobs.find((job) => job.data.userId == userId)\n      ?.data.uuid;\n\n    return uuid ? uuid : null;\n  }\n\n  async getAllUuids(): Promise {\n    const jobs: Job[] = await this.queue.getJobs();\n    const uuids = jobs.map((job) => job.data.uuid);\n\n    return Array.from(new Set(uuids));\n  }\n\n  async closeQueueConnection(): Promise {\n    await this.queue.close();\n  }\n\n  async flush(): Promise {\n    await this.queue.obliterate({ force: true });\n  }\n\n  async getJobsForUuid(uuid: string = undefined): Promise {\n    const jobs: Job[] | null = await this.getJobs(uuid);\n\n    const results = {};\n    jobs\n      .filter((job) => job.data.uuid == uuid || uuid == undefined)\n      .forEach((job) => {\n        const id = job.id;\n        const progress = {\n          Progress: job.progress,\n          State: job.data.state,\n          Id: job.id,\n          Results: job.data.results,\n          UserId: job.data.userId,\n        };\n        results[id] = progress;\n      });\n\n    return results;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard cheking user has admin permission\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n/**\n * Guard cheking user has import permission\n */\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n/**\n * Guard cheking user has anonymize permission\n */\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n/**\n * Guard cheking user has export permission\n */\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n/**\n * Guard cheking user has query permission\n */\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n/**\n * Guard cheking user has autoquery permission\n */\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n/**\n * Guard cheking user has delete permission\n */\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n/**\n * Guard cheking user has admin permission\n */\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n/**\n * Guard cheking user has modify permission\n */\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n/**\n * Guard cheking user has cdBurner permission\n */\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n/**\n * Guard cheking user has autorouting permission\n */\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n/**\n * Guard cheking user has readall permission\n */\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AnonymizeGuard.html":{"url":"guards/AnonymizeGuard.html","title":"guard - AnonymizeGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AnonymizeGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard cheking user has anonymize permission\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n/**\n * Guard cheking user has import permission\n */\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n/**\n * Guard cheking user has anonymize permission\n */\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n/**\n * Guard cheking user has export permission\n */\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n/**\n * Guard cheking user has query permission\n */\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n/**\n * Guard cheking user has autoquery permission\n */\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n/**\n * Guard cheking user has delete permission\n */\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n/**\n * Guard cheking user has admin permission\n */\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n/**\n * Guard cheking user has modify permission\n */\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n/**\n * Guard cheking user has cdBurner permission\n */\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n/**\n * Guard cheking user has autorouting permission\n */\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n/**\n * Guard cheking user has readall permission\n */\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                oauth2Redirect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        oauth2Redirect\n                        \n                    \n                \n            \n            \n                \n                        \n                    oauth2Redirect()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get('oauth2-redirect.html')@Redirect('/docs/oauth2-redirect.html', 302)@ApiExcludeEndpoint()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Redirect } from '@nestjs/common';\nimport { Public } from './interceptors/public';\nimport { ApiExcludeEndpoint } from '@nestjs/swagger';\n\n@Controller()\nexport class AppController {\n  constructor() {}\n\n  @Public()\n  @Get('oauth2-redirect.html')\n  @Redirect('/docs/oauth2-redirect.html', 302)\n  @ApiExcludeEndpoint()\n  async oauth2Redirect() {\n    return { url: '/docs/oauth2-redirect.html' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAutoroutingsModule\n\nAutoroutingsModule\n\nAppModule -->\n\nAutoroutingsModule->AppModule\n\n\n\n\n\nGuardsModule\n\nGuardsModule\n\nAppModule -->\n\nGuardsModule->AppModule\n\n\n\n\n\nLabelsModule\n\nLabelsModule\n\nAppModule -->\n\nLabelsModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nOauthConfigModule\n\nOauthConfigModule\n\nAppModule -->\n\nOauthConfigModule->AppModule\n\n\n\n\n\nOptionsModule\n\nOptionsModule\n\nAppModule -->\n\nOptionsModule->AppModule\n\n\n\n\n\nOrthancModule\n\nOrthancModule\n\nAppModule -->\n\nOrthancModule->AppModule\n\n\n\n\n\nProcessingModule\n\nProcessingModule\n\nAppModule -->\n\nProcessingModule->AppModule\n\n\n\n\n\nQueueModule\n\nQueueModule\n\nAppModule -->\n\nQueueModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nSeederModule\n\nSeederModule\n\nAppModule -->\n\nSeederModule->AppModule\n\n\n\n\n\nTasksModule\n\nTasksModule\n\nAppModule -->\n\nTasksModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nProcessingClient\n\nProcessingClient\n\nAppModule -->\n\nProcessingClient->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProcessingClient\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            AutoroutingsModule\n                        \n                        \n                            GuardsModule\n                        \n                        \n                            LabelsModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            OauthConfigModule\n                        \n                        \n                            OptionsModule\n                        \n                        \n                            OrthancModule\n                        \n                        \n                            ProcessingModule\n                        \n                        \n                            QueueModule\n                        \n                        \n                            RolesModule\n                        \n                        \n                            SeederModule\n                        \n                        \n                            TasksModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.module.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                consumer\n                                            \n                                                        MiddlewareConsumer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  MiddlewareConsumer,\n  Module,\n  NestModule,\n  RequestMethod,\n} from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { logger } from './utils/logger.middleware';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\nimport { NotFoundInterceptor } from './interceptors/not-found.interceptor';\n\nimport ProcessingClient from './utils/processing.client';\n\n// MODULES\nimport { AuthModule } from './auth/auth.module';\nimport { TasksModule } from './tasks/tasks.module';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { MailModule } from './mail/mail.module';\nimport { OauthConfigModule } from './oauth-configs/oauth-configs.module';\nimport { EventEmitterModule } from '@nestjs/event-emitter';\nimport { AutoroutingsModule } from './autorouting/autoroutings.module';\nimport { UsersModule } from './users/users.module';\nimport { RolesModule } from './roles/roles.module';\nimport { LabelsModule } from './labels/labels.module';\nimport { OptionsModule } from './options/options.module';\nimport { OrthancModule } from './orthanc/orthanc.module';\nimport { ProcessingModule } from './processing/processing.module';\nimport { QueueModule } from './queues/queue.module';\n\n// CONTROLLERS\nimport { AppController } from './app.controller';\n\nimport { SeederModule } from './seeder/seeder.module';\nimport { GuardsModule } from './guards/guards.module';\n\n@Module({\n  imports: [\n    EventEmitterModule.forRoot({\n      wildcard: true,\n    }),\n    ScheduleModule.forRoot(),\n    ConfigModule.forRoot({\n      envFilePath: ['.env.dev', '.env'],\n      isGlobal: true,\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => ({\n        type: configService.get(\n          'TYPEORM_TYPE',\n          'postgres',\n        ) as 'postgres', // Default to 'postgres'\n        host: configService.get('TYPEORM_HOST', 'localhost'),\n        port: +configService.get('TYPEORM_PORT', 5432),\n        username: configService.get('TYPEORM_USERNAME', 'postgres'),\n        password: configService.get('TYPEORM_PASSWORD', 'postgres'),\n        database: configService.get('TYPEORM_DATABASE', 'gaelo-flow'),\n        synchronize: true,\n        autoLoadEntities: true,\n      }),\n    }),\n    AuthModule,\n    UsersModule,\n    RolesModule,\n    LabelsModule,\n    OptionsModule,\n    TasksModule,\n    OauthConfigModule,\n    ProcessingModule,\n    AutoroutingsModule,\n    QueueModule,\n    OrthancModule,\n    MailModule,\n    SeederModule,\n    GuardsModule,\n  ],\n  controllers: [AppController],\n  providers: [\n    ProcessingClient,\n    {\n      provide: APP_INTERCEPTOR,\n      useClass: NotFoundInterceptor,\n    },\n  ],\n})\nexport class AppModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(logger).forRoutes({ path: '*', method: RequestMethod.ALL });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n\n\n            \n                Description\n            \n            \n                Controller for all authentication related APIs\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                changePassword\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                lostPassword\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                oauth2Login\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        changePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    changePassword(changePasswordDto: ChangePasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 201, description: 'Password changed'})@ApiResponse({status: 400, description: 'Bad request'})@ApiBody({type: ChangePasswordDto})@Public()@Post('change-password')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changePasswordDto\n                                            \n                                                            ChangePasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, description: 'Login success'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiBody({type: LoginDto})@Public()@HttpCode(HttpStatus.OK)@UseGuards(LocalAuthGuard)@Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:54\n                        \n                    \n\n\n            \n                \n                        login controller\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        lostPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    lostPassword(body: LostPassworDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.OK)@ApiResponse({status: 200, description: 'Email sent'})@ApiResponse({status: 400, description: 'Bad request'})@ApiBody({type: LostPassworDto})@Public()@Post('lost-password')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:150\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            LostPassworDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        oauth2Login\n                        \n                    \n                \n            \n            \n                \n                        \n                    oauth2Login(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({description: 'Send a oauth2 JWT token as bearer in the headers, the controller will validate / deny it'})@ApiResponse({status: 200, description: 'Login success'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiOAuth2(['openid'], 'oauth2')@Public()@UseGuards(JwtOAuthGuard)@HttpCode(HttpStatus.OK)@Post('oauth2')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:72\n                        \n                    \n\n\n            \n                \n                        OAuth2 login controller\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(registerDto: RegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 201, description: 'Register success'})@ApiResponse({status: 409, description: 'Conflict'})@ApiBody({type: RegisterDto})@Public()@Post('register')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerDto\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Post,\n  HttpCode,\n  HttpStatus,\n  UnauthorizedException,\n  BadRequestException,\n  ConflictException,\n  Request,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiBody,\n  ApiOAuth2,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\n\nimport { LocalAuthGuard } from '../guards/local.guard';\nimport { JwtOAuthGuard } from '../guards/jwt-oauth.guard';\nimport { AuthService } from './auth.service';\nimport { UsersService } from '../users/users.service';\nimport { Public } from '../interceptors/public';\nimport { LoginDto } from './dto/login.dto';\nimport { ChangePasswordDto } from './dto/change-password.dto';\nimport { MailService } from '../mail/mail.service';\nimport { RegisterDto } from './dto/register.dto';\nimport { LostPassworDto } from './dto/lost-password.dto';\n\n/**\n * Controller for all authentication related APIs\n */\n@ApiTags('auth')\n@Controller('')\nexport class AuthController {\n  constructor(\n    private authService: AuthService,\n    private usersService: UsersService,\n    private mailService: MailService,\n  ) {}\n\n  /**\n   * login controller\n   */\n  @ApiResponse({ status: 200, description: 'Login success' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiBody({ type: LoginDto })\n  @Public()\n  @HttpCode(HttpStatus.OK)\n  @UseGuards(LocalAuthGuard)\n  @Post('login')\n  async login(@Request() req: Request) {\n    return await this.authService.login(req['user']);\n  }\n\n  /**\n   * OAuth2 login controller\n   */\n  @ApiOperation({\n    description:\n      'Send a oauth2 JWT token as bearer in the headers, the controller will validate / deny it',\n  })\n  @ApiResponse({ status: 200, description: 'Login success' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiOAuth2(['openid'], 'oauth2')\n  @Public()\n  @UseGuards(JwtOAuthGuard)\n  @HttpCode(HttpStatus.OK)\n  @Post('oauth2')\n  async oauth2Login(@Request() req: Request) {\n    const userData = req['user'];\n\n    if (!userData || !userData.email) {\n      throw new UnauthorizedException('Invalid token');\n    }\n\n    const userExists = await this.usersService.findOneByEmail(userData.email);\n    if (!userExists) {\n      await this.usersService.create({\n        Email: userData.email,\n        Firstname: userData.firstname,\n        Lastname: userData.lastname,\n        RoleName: 'User',\n        Password: null,\n      });\n    }\n\n    const user = await this.usersService.findOneByEmail(userData.email);\n    return await this.authService.login(user);\n  }\n\n  @ApiResponse({ status: 201, description: 'Register success' })\n  @ApiResponse({ status: 409, description: 'Conflict' })\n  @ApiBody({ type: RegisterDto })\n  @Public()\n  @Post('register')\n  async register(@Body() registerDto: RegisterDto) {\n    const userExists = await this.usersService.findOneByEmail(\n      registerDto.Email,\n      false,\n    );\n    if (userExists) {\n      throw new ConflictException('A user already exist with this email');\n    }\n\n    const newUser = await this.usersService.create({\n      Email: registerDto.Email,\n      Firstname: registerDto.Firstname,\n      Lastname: registerDto.Lastname,\n      RoleName: 'User',\n      Password: null,\n    });\n    const confirmationToken =\n      await this.authService.createConfirmationToken(newUser);\n\n    await this.mailService.sendChangePasswordEmail(\n      newUser.Email,\n      confirmationToken,\n      newUser.Id,\n    );\n  }\n\n  @ApiResponse({ status: 201, description: 'Password changed' })\n  @ApiResponse({ status: 400, description: 'Bad request' })\n  @ApiBody({ type: ChangePasswordDto })\n  @Public()\n  @Post('change-password')\n  async changePassword(\n    @Body() changePasswordDto: ChangePasswordDto,\n  ): Promise {\n    const { Token, NewPassword, ConfirmationPassword, UserId } =\n      changePasswordDto;\n\n    if (NewPassword !== ConfirmationPassword) {\n      throw new BadRequestException('Confirmation password does not match');\n    }\n    await this.usersService.findOne(UserId);\n    await this.authService.verifyConfirmationToken(Token, UserId);\n    await this.usersService.updateUserPassword(UserId, NewPassword);\n  }\n\n  @HttpCode(HttpStatus.OK)\n  @ApiResponse({ status: 200, description: 'Email sent' })\n  @ApiResponse({ status: 400, description: 'Bad request' })\n  @ApiBody({ type: LostPassworDto })\n  @Public()\n  @Post('lost-password')\n  async lostPassword(@Body() body: LostPassworDto) {\n    const { Email } = body;\n    const user = await this.usersService.findOneByEmail(Email, false);\n    const token = await this.authService.createConfirmationToken(user);\n    await this.mailService.sendChangePasswordEmail(user.Email, token, user.Id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtOauthStrategy\n\nJwtOauthStrategy\n\nAuthModule -->\n\nJwtOauthStrategy->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nMailService\n\nMailService\n\nAuthModule -->\n\nMailService->AuthModule\n\n\n\n\n\nOauthConfigService\n\nOauthConfigService\n\nAuthModule -->\n\nOauthConfigService->AuthModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAuthModule -->\n\nUsersService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtOauthStrategy\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                        \n                            MailService\n                        \n                        \n                            OauthConfigService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { APP_GUARD } from '@nestjs/core';\nimport { Module } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { HttpModule } from '@nestjs/axios';\n\nimport { UsersModule } from '../users/users.module';\nimport { AuthService } from './auth.service';\nimport { UsersService } from '../users/users.service';\nimport { MailService } from '../mail/mail.service';\n\nimport { AuthController } from './auth.controller';\nimport { User } from '../users/user.entity';\n\nimport { LocalStrategy } from './local.strategy';\nimport { JwtStrategy } from './jwt.strategy';\nimport { JwtAuthGuard } from '../guards/jwt.guard';\nimport { OauthConfig } from '../oauth-configs/oauth-config.entity';\nimport { JwtOauthStrategy } from './jwt-oauth.strategy';\nimport { OauthConfigService } from '../oauth-configs/oauth-configs.service';\n\n@Module({\n  imports: [\n    UsersModule,\n    HttpModule,\n    JwtModule.registerAsync({\n      inject: [ConfigService],\n      useFactory: (config: ConfigService): any => ({\n        secret: config.get('JWT_SECRET'),\n        signOptions: { expiresIn: '6h' },\n      }),\n    }),\n    TypeOrmModule.forFeature([User, OauthConfig]),\n  ],\n  providers: [\n    LocalStrategy,\n    JwtStrategy,\n    JwtOauthStrategy,\n    AuthService,\n    UsersService,\n    {\n      provide: APP_GUARD,\n      useClass: JwtAuthGuard,\n    },\n    MailService,\n    OauthConfigService,\n  ],\n  controllers: [AuthController],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Database access for users\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createConfirmationToken\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                            \n                                    Async\n                                verifyConfirmationToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createConfirmationToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    createConfirmationToken(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(email: string, pass: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pass\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        verifyConfirmationToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyConfirmationToken(token: string, userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { User } from '../users/user.entity';\nimport { UsersService } from '../users/users.service';\nimport {\n  comparePasswords,\n  generateToken,\n  getTokenExpiration,\n} from '../utils/passwords';\n\n/**\n * Database access for users\n */\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UsersService,\n    private jwtService: JwtService,\n  ) {}\n\n  async validateUser(email: string, pass: string): Promise {\n    const user = await this.usersService.findOneByEmail(email);\n    if (user && (await comparePasswords(pass, user.Password))) {\n      delete user.Password;\n      return user;\n    }\n    return null;\n  }\n\n  async login(user: User) {\n    const payload = {\n      sub: user.Id,\n      email: user.Email,\n      role: user.Role,\n      userId: user.Id,\n    };\n    return {\n      AccessToken: await this.jwtService.signAsync(payload),\n      UserId: user.Id,\n    };\n  }\n\n  async createConfirmationToken(user: User): Promise {\n    const { hash, token: confirmationToken } = await generateToken();\n    user.Token = hash;\n    user.TokenExpiration = getTokenExpiration();\n    user.Password = null;\n    await this.usersService.update(user.Id, user);\n    return confirmationToken;\n  }\n\n  async verifyConfirmationToken(\n    token: string,\n    userId: number,\n  ): Promise {\n    const user = await this.usersService.findOne(userId);\n\n    if (new Date() > user.TokenExpiration) {\n      throw new BadRequestException('Token expired');\n    }\n    const isMatch = await comparePasswords(token, user.Token);\n    if (!isMatch) {\n      throw new BadRequestException('Invalid token');\n    }\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AutoQueryGuard.html":{"url":"guards/AutoQueryGuard.html","title":"guard - AutoQueryGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AutoQueryGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard cheking user has autoquery permission\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n/**\n * Guard cheking user has import permission\n */\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n/**\n * Guard cheking user has anonymize permission\n */\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n/**\n * Guard cheking user has export permission\n */\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n/**\n * Guard cheking user has query permission\n */\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n/**\n * Guard cheking user has autoquery permission\n */\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n/**\n * Guard cheking user has delete permission\n */\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n/**\n * Guard cheking user has admin permission\n */\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n/**\n * Guard cheking user has modify permission\n */\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n/**\n * Guard cheking user has cdBurner permission\n */\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n/**\n * Guard cheking user has autorouting permission\n */\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n/**\n * Guard cheking user has readall permission\n */\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AutoRoutingGuard.html":{"url":"guards/AutoRoutingGuard.html","title":"guard - AutoRoutingGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AutoRoutingGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard cheking user has autorouting permission\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n/**\n * Guard cheking user has import permission\n */\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n/**\n * Guard cheking user has anonymize permission\n */\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n/**\n * Guard cheking user has export permission\n */\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n/**\n * Guard cheking user has query permission\n */\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n/**\n * Guard cheking user has autoquery permission\n */\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n/**\n * Guard cheking user has delete permission\n */\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n/**\n * Guard cheking user has admin permission\n */\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n/**\n * Guard cheking user has modify permission\n */\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n/**\n * Guard cheking user has cdBurner permission\n */\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n/**\n * Guard cheking user has autorouting permission\n */\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n/**\n * Guard cheking user has readall permission\n */\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Autorouting.html":{"url":"entities/Autorouting.html","title":"entity - Autorouting","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Autorouting\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/autorouting/autorouting.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                Activated\n                            \n                            \n                                    \n                                    \n                                    \n                                EventType\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                Id\n                            \n                            \n                                    \n                                    \n                                    \n                                Name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                Router\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Activated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column({name: 'activated'})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:109\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        EventType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AutoroutingEventType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Column({name: 'event_type'})@IsEnum(AutoroutingEventType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        Id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@PrimaryGeneratedColumn({name: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column({name: 'name'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        Router\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Router\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column({name: 'router', type: 'jsonb'})@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:115\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsBoolean,\n  IsEnum,\n  IsString,\n  Validate,\n  ValidateNested,\n} from 'class-validator';\nimport {\n  AutoroutingEventType,\n  Condition,\n  DestinationType,\n  DicomTag,\n  RuleCondition,\n  ValueRepresentation,\n} from './autorouting.enum';\nimport { Type } from 'class-transformer';\nimport { IsNumberOrString } from '../validators/string-or-number';\n\nexport class Rule {\n  @ApiProperty({ example: DicomTag.PATIENT_NAME })\n  @Column({ name: 'dicom_tag' })\n  @IsEnum(DicomTag)\n  DicomTag: DicomTag;\n\n  @ApiProperty({ example: ValueRepresentation.STRING })\n  @Column({ name: 'value_representation' })\n  @IsEnum(ValueRepresentation)\n  ValueRepresentation: ValueRepresentation;\n\n  @ApiProperty()\n  @Column({ name: 'value' })\n  @Validate(IsNumberOrString)\n  Value: string | number;\n\n  @ApiProperty({ example: Condition.EQUALS })\n  @Column({ name: 'condition' })\n  @IsEnum(Condition)\n  Condition: Condition;\n}\n\nexport class Destination {\n  @ApiProperty({ example: DestinationType.AET })\n  @Column({ name: 'type' })\n  @IsEnum(DestinationType)\n  Destination: DestinationType;\n\n  @ApiProperty()\n  @Column({ name: 'name' })\n  @IsString()\n  Name: string;\n}\n\nexport class Router {\n  @ApiProperty({ example: RuleCondition.AND })\n  @Column({ name: 'rule_condition' })\n  @IsEnum(RuleCondition)\n  RuleCondition: RuleCondition;\n\n  @ApiProperty({\n    example: [\n      {\n        DicomTag: DicomTag.PATIENT_NAME,\n        ValueRepresentation: ValueRepresentation.STRING,\n        Value: 'value',\n        Condition: Condition.EQUALS,\n      },\n    ],\n  })\n  @Column({ name: 'rules', type: 'jsonb' })\n  @ValidateNested({ each: true })\n  @Type(() => Rule)\n  Rules: Rule[];\n\n  @ApiProperty({\n    example: [\n      {\n        Destination: DestinationType.AET,\n        Name: 'value',\n      },\n    ],\n  })\n  @Column({ name: 'destinations', type: 'jsonb' })\n  @ValidateNested({ each: true })\n  @Type(() => Destination)\n  Destinations: Destination[];\n}\n\n@Entity()\nexport class Autorouting {\n  @ApiProperty()\n  @PrimaryGeneratedColumn({ name: 'id' })\n  Id?: number;\n\n  @ApiProperty()\n  @Column({ name: 'name' })\n  @IsString()\n  Name: string;\n\n  @ApiProperty({ example: AutoroutingEventType.NEW_INSTANCE })\n  @Column({ name: 'event_type' })\n  @IsEnum(AutoroutingEventType)\n  EventType: AutoroutingEventType;\n\n  @ApiProperty()\n  @Column({ name: 'activated' })\n  @IsBoolean()\n  Activated: boolean;\n\n  @ApiProperty()\n  @Column({ name: 'router', type: 'jsonb' })\n  @ValidateNested()\n  @Type(() => Router)\n  Router: Router;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AutoroutingHandler.html":{"url":"injectables/AutoroutingHandler.html","title":"injectable - AutoroutingHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AutoroutingHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/autorouting/autorouting.handler.ts\n        \n\n\n            \n                Description\n            \n            \n                Handler service to execute autorouting rules\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                autoroutingConfigs\n                            \n                            \n                                levelMapping\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                handleAutoroutingUpdated\n                            \n                            \n                                    \n                                    Async\n                                handleEvent\n                            \n                            \n                                    Private\n                                isEqual\n                            \n                            \n                                    Private\n                                isGreaterThan\n                            \n                            \n                                    Private\n                                isIn\n                            \n                            \n                                    Private\n                                isLessThan\n                            \n                            \n                                    Private\n                                isNotIn\n                            \n                            \n                                    Private\n                                isSendable\n                            \n                            \n                                    Async\n                                processEvent\n                            \n                            \n                                    Private\n                                ruleToBoolean\n                            \n                            \n                                    Private\n                                    Async\n                                sendToDestination\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(autoroutingService: AutoroutingsService, processingQueueService: ProcessingQueueService, orthancClient: OrthancClient)\n                    \n                \n                        \n                            \n                                Defined in src/autorouting/autorouting.handler.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        autoroutingService\n                                                  \n                                                        \n                                                                        AutoroutingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        processingQueueService\n                                                  \n                                                        \n                                                                        ProcessingQueueService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        orthancClient\n                                                  \n                                                        \n                                                                        OrthancClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        handleAutoroutingUpdated\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleAutoroutingUpdated()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnEvent('autorouting.updated')\n                \n            \n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        handleEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleEvent(payload: OrthancEventPayloadDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnEvent('orthanc.*')\n                \n            \n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:212\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            OrthancEventPayloadDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isEqual\n                        \n                    \n                \n            \n            \n                \n                        \n                    isEqual(value: string | number, rule: Rule)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                rule\n                                            \n                                                            Rule\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isGreaterThan\n                        \n                    \n                \n            \n            \n                \n                        \n                    isGreaterThan(value: string | number, rule: Rule)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                rule\n                                            \n                                                            Rule\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    isIn(value: string | number, rule: Rule)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                rule\n                                            \n                                                            Rule\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isLessThan\n                        \n                    \n                \n            \n            \n                \n                        \n                    isLessThan(value: string | number, rule: Rule)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                rule\n                                            \n                                                            Rule\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isNotIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    isNotIn(value: string | number, rule: Rule)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                rule\n                                            \n                                                            Rule\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isSendable\n                        \n                    \n                \n            \n            \n                \n                        \n                    isSendable(router: Router, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                router\n                                            \n                                                            Router\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        processEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    processEvent(autorouting: Autorouting, payload: OrthancEventPayloadDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:196\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                autorouting\n                                            \n                                                            Autorouting\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            OrthancEventPayloadDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ruleToBoolean\n                        \n                    \n                \n            \n            \n                \n                        \n                    ruleToBoolean(rule: Rule, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                rule\n                                            \n                                                            Rule\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        sendToDestination\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendToDestination(destination: Destination, level: LevelType, orthancID: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autorouting.handler.ts:133\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                destination\n                                            \n                                                            Destination\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                level\n                                            \n                                                            LevelType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                orthancID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        autoroutingConfigs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.handler.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        levelMapping\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    [AutoroutingEventType.NEW_INSTANCE]: LevelType.INSTANCES,\n    [AutoroutingEventType.NEW_SERIES]: LevelType.SERIES,\n    [AutoroutingEventType.NEW_STUDY]: LevelType.STUDIES,\n    [AutoroutingEventType.NEW_PATIENT]: LevelType.PATIENTS,\n    [AutoroutingEventType.STABLE_SERIES]: LevelType.SERIES,\n    [AutoroutingEventType.STABLE_STUDY]: LevelType.STUDIES,\n    [AutoroutingEventType.STABLE_PATIENT]: LevelType.PATIENTS,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.handler.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { OnEvent } from '@nestjs/event-emitter';\nimport { Injectable } from '@nestjs/common';\nimport { OrthancEventPayloadDto } from './dto/orthanc-event-payload.dto';\nimport { AutoroutingsService } from './autoroutings.service';\nimport { Autorouting, Destination, Router, Rule } from './autorouting.entity';\nimport {\n  AutoroutingEventType,\n  Condition,\n  DestinationType,\n  LevelType,\n  RuleCondition,\n  ValueRepresentation,\n} from './autorouting.enum';\nimport OrthancClient from '../utils/orthanc-client';\nimport * as moment from 'moment';\nimport { ProcessingQueueService } from '../processing/processing-queue.service';\nimport { ProcessingJobType, ProcessingMask } from '../constants/enums';\n\n/**\n * Handler service to execute autorouting rules\n */\n@Injectable()\nexport class AutoroutingHandler {\n  autoroutingConfigs: Array = [];\n\n  levelMapping = {\n    [AutoroutingEventType.NEW_INSTANCE]: LevelType.INSTANCES,\n    [AutoroutingEventType.NEW_SERIES]: LevelType.SERIES,\n    [AutoroutingEventType.NEW_STUDY]: LevelType.STUDIES,\n    [AutoroutingEventType.NEW_PATIENT]: LevelType.PATIENTS,\n    [AutoroutingEventType.STABLE_SERIES]: LevelType.SERIES,\n    [AutoroutingEventType.STABLE_STUDY]: LevelType.STUDIES,\n    [AutoroutingEventType.STABLE_PATIENT]: LevelType.PATIENTS,\n  };\n\n  constructor(\n    private autoroutingService: AutoroutingsService,\n    private processingQueueService: ProcessingQueueService,\n    private orthancClient: OrthancClient,\n  ) {\n    this.handleAutoroutingUpdated();\n  }\n\n  @OnEvent('autorouting.updated')\n  async handleAutoroutingUpdated() {\n    this.autoroutingConfigs = await this.autoroutingService.findAll();\n  }\n\n  private isEqual(value: string | number, rule: Rule): boolean {\n    if (rule.ValueRepresentation === ValueRepresentation.NUMBER) {\n      return value === Number(rule.Value);\n    } else if (rule.ValueRepresentation === ValueRepresentation.STRING) {\n      return value === rule.Value.toString();\n    } else if (rule.ValueRepresentation === ValueRepresentation.DATE) {\n      return moment(value.toString()).isSame(moment(rule.Value.toString()));\n    }\n    return false;\n  }\n\n  private isIn(value: string | number, rule: Rule): boolean {\n    if (rule.ValueRepresentation === ValueRepresentation.STRING) {\n      return rule.Value.toString().includes(value.toString());\n    }\n    return false;\n  }\n\n  private isNotIn(value: string | number, rule: Rule): boolean {\n    if (rule.ValueRepresentation === ValueRepresentation.STRING) {\n      return !rule.Value.toString().includes(value.toString());\n    }\n    return false;\n  }\n\n  private isGreaterThan(value: string | number, rule: Rule): boolean {\n    if (rule.ValueRepresentation === ValueRepresentation.NUMBER) {\n      return Number(value) > Number(rule.Value);\n    } else if (rule.ValueRepresentation === ValueRepresentation.DATE) {\n      return moment(value.toString()).isAfter(moment(rule.Value.toString()));\n    }\n    return false;\n  }\n\n  private isLessThan(value: string | number, rule: Rule): boolean {\n    if (rule.ValueRepresentation === ValueRepresentation.NUMBER) {\n      return Number(value)  {\n            console.error(\"can't send to aet: \", e);\n          });\n        break;\n      case DestinationType.TMTVJOB:\n        if (level !== LevelType.STUDIES) {\n          console.error('TMTV Jobs can only be sent to series');\n          return;\n        }\n\n        const seriesDetails =\n          await this.orthancClient.getSeriesDetailsOfStudy(orthancID);\n\n        const allModalities = seriesDetails.map(\n          (series: any) => series.MainDicomTags.Modality,\n        );\n\n        if (\n          allModalities.length !== 2 ||\n          !allModalities.includes('PT') ||\n          !allModalities.includes('CT')\n        ) {\n          console.error('Invalid series modalities: ', allModalities);\n          return;\n        }\n\n        const ctSeriesID = seriesDetails.find(\n          (series: any) => series.MainDicomTags.Modality === 'CT',\n        ).ID;\n\n        const ptSeriesID = seriesDetails.find(\n          (series: any) => series.MainDicomTags.Modality === 'PT',\n        ).ID;\n\n        const jobId = await this.processingQueueService.addJob(null, {\n          JobType: ProcessingJobType.TMTV,\n          Payload: {\n            PtOrthancSeriesId: ptSeriesID,\n            CtOrthancSeriesId: ctSeriesID,\n            SendMaskToOrthancAs: [ProcessingMask.RTSS, ProcessingMask.SEG],\n            WithFragmentedMask: true,\n          },\n        });\n        break;\n      case DestinationType.PEER:\n        this.orthancClient\n          .sendToPeer(destination.Name, [orthancID])\n          .catch((e) => {\n            console.error(\"can't send to peer: \", e);\n          });\n        break;\n    }\n  }\n\n  async processEvent(\n    autorouting: Autorouting,\n    payload: OrthancEventPayloadDto,\n  ) {\n    const level = this.levelMapping[payload.ChangeType];\n    const data = await this.orthancClient.getOrthancDetails(level, payload.ID);\n    const isSendable = this.isSendable(autorouting.Router, data);\n\n    if (isSendable) {\n      for (const destination of autorouting.Router.Destinations) {\n        this.sendToDestination(destination, level, payload.ID);\n      }\n    }\n  }\n\n  @OnEvent('orthanc.*')\n  async handleEvent(payload: OrthancEventPayloadDto) {\n    const autoroutingMatches = this.autoroutingConfigs.filter(\n      (autorouting) =>\n        autorouting.EventType === payload.ChangeType && autorouting.Activated,\n    );\n\n    autoroutingMatches.forEach((autorouting: Autorouting) => {\n      this.processEvent(autorouting, payload);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AutoroutingsController.html":{"url":"controllers/AutoroutingsController.html","title":"controller - AutoroutingsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AutoroutingsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/autorouting/autoroutings.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /autorouting\n            \n\n\n            \n                Description\n            \n            \n                API controllers for autorouting related routes\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                createAutorouting\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                deleteAutorouting\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                disableAutorouting\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                enableAutorouting\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getAutorouting\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        createAutorouting\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAutorouting(createAutoroutingDto: CreateAutoroutingDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 201, description: 'create autorouting'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AutoRoutingGuard)@UsePipes(new ValidationPipe())@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAutoroutingDto\n                                            \n                                                            CreateAutoroutingDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        deleteAutorouting\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteAutorouting(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'delete autorouting by id'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiParam({name: 'id', required: true, type: 'number'})@UseGuards(AutoRoutingGuard)@Delete('/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.controller.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        disableAutorouting\n                        \n                    \n                \n            \n            \n                \n                        \n                    disableAutorouting(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'disable autorouting by id'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiParam({name: 'id', required: true, type: 'number'})@UseGuards(AutoRoutingGuard)@Put('/:id/disable')\n                \n            \n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.controller.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        enableAutorouting\n                        \n                    \n                \n            \n            \n                \n                        \n                    enableAutorouting(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'enable autorouting by id'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiParam({name: 'id', required: true, type: 'number'})@UseGuards(AutoRoutingGuard)@Put('/:id/enable')\n                \n            \n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.controller.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getAutorouting\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAutorouting()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all autorouting', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AutoRoutingGuard)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  UseGuards,\n  Body,\n  Post,\n  Delete,\n  Param,\n  UsePipes,\n  ValidationPipe,\n  Put,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiParam, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { AutoRoutingGuard } from '../guards/roles.guard';\nimport { CreateAutoroutingDto } from './dto/create-autorouting.dto';\nimport { Autorouting } from './autorouting.entity';\nimport { AutoroutingsService } from './autoroutings.service';\n\n/**\n * API controllers for autorouting related routes\n */\n@ApiTags('autorouting')\n@Controller('/autorouting')\nexport class AutoroutingsController {\n  constructor(private autoroutingService: AutoroutingsService) {}\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 201,\n    description: 'create autorouting',\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AutoRoutingGuard)\n  @UsePipes(new ValidationPipe({ transform: true }))\n  @Post()\n  async createAutorouting(\n    @Body() createAutoroutingDto: CreateAutoroutingDto,\n  ): Promise {\n    return await this.autoroutingService.create(createAutoroutingDto);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'Get all autorouting',\n    type: [Autorouting],\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AutoRoutingGuard)\n  @Get()\n  async getAutorouting(): Promise {\n    return await this.autoroutingService.findAll();\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'delete autorouting by id',\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiParam({ name: 'id', required: true, type: 'number' })\n  @UseGuards(AutoRoutingGuard)\n  @Delete('/:id')\n  async deleteAutorouting(@Param('id') id: number): Promise {\n    await this.autoroutingService.findOneOrFail(id);\n    return await this.autoroutingService.remove(id);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'enable autorouting by id',\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiParam({ name: 'id', required: true, type: 'number' })\n  @UseGuards(AutoRoutingGuard)\n  @Put('/:id/enable')\n  async enableAutorouting(@Param('id') id: number): Promise {\n    await this.autoroutingService.enable(id);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'disable autorouting by id',\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiParam({ name: 'id', required: true, type: 'number' })\n  @UseGuards(AutoRoutingGuard)\n  @Put('/:id/disable')\n  async disableAutorouting(@Param('id') id: number): Promise {\n    await this.autoroutingService.disable(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AutoroutingsModule.html":{"url":"modules/AutoroutingsModule.html","title":"module - AutoroutingsModule","body":"\n                   \n\n\n\n\n    Modules\n    AutoroutingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AutoroutingsModule\n\n\n\ncluster_AutoroutingsModule_providers\n\n\n\n\nAutoroutingHandler\n\nAutoroutingHandler\n\n\n\nAutoroutingsModule\n\nAutoroutingsModule\n\nAutoroutingsModule -->\n\nAutoroutingHandler->AutoroutingsModule\n\n\n\n\n\nAutoroutingsService\n\nAutoroutingsService\n\nAutoroutingsModule -->\n\nAutoroutingsService->AutoroutingsModule\n\n\n\n\n\nOrthancClient\n\nOrthancClient\n\nAutoroutingsModule -->\n\nOrthancClient->AutoroutingsModule\n\n\n\n\n\nProcessingQueueService\n\nProcessingQueueService\n\nAutoroutingsModule -->\n\nProcessingQueueService->AutoroutingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/autorouting/autoroutings.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AutoroutingHandler\n                        \n                        \n                            AutoroutingsService\n                        \n                        \n                            OrthancClient\n                        \n                        \n                            ProcessingQueueService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AutoroutingsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Autorouting } from './autorouting.entity';\nimport { AutoroutingsService } from './autoroutings.service';\nimport { AutoroutingsController } from './autoroutings.controller';\nimport { AutoroutingHandler } from './autorouting.handler';\nimport OrthancClient from '../utils/orthanc-client';\nimport { ProcessingQueueService } from '../processing/processing-queue.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Autorouting])],\n  providers: [\n    AutoroutingsService,\n    AutoroutingHandler,\n    OrthancClient,\n    ProcessingQueueService,\n  ],\n  controllers: [AutoroutingsController],\n})\nexport class AutoroutingsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AutoroutingsService.html":{"url":"injectables/AutoroutingsService.html","title":"injectable - AutoroutingsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AutoroutingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/autorouting/autoroutings.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Database access to autorouting data\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                disable\n                            \n                            \n                                    Async\n                                enable\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOneByEventType\n                            \n                            \n                                    Async\n                                findOneOrFail\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(autoroutingsRepository: Repository, eventEmitter: EventEmitter2)\n                    \n                \n                        \n                            \n                                Defined in src/autorouting/autoroutings.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        autoroutingsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventEmitter\n                                                  \n                                                        \n                                                                    EventEmitter2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(autorouting: Autorouting)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                autorouting\n                                            \n                                                            Autorouting\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        disable\n                        \n                    \n                \n            \n            \n                \n                        \n                    disable(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        enable\n                        \n                    \n                \n            \n            \n                \n                        \n                    enable(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByEventType\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByEventType(eventType: AutoroutingEventType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                eventType\n                                            \n                                                            AutoroutingEventType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneOrFail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneOrFail(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, autorouting: Autorouting)\n                \n            \n\n\n                    \n                        \n                            Defined in src/autorouting/autoroutings.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                autorouting\n                                            \n                                                            Autorouting\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { Autorouting } from './autorouting.entity';\nimport { EventEmitter2 } from '@nestjs/event-emitter';\nimport { AutoroutingEventType } from './autorouting.enum';\n\n/**\n * Database access to autorouting data\n */\n@Injectable()\nexport class AutoroutingsService {\n  constructor(\n    @InjectRepository(Autorouting)\n    private autoroutingsRepository: Repository,\n    private eventEmitter: EventEmitter2,\n  ) {}\n\n  async findAll(): Promise {\n    return await this.autoroutingsRepository.find();\n  }\n\n  async findOneByEventType(\n    eventType: AutoroutingEventType,\n  ): Promise {\n    return await this.autoroutingsRepository.find({\n      where: { EventType: eventType, Activated: true },\n    });\n  }\n\n  async findOneOrFail(id: number): Promise {\n    return await this.autoroutingsRepository.findOneOrFail({\n      where: { Id: id },\n    });\n  }\n\n  async create(autorouting: Autorouting): Promise {\n    await this.autoroutingsRepository.save(autorouting);\n    this.eventEmitter.emit('autorouting.updated');\n  }\n\n  async update(id: number, autorouting: Autorouting): Promise {\n    await this.autoroutingsRepository.update(id, autorouting);\n    this.eventEmitter.emit('autorouting.updated');\n  }\n\n  async remove(id: number): Promise {\n    await this.autoroutingsRepository.delete(id);\n    this.eventEmitter.emit('autorouting.updated');\n  }\n\n  async enable(id: number): Promise {\n    const autorouting = await this.findOneOrFail(id);\n    autorouting.Activated = true;\n    await this.update(id, autorouting);\n  }\n\n  async disable(id: number): Promise {\n    const autorouting = await this.findOneOrFail(id);\n    autorouting.Activated = false;\n    await this.update(id, autorouting);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CdBurnerGuard.html":{"url":"guards/CdBurnerGuard.html","title":"guard - CdBurnerGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    CdBurnerGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard cheking user has cdBurner permission\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n/**\n * Guard cheking user has import permission\n */\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n/**\n * Guard cheking user has anonymize permission\n */\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n/**\n * Guard cheking user has export permission\n */\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n/**\n * Guard cheking user has query permission\n */\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n/**\n * Guard cheking user has autoquery permission\n */\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n/**\n * Guard cheking user has delete permission\n */\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n/**\n * Guard cheking user has admin permission\n */\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n/**\n * Guard cheking user has modify permission\n */\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n/**\n * Guard cheking user has cdBurner permission\n */\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n/**\n * Guard cheking user has autorouting permission\n */\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n/**\n * Guard cheking user has readall permission\n */\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangePasswordDto.html":{"url":"classes/ChangePasswordDto.html","title":"class - ChangePasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangePasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/change-password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                ConfirmationPassword\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                NewPassword\n                            \n                            \n                                    \n                                    \n                                    \n                                Token\n                            \n                            \n                                    \n                                    \n                                    \n                                UserId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        ConfirmationPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'password1234!Change'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/change-password.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        NewPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'password1234!Change'})@IsString()@IsNotEmpty()@MinLength(12)@Matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[\\W])[A-Za-z\\d\\W]{12,}$/, {message: 'The password must contain at least one uppercase letter, one lowercase letter, one digit, and one special character'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/change-password.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/change-password.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        UserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/change-password.dto.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsNotEmpty,\n  IsNumber,\n  IsString,\n  Matches,\n  MinLength,\n} from 'class-validator';\n\nexport class ChangePasswordDto {\n  @ApiProperty({ example: 'password1234!Change' })\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(12)\n  @Matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[\\W])[A-Za-z\\d\\W]{12,}$/, {\n    message:\n      'The password must contain at least one uppercase letter, one lowercase letter, one digit, and one special character',\n  })\n  NewPassword: string;\n\n  @ApiProperty({ example: 'password1234!Change' })\n  @IsString()\n  @IsNotEmpty()\n  ConfirmationPassword: string;\n\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  Token: string;\n\n  @ApiProperty()\n  @IsNumber()\n  @IsNotEmpty()\n  UserId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CheckLabelInRole.html":{"url":"guards/CheckLabelInRole.html","title":"guard - CheckLabelInRole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    CheckLabelInRole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/check-label-in-role.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard checking requested label belongs to user's role\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(rolesService: RolesService)\n                    \n                \n                        \n                            \n                                Defined in src/guards/check-label-in-role.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rolesService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/check-label-in-role.guard.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { RolesService } from '../roles/roles.service';\n/**\n * Guard checking requested label belongs to user's role\n */\n@Injectable()\nexport class CheckLabelInRole implements CanActivate {\n  constructor(private rolesService: RolesService) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    const labelName = request.params.labelName;\n    const userRole = request.user.role.Name;\n    const labelsOfRole = (await this.rolesService.getRoleLabels(userRole)).map(\n      (label) => label.Name,\n    );\n\n    return labelsOfRole.includes(labelName);\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CheckUserIdParamsGuard.html":{"url":"guards/CheckUserIdParamsGuard.html","title":"guard - CheckUserIdParamsGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    CheckUserIdParamsGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/check-user-id-params.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard checking requested Id in param is the same as userId calling\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/guards/check-user-id-params.guard.ts:6\n                            \n                        \n\n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/check-user-id-params.guard.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\n/**\n * Guard checking requested Id in param is the same as userId calling\n */\n@Injectable()\nexport class CheckUserIdParamsGuard implements CanActivate {\n  constructor() {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const value = request.params.id;\n    const userId = request.user.userId;\n\n    return value == userId && value != undefined;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CheckUserIdQueryGuard.html":{"url":"guards/CheckUserIdQueryGuard.html","title":"guard - CheckUserIdQueryGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    CheckUserIdQueryGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/check-user-id-query.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard checking requested Id in query is the same as userId calling\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/guards/check-user-id-query.guard.ts:6\n                            \n                        \n\n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/check-user-id-query.guard.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\n/**\n * Guard checking requested Id in query is the same as userId calling\n */\n@Injectable()\nexport class CheckUserIdQueryGuard implements CanActivate {\n  constructor() {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const value = request.query.userId;\n    const userId = request.user.userId;\n\n    return value == userId && value != undefined;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CheckUserRoleGuard.html":{"url":"guards/CheckUserRoleGuard.html","title":"guard - CheckUserRoleGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    CheckUserRoleGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/check-user-role.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard checking role name in param is the same as user calling role\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/guards/check-user-role.guard.ts:6\n                            \n                        \n\n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/check-user-role.guard.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\n/**\n * Guard checking role name in param is the same as user calling role\n */\n@Injectable()\nexport class CheckUserRoleGuard implements CanActivate {\n  constructor() {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const value = request.params.roleName;\n    const userRole = request.user.role.Name;\n\n    return value == userRole && value != undefined;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAutoroutingDto.html":{"url":"classes/CreateAutoroutingDto.html","title":"class - CreateAutoroutingDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAutoroutingDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/autorouting/dto/create-autorouting.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            OmitType(Autorouting, [\n  'Id',\n] as const)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\nimport { Autorouting } from '../autorouting.entity';\n\nexport class CreateAutoroutingDto extends OmitType(Autorouting, [\n  'Id',\n] as const) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOptionDto.html":{"url":"classes/CreateOptionDto.html","title":"class - CreateOptionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOptionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/options/dto/create-option.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                AutoQueryHourStart\n                            \n                            \n                                    \n                                    \n                                AutoQueryHourStop\n                            \n                            \n                                    \n                                    \n                                AutoQueryMinuteStart\n                            \n                            \n                                    \n                                    \n                                AutoQueryMinuteStop\n                            \n                            \n                                    \n                                    \n                                AutorouterStarted\n                            \n                            \n                                    \n                                    \n                                BurnerDateFormat\n                            \n                            \n                                    \n                                    \n                                BurnerDeleteStudyAfterSent\n                            \n                            \n                                    \n                                    \n                                BurnerLabelPath\n                            \n                            \n                                    \n                                    \n                                BurnerManifacturer\n                            \n                            \n                                    \n                                    \n                                BurnerMonitoredPath\n                            \n                            \n                                    \n                                    \n                                BurnerMonitoringLevel\n                            \n                            \n                                    \n                                    \n                                BurnerStarted\n                            \n                            \n                                    \n                                    \n                                BurnerSupportType\n                            \n                            \n                                    \n                                    \n                                BurnerTranscoding\n                            \n                            \n                                    \n                                    \n                                BurnerTransferSyntax\n                            \n                            \n                                    \n                                    \n                                BurnerViewerPath\n                            \n                            \n                                    \n                                    \n                                OrthancMonitoringRate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQueryHourStart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 22})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQueryHourStop\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 6})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQueryMinuteStart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 0})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQueryMinuteStop\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 0})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutorouterStarted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: false, required: false, default: false})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerDateFormat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'uk', required: false, default: 'uk'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerDeleteStudyAfterSent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: false, required: false, default: false})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerLabelPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '', required: false, default: ''})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerManifacturer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Epson', required: false, default: 'Epson'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerMonitoredPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '', required: false, default: ''})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerMonitoringLevel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Study', required: false, default: 'Study'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerStarted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: false, default: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerSupportType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Auto', required: false, default: 'Auto'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerTranscoding\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'None', required: false, default: 'None'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerTransferSyntax\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'None', required: false, default: 'None'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerViewerPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '', required: false, default: ''})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        OrthancMonitoringRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 10, required: false, default: 10})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/create-option.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsBoolean, IsNumber } from 'class-validator';\n\nexport class CreateOptionDto {\n  @ApiProperty({ example: 22 })\n  @IsNumber()\n  AutoQueryHourStart: number;\n\n  @ApiProperty({ example: 0 })\n  @IsNumber()\n  AutoQueryMinuteStart: number;\n\n  @ApiProperty({ example: 6 })\n  @IsNumber()\n  AutoQueryHourStop: number;\n\n  @ApiProperty({ example: 0 })\n  @IsNumber()\n  AutoQueryMinuteStop: number;\n\n  @ApiProperty({ example: 10, required: false, default: 10 })\n  @IsNumber()\n  OrthancMonitoringRate: number;\n\n  @ApiProperty({ example: true, required: false, default: true })\n  @IsBoolean()\n  BurnerStarted: boolean;\n\n  @ApiProperty({ example: '', required: false, default: '' })\n  @IsString()\n  BurnerLabelPath: string;\n\n  @ApiProperty({ example: 'Study', required: false, default: 'Study' })\n  @IsString()\n  BurnerMonitoringLevel: string;\n\n  @ApiProperty({ example: 'Epson', required: false, default: 'Epson' })\n  @IsString()\n  BurnerManifacturer: string;\n\n  @ApiProperty({ example: '', required: false, default: '' })\n  @IsString()\n  BurnerMonitoredPath: string;\n\n  @ApiProperty({ example: false, required: false, default: false })\n  @IsBoolean()\n  BurnerDeleteStudyAfterSent: boolean;\n\n  @ApiProperty({ example: 'Auto', required: false, default: 'Auto' })\n  @IsString()\n  BurnerSupportType: string;\n\n  @ApiProperty({ example: '', required: false, default: '' })\n  @IsString()\n  BurnerViewerPath: string;\n\n  @ApiProperty({ example: 'None', required: false, default: 'None' })\n  @IsString()\n  BurnerTransferSyntax: string;\n\n  @ApiProperty({ example: 'uk', required: false, default: 'uk' })\n  @IsString()\n  BurnerDateFormat: string;\n\n  @ApiProperty({ example: 'None', required: false, default: 'None' })\n  @IsString()\n  BurnerTranscoding: string;\n\n  @ApiProperty({ example: false, required: false, default: false })\n  @IsBoolean()\n  AutorouterStarted: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleDto.html":{"url":"classes/CreateRoleDto.html","title":"class - CreateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/create-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Admin\n                            \n                            \n                                    \n                                    \n                                Anonymize\n                            \n                            \n                                    \n                                    \n                                AutoQuery\n                            \n                            \n                                    \n                                    \n                                AutoRouting\n                            \n                            \n                                    \n                                    \n                                CdBurner\n                            \n                            \n                                    \n                                    \n                                Delete\n                            \n                            \n                                    \n                                    \n                                Export\n                            \n                            \n                                    \n                                    \n                                Import\n                            \n                            \n                                    \n                                    \n                                Modify\n                            \n                            \n                                    \n                                    \n                                Name\n                            \n                            \n                                    \n                                    \n                                Query\n                            \n                            \n                                    \n                                    \n                                ReadAll\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Admin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Anonymize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoRouting\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        CdBurner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Delete\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Export\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Import\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Modify\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'admin', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Query\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ReadAll\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsBoolean, IsString } from 'class-validator';\n\nexport class CreateRoleDto {\n  @ApiProperty({ example: 'admin', required: true })\n  @IsString()\n  Name: string;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  Import: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  Anonymize: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  Export: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  Query: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  AutoQuery: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  Delete: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  Admin: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  Modify: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  CdBurner: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  AutoRouting: boolean;\n\n  @ApiProperty({ example: true, required: true })\n  @IsBoolean()\n  ReadAll: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Email\n                            \n                            \n                                    \n                                    \n                                Firstname\n                            \n                            \n                                    \n                                    \n                                Lastname\n                            \n                            \n                                    \n                                    \n                                    \n                                Password\n                            \n                            \n                                    \n                                    \n                                RoleName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'john.doe@gmail.com', required: true})@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'John', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Doe', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'myPassw0rd1234!'})@IsString()@Matches(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$ %^&*-]).{12,}$/, {message: 'Password too weak'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        RoleName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Admin', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsString, Matches } from 'class-validator';\n\nexport class CreateUserDto {\n  @ApiProperty({ example: 'John', required: true })\n  @IsString()\n  Firstname: string;\n\n  @ApiProperty({ example: 'Doe', required: true })\n  @IsString()\n  Lastname: string;\n\n  @ApiProperty({ example: 'john.doe@gmail.com', required: true })\n  @IsEmail()\n  Email: string;\n\n  @ApiProperty({ example: 'Admin', required: true })\n  @IsString()\n  RoleName: string;\n\n  @ApiProperty({ example: 'myPassw0rd1234!' })\n  @IsString()\n  @Matches(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$ %^&*-]).{12,}$/, {\n    message: 'Password too weak',\n  })\n  Password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/DeleteGuard.html":{"url":"guards/DeleteGuard.html","title":"guard - DeleteGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    DeleteGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard cheking user has delete permission\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n/**\n * Guard cheking user has import permission\n */\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n/**\n * Guard cheking user has anonymize permission\n */\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n/**\n * Guard cheking user has export permission\n */\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n/**\n * Guard cheking user has query permission\n */\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n/**\n * Guard cheking user has autoquery permission\n */\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n/**\n * Guard cheking user has delete permission\n */\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n/**\n * Guard cheking user has admin permission\n */\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n/**\n * Guard cheking user has modify permission\n */\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n/**\n * Guard cheking user has cdBurner permission\n */\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n/**\n * Guard cheking user has autorouting permission\n */\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n/**\n * Guard cheking user has readall permission\n */\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Destination.html":{"url":"classes/Destination.html","title":"class - Destination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Destination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/autorouting/autorouting.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                Destination\n                            \n                            \n                                    \n                                    \n                                    \n                                Name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Destination\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DestinationType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Column({name: 'type'})@IsEnum(DestinationType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column({name: 'name'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:52\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsBoolean,\n  IsEnum,\n  IsString,\n  Validate,\n  ValidateNested,\n} from 'class-validator';\nimport {\n  AutoroutingEventType,\n  Condition,\n  DestinationType,\n  DicomTag,\n  RuleCondition,\n  ValueRepresentation,\n} from './autorouting.enum';\nimport { Type } from 'class-transformer';\nimport { IsNumberOrString } from '../validators/string-or-number';\n\nexport class Rule {\n  @ApiProperty({ example: DicomTag.PATIENT_NAME })\n  @Column({ name: 'dicom_tag' })\n  @IsEnum(DicomTag)\n  DicomTag: DicomTag;\n\n  @ApiProperty({ example: ValueRepresentation.STRING })\n  @Column({ name: 'value_representation' })\n  @IsEnum(ValueRepresentation)\n  ValueRepresentation: ValueRepresentation;\n\n  @ApiProperty()\n  @Column({ name: 'value' })\n  @Validate(IsNumberOrString)\n  Value: string | number;\n\n  @ApiProperty({ example: Condition.EQUALS })\n  @Column({ name: 'condition' })\n  @IsEnum(Condition)\n  Condition: Condition;\n}\n\nexport class Destination {\n  @ApiProperty({ example: DestinationType.AET })\n  @Column({ name: 'type' })\n  @IsEnum(DestinationType)\n  Destination: DestinationType;\n\n  @ApiProperty()\n  @Column({ name: 'name' })\n  @IsString()\n  Name: string;\n}\n\nexport class Router {\n  @ApiProperty({ example: RuleCondition.AND })\n  @Column({ name: 'rule_condition' })\n  @IsEnum(RuleCondition)\n  RuleCondition: RuleCondition;\n\n  @ApiProperty({\n    example: [\n      {\n        DicomTag: DicomTag.PATIENT_NAME,\n        ValueRepresentation: ValueRepresentation.STRING,\n        Value: 'value',\n        Condition: Condition.EQUALS,\n      },\n    ],\n  })\n  @Column({ name: 'rules', type: 'jsonb' })\n  @ValidateNested({ each: true })\n  @Type(() => Rule)\n  Rules: Rule[];\n\n  @ApiProperty({\n    example: [\n      {\n        Destination: DestinationType.AET,\n        Name: 'value',\n      },\n    ],\n  })\n  @Column({ name: 'destinations', type: 'jsonb' })\n  @ValidateNested({ each: true })\n  @Type(() => Destination)\n  Destinations: Destination[];\n}\n\n@Entity()\nexport class Autorouting {\n  @ApiProperty()\n  @PrimaryGeneratedColumn({ name: 'id' })\n  Id?: number;\n\n  @ApiProperty()\n  @Column({ name: 'name' })\n  @IsString()\n  Name: string;\n\n  @ApiProperty({ example: AutoroutingEventType.NEW_INSTANCE })\n  @Column({ name: 'event_type' })\n  @IsEnum(AutoroutingEventType)\n  EventType: AutoroutingEventType;\n\n  @ApiProperty()\n  @Column({ name: 'activated' })\n  @IsBoolean()\n  Activated: boolean;\n\n  @ApiProperty()\n  @Column({ name: 'router', type: 'jsonb' })\n  @ValidateNested()\n  @Type(() => Router)\n  Router: Router;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/DicomWebGuard.html":{"url":"guards/DicomWebGuard.html","title":"guard - DicomWebGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    DicomWebGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/dicom-web.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guarding parsing Dicom-web routes and cheking called ressource has a label belonging to user's calling role\n\n                \n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                level\n                            \n                            \n                                    Private\n                                pathname\n                            \n                            \n                                    Private\n                                query\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                getPatientID\n                            \n                            \n                                    Private\n                                getSeriesInstanceUID\n                            \n                            \n                                    Private\n                                getStudyInstanceUID\n                            \n                            \n                                    Private\n                                getUID\n                            \n                            \n                                    Private\n                                setLevel\n                            \n                            \n                                    Private\n                                strstr\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(orthancClient: OrthancClient, rolesService: RolesService)\n                    \n                \n                        \n                            \n                                Defined in src/guards/dicom-web.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        orthancClient\n                                                  \n                                                        \n                                                                        OrthancClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rolesService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/dicom-web.guard.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getPatientID\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPatientID()\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/dicom-web.guard.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getSeriesInstanceUID\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSeriesInstanceUID()\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/dicom-web.guard.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getStudyInstanceUID\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStudyInstanceUID()\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/dicom-web.guard.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getUID\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUID($requestedURI: string, level: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/dicom-web.guard.ts:61\n                        \n                    \n\n\n            \n                \n                        Isolate the called Study or Series Instance UID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                $requestedURI\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                level\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                string\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setLevel\n                        \n                    \n                \n            \n            \n                \n                        \n                    setLevel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/dicom-web.guard.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        strstr\n                        \n                    \n                \n            \n            \n                \n                        \n                    strstr(haystack, needle, bool)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/dicom-web.guard.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                haystack\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                needle\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                bool\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { RolesService } from '../roles/roles.service';\nimport { checkLabelRoleStudy } from '../utils/check-label-role-study';\nimport OrthancClient from '../utils/orthanc-client';\n/**\n * Guarding parsing Dicom-web routes and cheking called ressource has a label belonging to user's calling role\n */\n@Injectable()\nexport class DicomWebGuard implements CanActivate {\n  private level: string;\n  private pathname: string;\n  private query: Record = {};\n\n  constructor(\n    private readonly orthancClient: OrthancClient,\n    private readonly rolesService: RolesService,\n  ) {}\n\n  private setLevel(): void {\n    if (Object.keys(this.query).length > 0) {\n      if (this.query['00100020']) {\n        this.level = 'patients';\n        return;\n      }\n\n      if (this.query['0020000D'] || this.query['StudyInstanceUID']) {\n        this.level = 'studies';\n        return;\n      }\n    }\n\n    if (this.pathname.endsWith('/studies')) this.level = 'patients';\n    else if (this.pathname.endsWith('/series')) this.level = 'studies';\n    else this.level = 'series';\n  }\n\n  private getPatientID(): string {\n    if (this.query['00100020']) return this.query['00100020'].replace('*', '');\n    else {\n      throw new Error('No Patient ID Found');\n    }\n  }\n\n  private getStudyInstanceUID(): string {\n    if (Object.keys(this.query).length > 0) {\n      if (this.query?.['0020000D']) return this.query?.['0020000D'];\n      if (this.query?.['StudyInstanceUID'])\n        return this.query?.['StudyInstanceUID'];\n    }\n    return this.getUID(this.pathname, 'studies');\n  }\n\n  private getSeriesInstanceUID(): string {\n    return this.getUID(this.pathname, 'series');\n  }\n\n  /**\n   * Isolate the called Study or Series Instance UID\n   * @return string\n   */\n  private getUID($requestedURI: string, level: string): string {\n    let studySubString = this.strstr($requestedURI, '/' + level + '/', false);\n    studySubString = studySubString.replace('/' + level + '/', '');\n\n    const endStudyInstanceUIDPosition = studySubString.indexOf('/');\n\n    let studyInstanceUID: string;\n    if (endStudyInstanceUIDPosition) {\n      studyInstanceUID = studySubString.substr(0, endStudyInstanceUIDPosition);\n    } else {\n      studyInstanceUID = studySubString;\n    }\n\n    return studyInstanceUID;\n  }\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    const url = new URL('http://localhost:3000' + request.url);\n    const params = Object.fromEntries(url.searchParams.entries());\n    const userRole = request.user.role.Name;\n\n    this.pathname = url.pathname;\n    this.query = params;\n    this.setLevel();\n\n    let orthancStudyId = null;\n    if (this.level === 'patients') {\n      //Patient Level cannot be associated to a label, so we check that the client asked for a specific patient for the qido request\n      //Metadata and image retrieve will use anyway the studies/series which are protected\n      if (this.getPatientID()) return true;\n    } else if (this.level === 'series') {\n      const getSeriesInstanceUID = this.getSeriesInstanceUID();\n      const series = await this.orthancClient.lookup(getSeriesInstanceUID);\n      if (series.length == 1) {\n        const orthancSeriesId = series[0].ID;\n        const parentStudy = await this.orthancClient\n          .getParentStudy('series', orthancSeriesId)\n          .catch(() => null);\n\n        if (parentStudy?.ID) {\n          orthancStudyId = parentStudy.ID;\n        }\n      }\n    } else if (this.level === 'studies') {\n      const getStudyInstanceUID = this.getStudyInstanceUID();\n      const parentStudies =\n        await this.orthancClient.lookup(getStudyInstanceUID);\n      if (parentStudies.length == 1) {\n        orthancStudyId = parentStudies[0].ID;\n      }\n    }\n\n    if (orthancStudyId)\n      return await checkLabelRoleStudy(\n        orthancStudyId,\n        userRole,\n        this.rolesService,\n        this.orthancClient,\n      );\n    return false;\n  }\n\n  private strstr(haystack, needle, bool) {\n    // Finds first occurrence of a string within another\n    //\n    // version: 1103.1210\n    // discuss at: http://phpjs.org/functions/strstr\n    // +   original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // +   bugfixed by: Onno Marsman\n    // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // *     example 1: strstr(‘Kevin van Zonneveld’, ‘van’);\n    // *     returns 1: ‘van Zonneveld’\n    // *     example 2: strstr(‘Kevin van Zonneveld’, ‘van’, true);\n    // *     returns 2: ‘Kevin ‘\n    // *     example 3: strstr(‘name@example.com’, ‘@’);\n    // *     returns 3: ‘@example.com’\n    // *     example 4: strstr(‘name@example.com’, ‘@’, true);\n    // *     returns 4: ‘name’\n    let pos = 0;\n\n    haystack += '';\n    pos = haystack.indexOf(needle);\n    if (pos == -1) {\n      return false;\n    } else {\n      if (bool) {\n        return haystack.substr(0, pos);\n      } else {\n        return haystack.slice(pos);\n      }\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ExportGuard.html":{"url":"guards/ExportGuard.html","title":"guard - ExportGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    ExportGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard cheking user has export permission\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n/**\n * Guard cheking user has import permission\n */\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n/**\n * Guard cheking user has anonymize permission\n */\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n/**\n * Guard cheking user has export permission\n */\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n/**\n * Guard cheking user has query permission\n */\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n/**\n * Guard cheking user has autoquery permission\n */\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n/**\n * Guard cheking user has delete permission\n */\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n/**\n * Guard cheking user has admin permission\n */\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n/**\n * Guard cheking user has modify permission\n */\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n/**\n * Guard cheking user has cdBurner permission\n */\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n/**\n * Guard cheking user has autorouting permission\n */\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n/**\n * Guard cheking user has readall permission\n */\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetOptionDto.html":{"url":"classes/GetOptionDto.html","title":"class - GetOptionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetOptionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/options/dto/get-option.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateOptionDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                OrthancAddress\n                            \n                            \n                                    \n                                    \n                                OrthancPassword\n                            \n                            \n                                    \n                                    \n                                OrthancUsername\n                            \n                            \n                                    \n                                    \n                                RedisAddress\n                            \n                            \n                                    \n                                    \n                                RedisPort\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        OrthancAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: ''})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/get-option.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        OrthancPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: ''})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/get-option.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        OrthancUsername\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: ''})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/get-option.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        RedisAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: ''})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/get-option.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        RedisPort\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: ''})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/dto/get-option.dto.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { CreateOptionDto } from './create-option.dto';\nimport { IsString } from 'class-validator';\n\nexport class GetOptionDto extends PartialType(CreateOptionDto) {\n  @ApiProperty({ example: '' })\n  @IsString()\n  OrthancAddress: string;\n\n  @ApiProperty({ example: '' })\n  @IsString()\n  OrthancUsername: string;\n\n  @ApiProperty({ example: '' })\n  @IsString()\n  OrthancPassword: string;\n\n  @ApiProperty({ example: '' })\n  @IsString()\n  RedisAddress: string;\n\n  @ApiProperty({ example: '' })\n  @IsString()\n  RedisPort: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetRoleDto.html":{"url":"classes/GetRoleDto.html","title":"class - GetRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/get-role.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateRoleDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                Labels\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        Labels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Label[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/get-role.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { CreateRoleDto } from './create-role.dto';\nimport { Label } from '../../labels/label.entity';\n\nexport class GetRoleDto extends PartialType(CreateRoleDto) {\n  @ApiProperty({ required: false, default: null })\n  Labels?: Label[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserDto.html":{"url":"classes/GetUserDto.html","title":"class - GetUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/get-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Email\n                            \n                            \n                                    \n                                    \n                                Firstname\n                            \n                            \n                                    \n                                    \n                                Id\n                            \n                            \n                                    \n                                    \n                                Lastname\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                Role\n                            \n                            \n                                    \n                                    \n                                RoleName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'john.doe@gmail.com', required: true})@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/get-user.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'John', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/get-user.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/get-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Doe', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/get-user.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        Role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsInstance(Role)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/get-user.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        RoleName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'admin', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/get-user.dto.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsInstance, IsNumber, IsString } from 'class-validator';\nimport { Role } from '../../roles/role.entity';\n\nexport class GetUserDto {\n  @ApiProperty()\n  @IsNumber()\n  Id: number;\n\n  @ApiProperty({ example: 'John', required: true })\n  @IsString()\n  Firstname: string;\n\n  @ApiProperty({ example: 'Doe', required: true })\n  @IsString()\n  Lastname: string;\n\n  @ApiProperty({ example: 'john.doe@gmail.com', required: true })\n  @IsEmail()\n  Email: string;\n\n  @ApiProperty({ example: 'admin', required: true })\n  @IsString()\n  RoleName: string;\n\n  @ApiProperty()\n  @IsInstance(Role)\n  Role?: Role;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GuardsModule.html":{"url":"modules/GuardsModule.html","title":"module - GuardsModule","body":"\n                   \n\n\n\n\n    Modules\n    GuardsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GuardsModule\n\n\n\ncluster_GuardsModule_imports\n\n\n\ncluster_GuardsModule_providers\n\n\n\n\nRolesModule\n\nRolesModule\n\n\n\nGuardsModule\n\nGuardsModule\n\nGuardsModule -->\n\nRolesModule->GuardsModule\n\n\n\n\n\nInstanceGuard\n\nInstanceGuard\n\nGuardsModule -->\n\nInstanceGuard->GuardsModule\n\n\n\n\n\nJwtAuthGuard\n\nJwtAuthGuard\n\nGuardsModule -->\n\nJwtAuthGuard->GuardsModule\n\n\n\n\n\nJwtOAuthGuard\n\nJwtOAuthGuard\n\nGuardsModule -->\n\nJwtOAuthGuard->GuardsModule\n\n\n\n\n\nLocalAuthGuard\n\nLocalAuthGuard\n\nGuardsModule -->\n\nLocalAuthGuard->GuardsModule\n\n\n\n\n\nOrthancClient\n\nOrthancClient\n\nGuardsModule -->\n\nOrthancClient->GuardsModule\n\n\n\n\n\nSeriesGuard\n\nSeriesGuard\n\nGuardsModule -->\n\nSeriesGuard->GuardsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/guards/guards.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            InstanceGuard\n                        \n                        \n                            JwtAuthGuard\n                        \n                        \n                            JwtOAuthGuard\n                        \n                        \n                            LocalAuthGuard\n                        \n                        \n                            OrthancClient\n                        \n                        \n                            SeriesGuard\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RolesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, Query } from '@nestjs/common';\nimport { CheckLabelInRole } from './check-label-in-role.guard';\nimport { CheckUserIdParamsGuard } from './check-user-id-params.guard';\nimport { CheckUserRoleGuard } from './check-user-role.guard';\nimport { DicomWebGuard } from './dicom-web.guard';\nimport { InstanceGuard } from './instance.guard';\nimport { JwtOAuthGuard } from './jwt-oauth.guard';\nimport { JwtAuthGuard } from './jwt.guard';\nimport { LocalAuthGuard } from './local.guard';\nimport {\n  AdminGuard,\n  AnonymizeGuard,\n  AutoQueryGuard,\n  AutoRoutingGuard,\n  CdBurnerGuard,\n  DeleteGuard,\n  ExportGuard,\n  ImportGuard,\n  ModifyGuard,\n  QueryGuard,\n  ReadAllGuard,\n} from './roles.guard';\nimport { SeriesGuard } from './series.guard';\nimport { StudyGuard } from './study.guard';\nimport { RolesModule } from '../roles/roles.module';\nimport OrthancClient from '../utils/orthanc-client';\nimport { CheckUserIdQueryGuard } from './check-user-id-query.guard';\n\n@Module({\n  imports: [RolesModule],\n  providers: [\n    OrthancClient,\n    CheckLabelInRole,\n    CheckUserIdParamsGuard,\n    CheckUserIdQueryGuard,\n    CheckUserRoleGuard,\n    DicomWebGuard,\n    InstanceGuard,\n    JwtOAuthGuard,\n    JwtAuthGuard,\n    LocalAuthGuard,\n    ImportGuard,\n    AnonymizeGuard,\n    ExportGuard,\n    QueryGuard,\n    AutoQueryGuard,\n    DeleteGuard,\n    AdminGuard,\n    ModifyGuard,\n    CdBurnerGuard,\n    AutoRoutingGuard,\n    ReadAllGuard,\n    SeriesGuard,\n    StudyGuard,\n  ],\n  controllers: [],\n})\nexport class GuardsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpClient.html":{"url":"classes/HttpClient.html","title":"class - HttpClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/http.client.ts\n        \n\n\n            \n                Description\n            \n            \n                Generic HTTP client for third party communications (Orthanc, Processing...)\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                forwardedAddress\n                            \n                            \n                                    Protected\n                                forwardedProtocol\n                            \n                            \n                                getOptions\n                            \n                            \n                                    Protected\n                                password\n                            \n                            \n                                request\n                            \n                            \n                                requestBuffer\n                            \n                            \n                                requestStream\n                            \n                            \n                                streamAnswerToRes\n                            \n                            \n                                    Protected\n                                url\n                            \n                            \n                                    Protected\n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getResponseAsBuffer\n                            \n                            \n                                    Async\n                                getResponseAsStream\n                            \n                            \n                                setForwardedAdress\n                            \n                            \n                                setForwardedProtocol\n                            \n                            \n                                setPassword\n                            \n                            \n                                setUrl\n                            \n                            \n                                setUsername\n                            \n                            \n                                    Async\n                                streamToWriteAnswerWithCallBack\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        forwardedAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        forwardedProtocol\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        request\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestBuffer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestStream\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        streamAnswerToRes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/http.client.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getResponseAsBuffer\n                        \n                    \n                \n            \n            \n                \n                        \n                    getResponseAsBuffer(url: string, method: string, body: object | string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/http.client.ts:154\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                method\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                body\n                                            \n                                                        object | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getResponseAsStream\n                        \n                    \n                \n            \n            \n                \n                        \n                    getResponseAsStream(url: string, method: string, body: object | string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/http.client.ts:145\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                method\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                body\n                                            \n                                                        object | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setForwardedAdress\n                        \n                    \n                \n            \n            \n                \nsetForwardedAdress(address: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/http.client.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setForwardedProtocol\n                        \n                    \n                \n            \n            \n                \nsetForwardedProtocol(protocol: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/http.client.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                protocol\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPassword\n                        \n                    \n                \n            \n            \n                \nsetPassword(password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/http.client.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUrl\n                        \n                    \n                \n            \n            \n                \nsetUrl(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/http.client.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUsername\n                        \n                    \n                \n            \n            \n                \nsetUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/http.client.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        streamToWriteAnswerWithCallBack\n                        \n                    \n                \n            \n            \n                \n                        \n                    streamToWriteAnswerWithCallBack(url: string, method: string, body: object, streamWriter: any, finishCallBack: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/http.client.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                method\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                streamWriter\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                finishCallBack\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import axios from 'axios';\nimport { Response } from 'express';\n/**\n * Generic HTTP client for third party communications (Orthanc, Processing...)\n */\nexport class HttpClient {\n  protected url: string;\n  protected username: string;\n  protected password: string;\n  protected forwardedAddress: string;\n  protected forwardedProtocol: string;\n\n  getOptions = (\n    url: string,\n    method: string,\n    headers: object,\n    data: object | string | Buffer | any,\n    responseType: string | undefined = undefined,\n  ): object => {\n    return {\n      method: method,\n      baseURL: this.url,\n      url: url,\n      auth: {\n        username: this.username,\n        password: this.password,\n      },\n      headers: {\n        Forwarded:\n          'by=localhost;for=localhost;host=' +\n          this.forwardedAddress +\n          '/api;proto=' +\n          this.forwardedProtocol,\n        ...headers,\n      },\n      data: data ?? undefined,\n      responseType: responseType,\n    };\n  };\n\n  setForwardedAdress(address: string): void {\n    this.forwardedAddress = address;\n  }\n\n  setForwardedProtocol(protocol: string): void {\n    this.forwardedProtocol = protocol;\n  }\n\n  setUrl(url: string) {\n    this.url = url;\n  }\n\n  setUsername(username: string) {\n    this.username = username;\n  }\n\n  setPassword(password: string) {\n    this.password = password;\n  }\n\n  request = (\n    url: string,\n    method: string,\n    body: object | string | null | any,\n    headers: object = {},\n  ) => {\n    const option = this.getOptions(url, method, headers, body);\n    return axios.request(option).catch((error) => {\n      throw new Error(error);\n    });\n  };\n\n  requestBuffer = (\n    url: string,\n    method: string,\n    body: object | string | null | any = {},\n    headers: object = {},\n  ) => {\n    const option = this.getOptions(url, method, headers, body, 'arraybuffer');\n    return axios.request(option).catch((error) => {\n      throw new Error(error);\n    });\n  };\n\n  requestStream = (\n    url: string,\n    method: string,\n    body: object | string | null = {},\n    headers: object = {},\n  ) => {\n    const option = this.getOptions(url, method, headers, body, 'stream');\n    return axios.request(option).catch((error) => {\n      throw new Error(error);\n    });\n  };\n\n  streamAnswerToRes = (\n    url: string,\n    method: string,\n    body: object|string,\n    res: Response,\n    headers: object = {},\n  ) => {\n    const option = this.getOptions(url, method, headers, body, 'stream');\n    return axios\n      .request(option)\n      .then((response) => {\n        res.setHeader('content-type', response.headers['content-type']);\n        response.data.pipe(res);\n      })\n      .catch(function (error) {\n        console.error(error);\n        if (error.response) {\n          if (error.response.status === 401) {\n            res.status(500).send('Bad credentials');\n          } else {\n            res\n              .status(error.response.status)\n              .send(error.response.statusMessage);\n          }\n        }\n      });\n  };\n\n  async streamToWriteAnswerWithCallBack(\n    url: string,\n    method: string,\n    body: object,\n    streamWriter: any,\n    finishCallBack: any,\n  ) {\n    const config = this.getOptions(url, method, {}, body, 'stream');\n    return axios\n      .request(config)\n      .then((response) => {\n        response.data.pipe(streamWriter).on('finish', () => {\n          finishCallBack();\n        });\n      })\n      .catch(function (error) {\n        throw new Error(error);\n      });\n  }\n\n  async getResponseAsStream(\n    url: string,\n    method: string,\n    body: object | string = {},\n  ): Promise {\n    const response = await this.requestStream(url, method, body);\n    return response.data;\n  }\n\n  async getResponseAsBuffer(\n    url: string,\n    method: string,\n    body: object | string = {},\n  ): Promise {\n    const response = await this.requestBuffer(url, method, body);\n    return Buffer.from(response.data, 'binary');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ImportGuard.html":{"url":"guards/ImportGuard.html","title":"guard - ImportGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    ImportGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard cheking user has import permission\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n/**\n * Guard cheking user has import permission\n */\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n/**\n * Guard cheking user has anonymize permission\n */\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n/**\n * Guard cheking user has export permission\n */\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n/**\n * Guard cheking user has query permission\n */\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n/**\n * Guard cheking user has autoquery permission\n */\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n/**\n * Guard cheking user has delete permission\n */\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n/**\n * Guard cheking user has admin permission\n */\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n/**\n * Guard cheking user has modify permission\n */\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n/**\n * Guard cheking user has cdBurner permission\n */\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n/**\n * Guard cheking user has autorouting permission\n */\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n/**\n * Guard cheking user has readall permission\n */\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InstanceGuard.html":{"url":"injectables/InstanceGuard.html","title":"injectable - InstanceGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InstanceGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guards/instance.guard.ts\n        \n\n\n            \n                Description\n            \n            \n                Guarding cheking called orthanc instance has a  parent study label belonging to user's calling role\n\n            \n\n            \n                Extends\n            \n            \n                            StudyGuard\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/instance.guard.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { StudyGuard } from './study.guard';\nimport { checkLabelRoleStudy } from '../utils/check-label-role-study';\n/**\n * Guarding cheking called orthanc instance has a  parent study label belonging to user's calling role\n */\n@Injectable()\nexport class InstanceGuard extends StudyGuard {\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    const userRole = request.user.role.Name;\n    const orthancID = request.params.id;\n\n    const parentStudy = await this.orthancClient\n      .getParentStudy('instances', orthancID)\n      .catch(() => null);\n\n    if (!parentStudy) return false;\n    return checkLabelRoleStudy(\n      parentStudy.ID,\n      userRole,\n      this.rolesService,\n      this.orthancClient,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsNumberOrString.html":{"url":"classes/IsNumberOrString.html","title":"class - IsNumberOrString","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsNumberOrString\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/validators/string-or-number.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultMessage\n                        \n                    \n                \n            \n            \n                \ndefaultMessage(args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/validators/string-or-number.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(text: any, args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/validators/string-or-number.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n  ValidationArguments,\n} from 'class-validator';\n\n@ValidatorConstraint({ name: 'string-or-number', async: false })\nexport class IsNumberOrString implements ValidatorConstraintInterface {\n  validate(text: any, args: ValidationArguments) {\n    return typeof text === 'number' || typeof text === 'string';\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    return '($value) must be number or string';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guards/jwt.guard.ts\n        \n\n\n            \n                Description\n            \n            \n                Global guard for all non public routes\n\n            \n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/guards/jwt.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/jwt.guard.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard } from '@nestjs/passport';\nimport { IS_PUBLIC_KEY } from '../constants/constants';\n\n/**\n * Global guard for all non public routes\n */\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  constructor(private reflector: Reflector) {\n    super();\n  }\n\n  canActivate(context: ExecutionContext) {\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (isPublic) {\n      return true;\n    }\n    return super.canActivate(context);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtOAuthGuard.html":{"url":"injectables/JwtOAuthGuard.html","title":"injectable - JwtOAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtOAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guards/jwt-oauth.guard.ts\n        \n\n\n            \n                Description\n            \n            \n                Guard extanding JWT Strategy (validation of token to a third oauth)\n\n            \n\n            \n                Extends\n            \n            \n                        AuthGuard('bearer')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n/**\n * Guard extanding JWT Strategy (validation of token to a third oauth)\n */\n@Injectable()\nexport class JwtOAuthGuard extends AuthGuard('bearer') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtOauthStrategy.html":{"url":"injectables/JwtOauthStrategy.html","title":"injectable - JwtOauthStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtOauthStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-oauth.strategy.ts\n        \n\n\n            \n                Description\n            \n            \n                This class is a Passport strategy that validates a JWT from an OAuth2 provider.\n\n            \n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUserInfoUrl\n                            \n                            \n                                    Async\n                                getWellKnown\n                            \n                            \n                                    Async\n                                validate\n                            \n                            \n                                    Async\n                                validateIssuer\n                            \n                            \n                                    Async\n                                verifyToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, httpService: HttpService, oauthConfigService: OauthConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt-oauth.strategy.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        oauthConfigService\n                                                  \n                                                        \n                                                                        OauthConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUserInfoUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserInfoUrl(wellKnown: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-oauth.strategy.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                wellKnown\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getWellKnown\n                        \n                    \n                \n            \n            \n                \n                        \n                    getWellKnown(iss: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-oauth.strategy.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                iss\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-oauth.strategy.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateIssuer\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateIssuer(wellKnown: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-oauth.strategy.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                wellKnown\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        verifyToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-oauth.strategy.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { JwtService } from '@nestjs/jwt';\nimport { HttpService } from '@nestjs/axios';\n\nimport { Strategy } from 'passport-http-bearer';\nimport { firstValueFrom } from 'rxjs';\n\nimport { OauthConfigService } from '../oauth-configs/oauth-configs.service';\n\ninterface UserInfoResponse {\n  sub: string;\n  email_verified: boolean;\n  name: string;\n  preferred_username: string;\n  given_name: string;\n  family_name: string;\n  email: string;\n}\n\n/**\n * This class is a Passport strategy that validates a JWT from an OAuth2 provider.\n */\n@Injectable()\nexport class JwtOauthStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private readonly jwtService: JwtService,\n    private readonly httpService: HttpService,\n    private readonly oauthConfigService: OauthConfigService,\n  ) {\n    super();\n  }\n\n  async getWellKnown(iss: string): Promise {\n    try {\n      const wellKnown = await firstValueFrom(\n        this.httpService.get(iss + '/.well-known/openid-configuration'),\n      );\n      return wellKnown.data;\n    } catch (error) {\n      throw new UnauthorizedException('Invalid token');\n    }\n  }\n\n  async validateIssuer(wellKnown: object): Promise {\n    const authorizationUrl = wellKnown['authorization_endpoint'];\n    const config =\n      await this.oauthConfigService.findOneByAuthorizationUrl(authorizationUrl);\n    return !!config;\n  }\n\n  async getUserInfoUrl(wellKnown: object): Promise {\n    return wellKnown['userinfo_endpoint'];\n  }\n\n  async verifyToken(token: string): Promise {\n    const decoded = await this.jwtService.decode(token);\n    const wellKnown = await this.getWellKnown(decoded.iss);\n    const url = await this.getUserInfoUrl(wellKnown);\n\n    if (!(await this.validateIssuer(wellKnown))) {\n      throw new UnauthorizedException('Unknown issuer');\n    }\n\n    try {\n      const response = await firstValueFrom(\n        this.httpService.get(url, {\n          headers: {\n            authorization: `Bearer ${token}`,\n          },\n        }),\n      );\n      return {\n        email: response.data.email,\n        firstname: response.data.given_name,\n        lastname: response.data.family_name,\n      };\n    } catch (error) {\n      throw new UnauthorizedException('Invalid token');\n    }\n  }\n\n  async validate(token: string): Promise {\n    const userData = await this.verifyToken(token);\n    if (!userData || !userData.email) {\n      throw new UnauthorizedException('Invalid token');\n    }\n    return userData;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n            \n                Description\n            \n            \n                This class is a Passport strategy that validates a local JWT.\n\n            \n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt.strategy.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\n/**\n * This class is a Passport strategy that validates a local JWT.\n */\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly configService: ConfigService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get('JWT_SECRET'),\n    });\n  }\n\n  async validate(payload: any) {\n    return {\n      userId: payload.sub,\n      email: payload.email,\n      role: payload.role,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Label.html":{"url":"entities/Label.html","title":"entity - Label","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Label\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/labels/label.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Name\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                Roles\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'name'})@PrimaryColumn({name: 'name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/labels/label.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, required: false, default: undefined})@ManyToMany(undefined, role => role.Labels)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/labels/label.entity.ts:13\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Role } from '../roles/role.entity';\nimport { Entity, JoinTable, ManyToMany, PrimaryColumn } from 'typeorm';\n\n@Entity()\nexport class Label {\n  @ApiProperty({ example: 'name' })\n  @PrimaryColumn({ name: 'name' })\n  Name: string;\n\n  @ApiProperty({ example: [], required: false, default: [] })\n  @ManyToMany(() => Role, (role) => role.Labels)\n  Roles?: Role[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LabelDto.html":{"url":"classes/LabelDto.html","title":"class - LabelDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LabelDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/labels/labels.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'name'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/labels/labels.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class LabelDto {\n  @ApiProperty({ example: 'name' })\n  @IsString()\n  Name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LabelsController.html":{"url":"controllers/LabelsController.html","title":"controller - LabelsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LabelsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/labels/labels.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /labels\n            \n\n\n            \n                Description\n            \n            \n                Controller for the labels related APIs.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findAllLAbelForRole\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(labelDto: LabelDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 201, description: 'Create label'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/labels/labels.controller.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                labelDto\n                                            \n                                                            LabelDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all labels', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(undefined)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/labels/labels.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findAllLAbelForRole\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllLAbelForRole(labelName: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all labels for a specific role', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Get(':labelName/roles')\n                \n            \n\n                    \n                        \n                            Defined in src/labels/labels.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                labelName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(labelName: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'remove label'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Delete('/:labelName')\n                \n            \n\n                    \n                        \n                            Defined in src/labels/labels.controller.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                labelName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Post,\n  Delete,\n  Param,\n  ConflictException,\n  UseGuards,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiResponse, ApiTags } from '@nestjs/swagger';\n\nimport { LabelsService } from './labels.service';\nimport { AdminGuard, ReadAllGuard } from '../guards/roles.guard';\nimport { LabelDto } from './labels.dto';\nimport { OrGuard } from '../guards/or.guard';\n\n/**\n * Controller for the labels related APIs.\n */\n@ApiTags('labels')\n@Controller('/labels')\nexport class LabelsController {\n  constructor(private readonly LabelsService: LabelsService) {}\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Get all labels', type: [String] })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(OrGuard([AdminGuard, ReadAllGuard]))\n  @Get()\n  async findAll(): Promise {\n    const allLabels = await this.LabelsService.findAll();\n    return allLabels.map((label) => label.Name);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'Get all labels for a specific role',\n    type: [String],\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Get(':labelName/roles')\n  async findAllLAbelForRole(\n    @Param('labelName') labelName: string,\n  ): Promise {\n    return (await this.LabelsService.findAllRolesForLabel(labelName)).map(\n      (role) => role.Name,\n    );\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'remove label' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Delete('/:labelName')\n  async remove(@Param('labelName') labelName: string): Promise {\n    await this.LabelsService.findOneByOrFail(labelName);\n    return this.LabelsService.remove(labelName);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 201, description: 'Create label' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Post()\n  async create(@Body() labelDto: LabelDto): Promise {\n    if (await this.LabelsService.isLabelExist(labelDto.Name))\n      throw new ConflictException('Label with this name already exists');\n    return this.LabelsService.create(labelDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LabelsModule.html":{"url":"modules/LabelsModule.html","title":"module - LabelsModule","body":"\n                   \n\n\n\n\n    Modules\n    LabelsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LabelsModule\n\n\n\ncluster_LabelsModule_providers\n\n\n\n\nLabelsService\n\nLabelsService\n\n\n\nLabelsModule\n\nLabelsModule\n\nLabelsModule -->\n\nLabelsService->LabelsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/labels/labels.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LabelsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LabelsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { LabelsService } from './labels.service';\nimport { LabelsController } from './labels.controller';\nimport { Label } from './label.entity';\nimport { Role } from '../roles/role.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Label, Role])],\n  providers: [LabelsService],\n  controllers: [LabelsController],\n})\nexport class LabelsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LabelsService.html":{"url":"injectables/LabelsService.html","title":"injectable - LabelsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LabelsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/labels/labels.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Database access to label related data.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findAllRolesForLabel\n                            \n                            \n                                    Async\n                                findOneByOrFail\n                            \n                            \n                                    Async\n                                isLabelExist\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(labelsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/labels/labels.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        labelsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(label: Label)\n                \n            \n\n\n                    \n                        \n                            Defined in src/labels/labels.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                label\n                                            \n                                                            Label\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/labels/labels.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllRolesForLabel\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllRolesForLabel(labelName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/labels/labels.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                labelName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByOrFail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByOrFail(labelName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/labels/labels.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                labelName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        isLabelExist\n                        \n                    \n                \n            \n            \n                \n                        \n                    isLabelExist(labelName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/labels/labels.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                labelName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(labelName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/labels/labels.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                labelName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { Label } from './label.entity';\nimport { Role } from '../roles/role.entity';\n\n/**\n * Database access to label related data.\n */\n@Injectable()\nexport class LabelsService {\n  constructor(\n    @InjectRepository(Label)\n    private labelsRepository: Repository,\n  ) {}\n\n  async findAll(): Promise {\n    return this.labelsRepository.find();\n  }\n\n  async findAllRolesForLabel(labelName: string): Promise {\n    return (\n      await this.labelsRepository.findOneOrFail({\n        where: { Name: labelName },\n        relations: ['Roles'],\n      })\n    ).Roles;\n  }\n\n  async findOneByOrFail(labelName: string): Promise {\n    return await this.labelsRepository.findOneByOrFail({ Name: labelName });\n  }\n\n  async isLabelExist(labelName: string): Promise {\n    const answser = await this.labelsRepository.findOneBy({ Name: labelName });\n    return answser !== null;\n  }\n\n  async remove(labelName: string): Promise {\n    await this.labelsRepository.delete(labelName);\n  }\n\n  async create(label: Label): Promise {\n    await this.labelsRepository.save(label);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guards/local.guard.ts\n        \n\n\n            \n                Description\n            \n            \n                Guard extanding looal Strategy (validation of password in the database)\n\n            \n\n            \n                Extends\n            \n            \n                        AuthGuard('local')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n/**\n * Guard extanding looal Strategy (validation of password in the database)\n */\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local.strategy.ts\n        \n\n\n            \n                Description\n            \n            \n                This class is a Passport strategy that validates a local user with email and a password.\n\n            \n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/local.strategy.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/local.strategy.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy } from 'passport-local';\n\nimport { AuthService } from './auth.service';\n\n/**\n * This class is a Passport strategy that validates a local user with email and a password.\n */\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super({\n      usernameField: 'Email',\n      passwordField: 'Password',\n    });\n  }\n\n  async validate(email: string, password: string): Promise {\n    const user = await this.authService.validateUser(email, password);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Email\n                            \n                            \n                                    \n                                    \n                                Password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'administrator@gaelo.fr'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'administrator'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class LoginDto {\n  @ApiProperty({ example: 'administrator@gaelo.fr' })\n  @IsNotEmpty()\n  Email: string;\n\n  @ApiProperty({ example: 'administrator' })\n  @IsNotEmpty()\n  Password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LostPassworDto.html":{"url":"classes/LostPassworDto.html","title":"class - LostPassworDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LostPassworDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/lost-password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'user1@mail.com'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/lost-password.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class LostPassworDto {\n  @ApiProperty({ example: 'user1@mail.com' })\n  @IsNotEmpty()\n  Email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { join } from 'path';\n\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { HandlebarsAdapter } from '@nestjs-modules/mailer/dist/adapters/handlebars.adapter';\nimport { Global, Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\n\n@Global()\n@Module({\n  imports: [\n    MailerModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (config: ConfigService) => ({\n        transport: {\n          host: config.get('MAIL_HOST'),\n          port: config.get('MAIL_PORT'),\n          secure: config.get('MAIL_ENCRYPTION', false) === 'tls',\n          auth: {\n            user: config.get('MAIL_USER'),\n            pass: config.get('MAIL_PASSWORD'),\n          },\n        },\n        defaults: {\n          from: `\"No Reply\" `,\n        },\n        template: {\n          dir: join(__dirname, './templates'),\n          adapter: new HandlebarsAdapter(),\n          options: {\n            strict: true,\n          },\n        },\n      }),\n    }),\n  ],\n  exports: [MailerModule],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendChangePasswordEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailerService: MailerService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/mail/mail.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailerService\n                                                  \n                                                        \n                                                                    MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendChangePasswordEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendChangePasswordEmail(email: string, token: string, userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/mail.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { MailerService } from '@nestjs-modules/mailer';\n\n@Injectable()\nexport class MailService {\n  constructor(\n    private mailerService: MailerService,\n    private configService: ConfigService,\n  ) {}\n\n  async sendChangePasswordEmail(\n    email: string,\n    token: string,\n    userId: number,\n  ): Promise {\n    const changePasswordUrl = `${this.configService.get('APP_URL')}/change-password?token=${token}&userId=${userId}`;\n    await this.mailerService.sendMail({\n      from: '\"GaelO-Flow\" ',\n      to: email,\n      subject: 'Change your password',\n      html: `Follow this link to set your password : ${changePasswordUrl}`,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MaskProcessingService.html":{"url":"injectables/MaskProcessingService.html","title":"injectable - MaskProcessingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MaskProcessingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/processing/mask-processing.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service class to handle mask processing.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                maskId\n                            \n                            \n                                    Private\n                                petId\n                            \n                            \n                                    Private\n                                petSeriesOrthancId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                fragmentMask\n                            \n                            \n                                    Async\n                                getMaskAs\n                            \n                            \n                                getMaskId\n                            \n                            \n                                    Async\n                                getStatOfMask\n                            \n                            \n                                setMaskId\n                            \n                            \n                                setPetId\n                            \n                            \n                                    Async\n                                thresholdMaskTo41\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(processingService: ProcessingClient)\n                    \n                \n                        \n                            \n                                Defined in src/processing/mask-processing.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        processingService\n                                                  \n                                                        \n                                                                        ProcessingClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fragmentMask\n                        \n                    \n                \n            \n            \n                \n                        \n                    fragmentMask()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/mask-processing.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getMaskAs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMaskAs(type: ProcessingMask, orientation: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/mask-processing.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                            ProcessingMask\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                orientation\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMaskId\n                        \n                    \n                \n            \n            \n                \ngetMaskId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/mask-processing.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getStatOfMask\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStatOfMask()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/mask-processing.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setMaskId\n                        \n                    \n                \n            \n            \n                \nsetMaskId(maskId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/mask-processing.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                maskId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPetId\n                        \n                    \n                \n            \n            \n                \nsetPetId(petId: string, petSeriesOrthancId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/mask-processing.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                petId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                petSeriesOrthancId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        thresholdMaskTo41\n                        \n                    \n                \n            \n            \n                \n                        \n                    thresholdMaskTo41()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/mask-processing.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        maskId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/mask-processing.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        petId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/mask-processing.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        petSeriesOrthancId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/mask-processing.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ProcessingMask } from '../constants/enums';\nimport ProcessingClient from '../utils/processing.client';\n/**\n * Service class to handle mask processing.\n */\n@Injectable()\nexport class MaskProcessingService {\n  private maskId: string;\n  private petId: string;\n  private petSeriesOrthancId: string;\n\n  constructor(private readonly processingService: ProcessingClient) {}\n\n  setMaskId(maskId: string): void {\n    this.maskId = maskId;\n  }\n\n  getMaskId(): string {\n    return this.maskId;\n  }\n\n  setPetId(petId: string, petSeriesOrthancId: string): void {\n    this.petId = petId;\n    this.petSeriesOrthancId = petSeriesOrthancId;\n  }\n\n  async getMaskAs(\n    type: ProcessingMask,\n    orientation: string = null,\n  ): Promise {\n    switch (type) {\n      case ProcessingMask.NIFTI:\n        return await this.processingService.getMaskDicomOrientation(\n          this.maskId,\n          orientation,\n          true,\n        );\n      case ProcessingMask.RTSS:\n        const rtssId = await this.processingService.createRtssFromMask(\n          this.petSeriesOrthancId,\n          this.maskId,\n        );\n        const rtssBuffer = await this.processingService.getRtss(rtssId);\n        await this.processingService.deleteRessource('rtss', rtssId);\n        return rtssBuffer;\n      case ProcessingMask.SEG:\n        const segId = await this.processingService.createSegFromMask(\n          this.petSeriesOrthancId,\n          this.maskId,\n        );\n        const segBuffer = await this.processingService.getSeg(segId);\n        await this.processingService.deleteRessource('seg', segId);\n        return segBuffer;\n      default:\n        throw new Error('Invalid mask type');\n    }\n  }\n\n  async getStatOfMask(): Promise {\n    return await this.processingService.getStatsMaskSeries(\n      this.maskId,\n      this.petId,\n    );\n  }\n\n  async fragmentMask(): Promise {\n    const fragmentedMaskId = await this.processingService.fragmentMask(\n      this.petId,\n      this.maskId,\n      true,\n    );\n    const fragmentedMask = new MaskProcessingService(this.processingService);\n    fragmentedMask.setMaskId(fragmentedMaskId);\n    fragmentedMask.setPetId(this.petId, this.petSeriesOrthancId);\n    return fragmentedMask;\n  }\n\n  async thresholdMaskTo41(): Promise {\n    const thresholdedMaskId = await this.processingService.thresholdMask(\n      this.maskId,\n      this.petId,\n      '41%',\n    );\n    const thresholdedMask = new MaskProcessingService(this.processingService);\n    thresholdedMask.setMaskId(thresholdedMaskId);\n    thresholdedMask.setPetId(this.petId, this.petSeriesOrthancId);\n    return thresholdedMask;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ModifyGuard.html":{"url":"guards/ModifyGuard.html","title":"guard - ModifyGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    ModifyGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard cheking user has modify permission\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n/**\n * Guard cheking user has import permission\n */\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n/**\n * Guard cheking user has anonymize permission\n */\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n/**\n * Guard cheking user has export permission\n */\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n/**\n * Guard cheking user has query permission\n */\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n/**\n * Guard cheking user has autoquery permission\n */\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n/**\n * Guard cheking user has delete permission\n */\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n/**\n * Guard cheking user has admin permission\n */\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n/**\n * Guard cheking user has modify permission\n */\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n/**\n * Guard cheking user has cdBurner permission\n */\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n/**\n * Guard cheking user has autorouting permission\n */\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n/**\n * Guard cheking user has readall permission\n */\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotFoundInterceptor.html":{"url":"injectables/NotFoundInterceptor.html","title":"injectable - NotFoundInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotFoundInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptors/not-found.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                This class is an interceptor that catches EntityNotFoundError exceptions and throws a HTTP NotFoundException instead.\nThis interceptor is registered globally in the main module.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/interceptors/not-found.interceptor.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  NotFoundException,\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Observable, catchError } from 'rxjs';\nimport { EntityNotFoundError } from 'typeorm';\n\n/**\n * This class is an interceptor that catches EntityNotFoundError exceptions and throws a HTTP NotFoundException instead.\n * This interceptor is registered globally in the main module.\n */\n@Injectable()\nexport class NotFoundInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    return next.handle().pipe(\n      catchError((error) => {\n        if (error instanceof EntityNotFoundError) {\n          throw new NotFoundException(error.message);\n        } else {\n          throw error;\n        }\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OauthConfig.html":{"url":"entities/OauthConfig.html","title":"entity - OauthConfig","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OauthConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/oauth-configs/oauth-config.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                AuthorizationUrl\n                            \n                            \n                                    \n                                    \n                                ClientId\n                            \n                            \n                                    \n                                    \n                                Name\n                            \n                            \n                                    \n                                    \n                                Provider\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AuthorizationUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'http://localhost:8080/realms/master/protocol/openid-connect/auth'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/oauth-configs/oauth-config.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ClientId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'back-end'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/oauth-configs/oauth-config.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'keycloak'})@PrimaryColumn({name: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/oauth-configs/oauth-config.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Provider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'keycloak'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/oauth-configs/oauth-config.entity.ts:12\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Entity, Column, PrimaryColumn } from 'typeorm';\n\n@Entity()\nexport class OauthConfig {\n  @ApiProperty({ example: 'keycloak' })\n  @PrimaryColumn({ name: 'id' })\n  Name: string;\n\n  @ApiProperty({ example: 'keycloak' })\n  @Column()\n  Provider: string;\n\n  @ApiProperty({\n    example: 'http://localhost:8080/realms/master/protocol/openid-connect/auth',\n  })\n  @Column()\n  AuthorizationUrl: string;\n\n  @ApiProperty({ example: 'back-end' })\n  @Column()\n  ClientId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OauthConfigController.html":{"url":"controllers/OauthConfigController.html","title":"controller - OauthConfigController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OauthConfigController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/oauth-configs/oauth-configs.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                oauth-config\n            \n\n\n            \n                Description\n            \n            \n                Controller for the oauth config related APIs.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                addOauthConfig\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                deleteOauthConfig\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getOauthConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        addOauthConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    addOauthConfig(oauthConfigDto: OauthConfigDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 201, description: 'Oauth config added'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 409, description: 'Oauth config already exists'})@ApiBearerAuth('access-token')@ApiBody({type: OauthConfigDto})@UseGuards(AdminGuard)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/oauth-configs/oauth-configs.controller.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                oauthConfigDto\n                                            \n                                                            OauthConfigDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        deleteOauthConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteOauthConfig(name: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, description: 'Oauth config deleted'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 404, description: 'Oauth config not found'})@ApiBearerAuth('access-token')@ApiParam({name: 'name', required: true})@UseGuards(AdminGuard)@Delete(':name')\n                \n            \n\n                    \n                        \n                            Defined in src/oauth-configs/oauth-configs.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        getOauthConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOauthConfig()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, description: 'Oauth config returned', type: OauthConfigDto, isArray: true})@Public()@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/oauth-configs/oauth-configs.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  Controller,\n  Delete,\n  Get,\n  NotFoundException,\n  Param,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiBody,\n  ApiParam,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\n\nimport { Public } from '../interceptors/public';\nimport { OauthConfigService } from './oauth-configs.service';\nimport { AdminGuard } from '../guards/roles.guard';\nimport { OauthConfigDto } from './oauth-config.dto';\n\n/**\n * Controller for the oauth config related APIs.\n */\n@ApiTags('oauth-config')\n@Controller('oauth-config')\nexport class OauthConfigController {\n  constructor(private readonly oauthConfigService: OauthConfigService) {}\n\n  @ApiResponse({\n    status: 200,\n    description: 'Oauth config returned',\n    type: OauthConfigDto,\n    isArray: true,\n  })\n  @Public()\n  @Get()\n  async getOauthConfig(): Promise {\n    return await this.oauthConfigService.getOauthConfig();\n  }\n\n  @ApiResponse({ status: 200, description: 'Oauth config deleted' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 404, description: 'Oauth config not found' })\n  @ApiBearerAuth('access-token')\n  @ApiParam({ name: 'name', required: true })\n  @UseGuards(AdminGuard)\n  @Delete(':name')\n  async deleteOauthConfig(@Param('name') name: string) {\n    const config = await this.oauthConfigService.findOneByName(name);\n    if (!config) throw new NotFoundException('Oauth config not found');\n\n    return this.oauthConfigService.deleteOauthConfig(name);\n  }\n\n  @ApiResponse({ status: 201, description: 'Oauth config added' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 409, description: 'Oauth config already exists' })\n  @ApiBearerAuth('access-token')\n  @ApiBody({ type: OauthConfigDto })\n  @UseGuards(AdminGuard)\n  @Post()\n  async addOauthConfig(@Body() oauthConfigDto: OauthConfigDto) {\n    const exists = await this.oauthConfigService.findOneByName(\n      oauthConfigDto.Name,\n    );\n    if (exists) throw new ConflictException('Oauth config already exists');\n\n    return this.oauthConfigService.addOauthConfig(oauthConfigDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OauthConfigDto.html":{"url":"classes/OauthConfigDto.html","title":"class - OauthConfigDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OauthConfigDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/oauth-configs/oauth-config.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                AuthorizationUrl\n                            \n                            \n                                    \n                                    \n                                ClientId\n                            \n                            \n                                    \n                                    \n                                Name\n                            \n                            \n                                    \n                                    \n                                Provider\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AuthorizationUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/oauth-configs/oauth-config.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ClientId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/oauth-configs/oauth-config.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/oauth-configs/oauth-config.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Provider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/oauth-configs/oauth-config.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class OauthConfigDto {\n  @ApiProperty()\n  @IsString()\n  Name: string;\n\n  @ApiProperty()\n  @IsString()\n  Provider: string;\n\n  @ApiProperty()\n  @IsString()\n  AuthorizationUrl: string;\n\n  @ApiProperty()\n  @IsString()\n  ClientId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OauthConfigModule.html":{"url":"modules/OauthConfigModule.html","title":"module - OauthConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    OauthConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OauthConfigModule\n\n\n\ncluster_OauthConfigModule_providers\n\n\n\n\nOauthConfigService\n\nOauthConfigService\n\n\n\nOauthConfigModule\n\nOauthConfigModule\n\nOauthConfigModule -->\n\nOauthConfigService->OauthConfigModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/oauth-configs/oauth-configs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OauthConfigService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OauthConfigController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { OauthConfigService } from './oauth-configs.service';\nimport { OauthConfigController } from './oauth-configs.controller';\nimport { OauthConfig } from './oauth-config.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([OauthConfig])],\n  providers: [OauthConfigService],\n  controllers: [OauthConfigController],\n})\nexport class OauthConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OauthConfigService.html":{"url":"injectables/OauthConfigService.html","title":"injectable - OauthConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OauthConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/oauth-configs/oauth-configs.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Database access to oauth config related data.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                addOauthConfig\n                            \n                            \n                                    Public\n                                    Async\n                                deleteOauthConfig\n                            \n                            \n                                    Public\n                                    Async\n                                findOneByAuthorizationUrl\n                            \n                            \n                                    Public\n                                    Async\n                                findOneByName\n                            \n                            \n                                    Public\n                                    Async\n                                getOauthConfig\n                            \n                            \n                                    Public\n                                    Async\n                                seed\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(oauthConfigsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/oauth-configs/oauth-configs.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        oauthConfigsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        addOauthConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    addOauthConfig(oauthConfigDto: OauthConfigDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/oauth-configs/oauth-configs.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                oauthConfigDto\n                                            \n                                                            OauthConfigDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        deleteOauthConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteOauthConfig(Name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/oauth-configs/oauth-configs.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                Name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOneByAuthorizationUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByAuthorizationUrl(AuthorizationUrl: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/oauth-configs/oauth-configs.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                AuthorizationUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOneByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByName(Name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/oauth-configs/oauth-configs.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                Name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getOauthConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOauthConfig()\n                \n            \n\n\n                    \n                        \n                            Defined in src/oauth-configs/oauth-configs.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        seed\n                        \n                    \n                \n            \n            \n                \n                        \n                    seed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/oauth-configs/oauth-configs.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { OauthConfig } from './oauth-config.entity';\nimport { OauthConfigDto } from './oauth-config.dto';\n\n/**\n * Database access to oauth config related data.\n */\n@Injectable()\nexport class OauthConfigService {\n  constructor(\n    @InjectRepository(OauthConfig)\n    private oauthConfigsRepository: Repository,\n  ) {}\n\n  public async findOneByName(Name: string): Promise {\n    const config = await this.oauthConfigsRepository.findOne({\n      where: { Name },\n    });\n    return config;\n  }\n\n  public async findOneByAuthorizationUrl(\n    AuthorizationUrl: string,\n  ): Promise {\n    const config = await this.oauthConfigsRepository.findOne({\n      where: { AuthorizationUrl },\n    });\n    return config;\n  }\n\n  public async getOauthConfig(): Promise {\n    return await this.oauthConfigsRepository.find();\n  }\n\n  public async deleteOauthConfig(Name: string) {\n    await this.oauthConfigsRepository.delete({ Name });\n  }\n\n  public async addOauthConfig(oauthConfigDto: OauthConfigDto) {\n    const config = this.oauthConfigsRepository.create(oauthConfigDto);\n\n    await this.oauthConfigsRepository.insert(config);\n  }\n\n  /* istanbul ignore next */\n  public async seed() {\n    const option = this.oauthConfigsRepository.create({\n      Name: 'keycloak',\n      Provider: 'keycloak',\n      AuthorizationUrl:\n        'http://localhost:8080/realms/master/protocol/openid-connect/auth',\n      ClientId: 'back-end',\n    });\n    await this.oauthConfigsRepository.insert(option);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Option.html":{"url":"entities/Option.html","title":"entity - Option","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Option\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/options/option.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                AutoQueryHourStart\n                            \n                            \n                                    \n                                    \n                                AutoQueryHourStop\n                            \n                            \n                                    \n                                    \n                                AutoQueryMinuteStart\n                            \n                            \n                                    \n                                    \n                                AutoQueryMinuteStop\n                            \n                            \n                                    \n                                    \n                                AutorouterStarted\n                            \n                            \n                                    \n                                    \n                                BurnerDateFormat\n                            \n                            \n                                    \n                                    \n                                BurnerDeleteStudyAfterSent\n                            \n                            \n                                    \n                                    \n                                BurnerLabelPath\n                            \n                            \n                                    \n                                    \n                                BurnerManifacturer\n                            \n                            \n                                    \n                                    \n                                BurnerMonitoredPath\n                            \n                            \n                                    \n                                    \n                                BurnerMonitoringLevel\n                            \n                            \n                                    \n                                    \n                                BurnerStarted\n                            \n                            \n                                    \n                                    \n                                BurnerSupportType\n                            \n                            \n                                    \n                                    \n                                BurnerTranscoding\n                            \n                            \n                                    \n                                    \n                                BurnerTransferSyntax\n                            \n                            \n                                    \n                                    \n                                BurnerViewerPath\n                            \n                            \n                                    \n                                    \n                                    \n                                Id\n                            \n                            \n                                    \n                                    \n                                OrthancMonitoringRate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQueryHourStart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 22})@Column({name: 'auto_query_hour_start'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQueryHourStop\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 6})@Column({name: 'auto_query_hour_stop'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQueryMinuteStart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 0})@Column({name: 'auto_query_minute_start'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQueryMinuteStop\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 0})@Column({name: 'auto_query_minute_stop'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutorouterStarted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: false, required: false, default: false})@Column({default: false, name: 'autorouter_started'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerDateFormat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'uk', required: false, default: 'uk'})@Column({default: 'uk', name: 'burner_date_format'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerDeleteStudyAfterSent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: false, required: false, default: false})@Column({default: false, name: 'burner_delete_study_after_sent'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerLabelPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '', required: false, default: ''})@Column({default: '', name: 'burner_label_path'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerManifacturer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Epson', required: false, default: 'Epson'})@Column({default: 'Epson', name: 'burner_manifacturer'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerMonitoredPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '', required: false, default: ''})@Column({default: '', name: 'burner_monitored_path'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerMonitoringLevel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Study', required: false, default: 'Study'})@Column({default: 'Study', name: 'burner_monitoring_level'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerStarted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: false, required: false})@Column({default: false, name: 'burner_started'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerSupportType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Auto', required: false, default: 'Auto'})@Column({default: 'Auto', name: 'burner_support_type'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerTranscoding\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'None', required: false, default: 'None'})@Column({default: 'None', name: 'burner_transcoding'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerTransferSyntax\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'None', required: false, default: 'None'})@Column({default: 'None', name: 'burner_transfer_syntax'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BurnerViewerPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '', required: false, default: ''})@Column({default: '', name: 'burner_viewer_path'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 1})@PrimaryGeneratedColumn({name: 'id'})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        OrthancMonitoringRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 10, required: false})@Column({default: 10, name: 'orthanc_monitoring_rate'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/options/option.entity.ts:30\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude } from 'class-transformer';\nimport { Entity, Column, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class Option {\n  @ApiProperty({ example: 1 })\n  @PrimaryGeneratedColumn({ name: 'id' })\n  @Exclude()\n  Id: number;\n\n  @ApiProperty({ example: 22 })\n  @Column({ name: 'auto_query_hour_start' })\n  AutoQueryHourStart: number;\n\n  @ApiProperty({ example: 0 })\n  @Column({ name: 'auto_query_minute_start' })\n  AutoQueryMinuteStart: number;\n\n  @ApiProperty({ example: 6 })\n  @Column({ name: 'auto_query_hour_stop' })\n  AutoQueryHourStop: number;\n\n  @ApiProperty({ example: 0 })\n  @Column({ name: 'auto_query_minute_stop' })\n  AutoQueryMinuteStop: number;\n\n  @ApiProperty({ example: 10, required: false })\n  @Column({ default: 10, name: 'orthanc_monitoring_rate' })\n  OrthancMonitoringRate: number;\n\n  @ApiProperty({ example: false, required: false })\n  @Column({ default: false, name: 'burner_started' })\n  BurnerStarted: boolean;\n\n  @ApiProperty({ example: '', required: false, default: '' })\n  @Column({ default: '', name: 'burner_label_path' })\n  BurnerLabelPath: string;\n\n  @ApiProperty({ example: 'Study', required: false, default: 'Study' })\n  @Column({ default: 'Study', name: 'burner_monitoring_level' })\n  BurnerMonitoringLevel: string;\n\n  @ApiProperty({ example: 'Epson', required: false, default: 'Epson' })\n  @Column({ default: 'Epson', name: 'burner_manifacturer' })\n  BurnerManifacturer: string;\n\n  @ApiProperty({ example: '', required: false, default: '' })\n  @Column({ default: '', name: 'burner_monitored_path' })\n  BurnerMonitoredPath: string;\n\n  @ApiProperty({ example: false, required: false, default: false })\n  @Column({ default: false, name: 'burner_delete_study_after_sent' })\n  BurnerDeleteStudyAfterSent: boolean;\n\n  @ApiProperty({ example: 'Auto', required: false, default: 'Auto' })\n  @Column({ default: 'Auto', name: 'burner_support_type' })\n  BurnerSupportType: string;\n\n  @ApiProperty({ example: '', required: false, default: '' })\n  @Column({ default: '', name: 'burner_viewer_path' })\n  BurnerViewerPath: string;\n\n  @ApiProperty({ example: 'None', required: false, default: 'None' })\n  @Column({ default: 'None', name: 'burner_transfer_syntax' })\n  BurnerTransferSyntax: string;\n\n  @ApiProperty({ example: 'uk', required: false, default: 'uk' })\n  @Column({ default: 'uk', name: 'burner_date_format' })\n  BurnerDateFormat: string;\n\n  @ApiProperty({ example: 'None', required: false, default: 'None' })\n  @Column({ default: 'None', name: 'burner_transcoding' })\n  BurnerTranscoding: string;\n\n  @ApiProperty({ example: false, required: false, default: false })\n  @Column({ default: false, name: 'autorouter_started' })\n  AutorouterStarted: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OptionsController.html":{"url":"controllers/OptionsController.html","title":"controller - OptionsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OptionsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/options/options.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /options\n            \n\n\n            \n                Description\n            \n            \n                Controller for the options related APIs.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getOptions\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getOptions\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOptions()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all options', type: GetOptionDto})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/options/options.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(options: UpdateOptionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Update options', type: UpdateOptionDto})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Patch()\n                \n            \n\n                    \n                        \n                            Defined in src/options/options.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            UpdateOptionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Patch, UseGuards } from '@nestjs/common';\nimport { ApiBearerAuth, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { ConfigService } from '@nestjs/config';\n\nimport { OptionsService } from './options.service';\nimport { UpdateOptionDto } from './dto/update-option.dto';\n\nimport { AdminGuard } from '../guards/roles.guard';\nimport { GetOptionDto } from './dto/get-option.dto';\n/**\n * Controller for the options related APIs.\n */\n@ApiTags('options')\n@Controller('/options')\nexport class OptionsController {\n  constructor(\n    private readonly optionService: OptionsService,\n    private readonly configService: ConfigService,\n  ) {}\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'Get all options',\n    type: GetOptionDto,\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Get()\n  async getOptions(): Promise {\n    const { Id, ...options } = await this.optionService.getOptions();\n    const getOptionDto: GetOptionDto = {\n      ...options,\n      OrthancAddress: this.configService.get('ORTHANC_ADDRESS'),\n      OrthancUsername: this.configService.get('ORTHANC_USERNAME'),\n      OrthancPassword: this.configService.get('ORTHANC_PASSWORD'),\n      RedisAddress: this.configService.get('REDIS_ADDRESS'),\n      RedisPort: this.configService.get('REDIS_PORT'),\n    };\n\n    return getOptionDto;\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'Update options',\n    type: UpdateOptionDto,\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Patch()\n  async update(@Body() options: UpdateOptionDto): Promise {\n    return await this.optionService.update(options);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OptionsModule.html":{"url":"modules/OptionsModule.html","title":"module - OptionsModule","body":"\n                   \n\n\n\n\n    Modules\n    OptionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OptionsModule\n\n\n\ncluster_OptionsModule_providers\n\n\n\n\nOptionsService\n\nOptionsService\n\n\n\nOptionsModule\n\nOptionsModule\n\nOptionsModule -->\n\nOptionsService->OptionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/options/options.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OptionsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OptionsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { OptionsService } from './options.service';\nimport { OptionsController } from './options.controller';\nimport { Option } from './option.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Option])],\n  providers: [OptionsService, ConfigService],\n  controllers: [OptionsController],\n})\nexport class OptionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OptionsService.html":{"url":"injectables/OptionsService.html","title":"injectable - OptionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OptionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/options/options.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Database access to options related data. The option table, contains only one record.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getOptions\n                            \n                            \n                                    Public\n                                    Async\n                                seed\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(optionsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/options/options.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        optionsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getOptions\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOptions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/options/options.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        seed\n                        \n                    \n                \n            \n            \n                \n                        \n                    seed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/options/options.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(option: UpdateOptionDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/options/options.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                option\n                                            \n                                                            UpdateOptionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { Option } from './option.entity';\nimport { UpdateOptionDto } from './dto/update-option.dto';\n/**\n * Database access to options related data. The option table, contains only one record.\n */\n@Injectable()\nexport class OptionsService {\n  constructor(\n    @InjectRepository(Option)\n    private optionsRepository: Repository,\n  ) {}\n\n  async getOptions(): Promise {\n    return await this.optionsRepository.findOneByOrFail({ Id: 1 });\n  }\n\n  async update(option: UpdateOptionDto): Promise {\n    await this.optionsRepository.update(1, option);\n  }\n\n  /* istanbul ignore next */\n  public async seed() {\n    const option = this.optionsRepository.create({\n      AutoQueryHourStart: 22,\n      AutoQueryMinuteStart: 0,\n      AutoQueryHourStop: 6,\n      AutoQueryMinuteStop: 0,\n    });\n    await this.optionsRepository.insert(option);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrGuardOptions.html":{"url":"interfaces/OrGuardOptions.html","title":"interface - OrGuardOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrGuardOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guards/or.guard.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            throwOnFirstError\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        throwOnFirstError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        throwOnFirstError:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  CanActivate,\n  ExecutionContext,\n  Inject,\n  InjectionToken,\n  mixin,\n  Type,\n} from '@nestjs/common';\nimport { ModuleRef } from '@nestjs/core';\nimport {\n  defer,\n  from,\n  Observable,\n  of,\n  OperatorFunction,\n  throwError,\n} from 'rxjs';\nimport { catchError, last, mergeMap, takeWhile } from 'rxjs/operators';\n\ninterface OrGuardOptions {\n  throwOnFirstError?: boolean;\n}\n\n/**\n * Guard testing an array of guards, activate at the first guard activation granted\n * @param guards Array of guards to be tested\n * @param orGuardOptions {throwOnFirstError : optional}\n * @returns Guard\n */\nexport function OrGuard(\n  guards: Array | InjectionToken>,\n  orGuardOptions?: OrGuardOptions,\n) {\n  class OrMixinGuard implements CanActivate {\n    public guards: CanActivate[] = [];\n    constructor(@Inject(ModuleRef) private readonly modRef: ModuleRef) {}\n\n    //For testing purposes only\n    __getGuards = () => guards;\n\n    canActivate(context: ExecutionContext): Observable {\n      this.guards = guards.map((guard) =>\n        this.modRef.get(guard, { strict: false }),\n      );\n      const canActivateReturns: Array> = this.guards.map(\n        (guard) => this.deferGuard(guard, context),\n      );\n      return from(canActivateReturns).pipe(\n        mergeMap((obs) => {\n          return obs.pipe(this.handleError());\n        }),\n        takeWhile((val) => val === false, true),\n        last(),\n      );\n    }\n\n    private deferGuard(\n      guard: CanActivate,\n      context: ExecutionContext,\n    ): Observable {\n      return defer(() => {\n        const guardVal = guard.canActivate(context);\n        if (this.guardIsPromise(guardVal)) {\n          return from(guardVal);\n        }\n        if (this.guardIsObservable(guardVal)) {\n          return guardVal;\n        }\n        return of(guardVal);\n      });\n    }\n\n    private handleError(): OperatorFunction {\n      return catchError((err) => {\n        if (orGuardOptions?.throwOnFirstError) {\n          return throwError(() => err);\n        }\n        return of(false);\n      });\n    }\n\n    private guardIsPromise(\n      guard: boolean | Promise | Observable,\n    ): guard is Promise {\n      return !!(guard as Promise).then;\n    }\n\n    private guardIsObservable(\n      guard: boolean | Observable,\n    ): guard is Observable {\n      return !!(guard as Observable).pipe;\n    }\n  }\n\n  const Guard = mixin(OrMixinGuard);\n  return Guard as Type;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrthancAdminController.html":{"url":"controllers/OrthancAdminController.html","title":"controller - OrthancAdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrthancAdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/orthanc-admin.controller.ts\n        \n\n\n\n            \n                Description\n            \n            \n                Controller for reverse proxying route to orthanc accessible for administrators.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                createEcho\n                            \n                            \n                                    \n                                    \n                                    \n                                createJobs\n                            \n                            \n                                    \n                                    \n                                    \n                                deleteModality\n                            \n                            \n                                    \n                                    \n                                    \n                                deletePeer\n                            \n                            \n                                    \n                                    \n                                    \n                                editModality\n                            \n                            \n                                    \n                                    \n                                    \n                                editPeer\n                            \n                            \n                                    \n                                    \n                                    \n                                getLogLevel\n                            \n                            \n                                    \n                                    \n                                    \n                                getPeerSystem\n                            \n                            \n                                    \n                                    \n                                    \n                                getPlugins\n                            \n                            \n                                    \n                                    \n                                    \n                                getSystem\n                            \n                            \n                                    \n                                    \n                                    \n                                resetOrthanc\n                            \n                            \n                                    \n                                    \n                                    \n                                shutdownOrthanc\n                            \n                            \n                                    \n                                    \n                                    \n                                updateLogLevel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createEcho\n                        \n                    \n                \n            \n            \n                \n                        \n                    createEcho(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/modalities/*/echo')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    createJobs(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/jobs/*')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        deleteModality\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteModality(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Delete('/modalities/*')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        deletePeer\n                        \n                    \n                \n            \n            \n                \n                        \n                    deletePeer(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Delete('/peers/*')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:129\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        editModality\n                        \n                    \n                \n            \n            \n                \n                        \n                    editModality(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Put('/modalities/*')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        editPeer\n                        \n                    \n                \n            \n            \n                \n                        \n                    editPeer(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Put('/peers/*/')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:149\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getLogLevel\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLogLevel(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/tools/log-level')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getPeerSystem\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPeerSystem(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/peers/*/system')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:139\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getPlugins\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPlugins(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/plugins')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getSystem\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSystem(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/system')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        resetOrthanc\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetOrthanc(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/tools/reset')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        shutdownOrthanc\n                        \n                    \n                \n            \n            \n                \n                        \n                    shutdownOrthanc(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/tools/shutdown')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        updateLogLevel\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateLogLevel(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Put('/tools/log-level')@UseGuards(AdminGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-admin.controller.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Response,\n  Request,\n  UseGuards,\n  Post,\n  Delete,\n  Put,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { Response as ResponseType, Request as RequestType } from 'express';\n\nimport OrthancClient from '../utils/orthanc-client';\nimport { AdminGuard } from '../guards/roles.guard';\nimport { doReverseProxy } from './utils';\n\n/**\n * Controller for reverse proxying route to orthanc accessible for administrators.\n */\n@ApiTags('orthanc')\n@Controller()\nexport class OrthancAdminController {\n  constructor(private orthancClient: OrthancClient) {}\n\n  @ApiBearerAuth('access-token')\n  @Get('/system')\n  @UseGuards(AdminGuard)\n  getSystem(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/tools/reset')\n  @UseGuards(AdminGuard)\n  resetOrthanc(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/tools/shutdown')\n  @UseGuards(AdminGuard)\n  shutdownOrthanc(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/tools/log-level')\n  @UseGuards(AdminGuard)\n  getLogLevel(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Put('/tools/log-level')\n  @UseGuards(AdminGuard)\n  updateLogLevel(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/plugins')\n  @UseGuards(AdminGuard)\n  getPlugins(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/jobs/*')\n  @UseGuards(AdminGuard)\n  createJobs(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Delete('/modalities/*')\n  @UseGuards(AdminGuard)\n  deleteModality(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/modalities/*/echo')\n  @UseGuards(AdminGuard)\n  createEcho(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Put('/modalities/*')\n  @UseGuards(AdminGuard)\n  editModality(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Delete('/peers/*')\n  @UseGuards(AdminGuard)\n  deletePeer(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/peers/*/system')\n  @UseGuards(AdminGuard)\n  getPeerSystem(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Put('/peers/*/')\n  @UseGuards(AdminGuard)\n  editPeer(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrthancController.html":{"url":"controllers/OrthancController.html","title":"controller - OrthancController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrthancController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/orthanc.controller.ts\n        \n\n\n\n            \n                Description\n            \n            \n                Controller for reverse proxying route to orthanc with custom guarding strategies.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                getArchiveStudies\n                            \n                            \n                                    \n                                    \n                                    \n                                getDicomWeb\n                            \n                            \n                                    \n                                    \n                                    \n                                getInstances\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                getJobs\n                            \n                            \n                                    \n                                    \n                                    \n                                getModalities\n                            \n                            \n                                    \n                                    \n                                    \n                                getSeries\n                            \n                            \n                                    \n                                    \n                                    \n                                getSeriesArchive\n                            \n                            \n                                    \n                                    \n                                    \n                                getStudies\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getStudiesWithLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getArchiveStudies\n                        \n                    \n                \n            \n            \n                \n                        \n                    getArchiveStudies(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/studies/:id/archive')@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc.controller.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getDicomWeb\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDicomWeb(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/dicom-web/*')@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc.controller.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getInstances\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInstances(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/instances/*')@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc.controller.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiParam({name: 'id', required: false, description: 'Gets the job id', allowEmptyValue: true})@Get('/jobs/:id?')@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc.controller.ts:150\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getModalities\n                        \n                    \n                \n            \n            \n                \n                        \n                    getModalities(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/modalities*')@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc.controller.ts:122\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getSeries\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSeries(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/series/*')@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc.controller.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getSeriesArchive\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSeriesArchive(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/series/:id/archive')@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc.controller.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getStudies\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStudies(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/studies/*')@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        getStudiesWithLabel\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStudiesWithLabel(labelName: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/labels/:labelName/studies')@UseGuards(CheckLabelInRole)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                labelName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Response,\n  Request,\n  Param,\n  UseGuards,\n  Post,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiParam, ApiTags } from '@nestjs/swagger';\nimport { Response as ResponseType, Request as RequestType } from 'express';\n\nimport OrthancClient from '../utils/orthanc-client';\nimport { doReverseProxy } from './utils';\nimport { OrGuard } from '../guards/or.guard';\nimport {\n  AdminGuard,\n  AnonymizeGuard,\n  AutoQueryGuard,\n  DeleteGuard,\n  ExportGuard,\n  ModifyGuard,\n  QueryGuard,\n  ReadAllGuard,\n} from '../guards/roles.guard';\nimport { StudyGuard } from '../guards/study.guard';\nimport { DicomWebGuard } from '../guards/dicom-web.guard';\nimport { SeriesGuard } from '../guards/series.guard';\nimport { InstanceGuard } from '../guards/instance.guard';\nimport { CheckLabelInRole } from '../guards/check-label-in-role.guard';\n\n/**\n * Controller for reverse proxying route to orthanc with custom guarding strategies.\n */\n@ApiTags('orthanc')\n@Controller()\nexport class OrthancController {\n  constructor(private orthancClient: OrthancClient) {}\n\n  @ApiBearerAuth('access-token')\n  @Get('/labels/:labelName/studies')\n  @UseGuards(CheckLabelInRole)\n  async getStudiesWithLabel(@Param('labelName') labelName: string) {\n    const answer = await this.orthancClient.findInOrthanc(\n      'Study',\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      [labelName],\n    );\n    return answer;\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/studies/*')\n  @UseGuards(OrGuard([ReadAllGuard, StudyGuard]))\n  getStudies(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/studies/:id/archive')\n  @UseGuards(OrGuard([ReadAllGuard, StudyGuard]))\n  getArchiveStudies(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/series/*')\n  @UseGuards(OrGuard([ReadAllGuard, SeriesGuard]))\n  getSeries(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/series/:id/archive')\n  @UseGuards(OrGuard([ReadAllGuard, SeriesGuard]))\n  getSeriesArchive(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/instances/*')\n  @UseGuards(OrGuard([ReadAllGuard, InstanceGuard]))\n  getInstances(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/dicom-web/*')\n  @UseGuards(OrGuard([ReadAllGuard, DicomWebGuard]))\n  getDicomWeb(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/modalities*')\n  @UseGuards(OrGuard([AdminGuard, QueryGuard, AutoQueryGuard, ExportGuard]))\n  getModalities(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiParam({\n    name: 'id',\n    required: false,\n    description: 'Gets the job id',\n    allowEmptyValue: true,\n  })\n  \n  @Get('/jobs/:id?')\n  @UseGuards(\n    OrGuard([\n      AnonymizeGuard,\n      AdminGuard,\n      DeleteGuard,\n      ModifyGuard,\n      QueryGuard,\n      AutoQueryGuard,\n      ExportGuard,\n      ReadAllGuard\n    ]),\n  )\n  getJobs(@Request() request: RequestType, @Response() response: ResponseType) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrthancDeleteController.html":{"url":"controllers/OrthancDeleteController.html","title":"controller - OrthancDeleteController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrthancDeleteController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/orthanc-delete.controller.ts\n        \n\n\n\n            \n                Description\n            \n            \n                Controller for reverse proxying route to deleting resources routes in orthanc.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                deletePatients\n                            \n                            \n                                    \n                                    \n                                    \n                                deleteSeries\n                            \n                            \n                                    \n                                    \n                                    \n                                deleteStudies\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        deletePatients\n                        \n                    \n                \n            \n            \n                \n                        \n                    deletePatients(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Delete('/patients/*')@UseGuards(DeleteGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-delete.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        deleteSeries\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteSeries(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Delete('/series/*')@UseGuards(DeleteGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-delete.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        deleteStudies\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteStudies(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Delete('/studies/*')@UseGuards(DeleteGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-delete.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Response,\n  Request,\n  UseGuards,\n  Delete,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { Response as ResponseType, Request as RequestType } from 'express';\n\nimport OrthancClient from '../utils/orthanc-client';\nimport { DeleteGuard } from '../guards/roles.guard';\nimport { doReverseProxy } from './utils';\n/**\n * Controller for reverse proxying route to deleting resources routes in orthanc.\n */\n@ApiTags('orthanc')\n@Controller()\nexport class OrthancDeleteController {\n  constructor(private orthancClient: OrthancClient) {}\n\n  @ApiBearerAuth('access-token')\n  @Delete('/patients/*')\n  @UseGuards(DeleteGuard)\n  deletePatients(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Delete('/studies/*')\n  @UseGuards(DeleteGuard)\n  deleteStudies(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Delete('/series/*')\n  @UseGuards(DeleteGuard)\n  deleteSeries(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrthancEventPayloadDto.html":{"url":"classes/OrthancEventPayloadDto.html","title":"class - OrthancEventPayloadDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrthancEventPayloadDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/autorouting/dto/orthanc-event-payload.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                ChangeType\n                            \n                            \n                                    \n                                    \n                                Date\n                            \n                            \n                                    \n                                    \n                                ID\n                            \n                            \n                                    \n                                    \n                                Path\n                            \n                            \n                                    \n                                    \n                                ResourceType\n                            \n                            \n                                    \n                                    \n                                Seq\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ChangeType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AutoroutingEventType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'NewInstance', required: true})@IsEnum(AutoroutingEventType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/dto/orthanc-event-payload.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'YYYYMMDDTHHMMSS', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/dto/orthanc-event-payload.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/dto/orthanc-event-payload.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/dto/orthanc-event-payload.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ResourceType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/dto/orthanc-event-payload.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Seq\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 0, required: true})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/dto/orthanc-event-payload.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEnum, IsNumber, IsString } from 'class-validator';\nimport { AutoroutingEventType } from '../autorouting.enum';\n\nexport class OrthancEventPayloadDto {\n  @ApiProperty({ example: 'NewInstance', required: true })\n  @IsEnum(AutoroutingEventType)\n  ChangeType: AutoroutingEventType;\n\n  @ApiProperty({ example: 'YYYYMMDDTHHMMSS', required: true })\n  @IsString()\n  Date: string;\n\n  @ApiProperty({ example: '', required: true })\n  @IsString()\n  ID: string;\n\n  @ApiProperty({ example: '', required: true })\n  @IsString()\n  Path: string;\n\n  @ApiProperty({ example: '', required: true })\n  @IsString()\n  ResourceType: string;\n\n  @ApiProperty({ example: 0, required: true })\n  @IsNumber()\n  Seq: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrthancExportController.html":{"url":"controllers/OrthancExportController.html","title":"controller - OrthancExportController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrthancExportController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/orthanc-export.controller.ts\n        \n\n\n\n            \n                Description\n            \n            \n                Controller for reverse proxying route to exporting resources routes in orthanc.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                createArchive\n                            \n                            \n                                    \n                                    \n                                    \n                                createMedia\n                            \n                            \n                                    \n                                    \n                                    \n                                createMediaExtended\n                            \n                            \n                                    \n                                    \n                                    \n                                createModalitiesExport\n                            \n                            \n                                    \n                                    \n                                    \n                                createPeersStore\n                            \n                            \n                                    \n                                    \n                                    \n                                createTasksUserExport\n                            \n                            \n                                    \n                                    \n                                    \n                                getPeers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createArchive\n                        \n                    \n                \n            \n            \n                \n                        \n                    createArchive(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/tools/create-archive')@UseGuards(ExportGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-export.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createMedia\n                        \n                    \n                \n            \n            \n                \n                        \n                    createMedia(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/tools/create-media')@UseGuards(ExportGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-export.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createMediaExtended\n                        \n                    \n                \n            \n            \n                \n                        \n                    createMediaExtended(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/tools/create-media-extended')@UseGuards(ExportGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-export.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createModalitiesExport\n                        \n                    \n                \n            \n            \n                \n                        \n                    createModalitiesExport(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/modalities/*/store')@UseGuards(ExportGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-export.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createPeersStore\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPeersStore(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/peers/*/store')@UseGuards(ExportGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-export.controller.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createTasksUserExport\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTasksUserExport(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/tasks/:user/export')@UseGuards(ExportGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-export.controller.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getPeers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPeers(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/peers*')@UseGuards(ExportGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-export.controller.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Response,\n  Request,\n  UseGuards,\n  Post,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { Response as ResponseType, Request as RequestType } from 'express';\n\nimport OrthancClient from '../utils/orthanc-client';\nimport { ExportGuard } from '../guards/roles.guard';\nimport { doReverseProxy } from './utils';\n\n/**\n * Controller for reverse proxying route to exporting resources routes in orthanc.\n */\n@ApiTags('orthanc')\n@Controller()\nexport class OrthancExportController {\n  constructor(private orthancClient: OrthancClient) {}\n\n  @ApiBearerAuth('access-token')\n  @Post('/modalities/*/store')\n  @UseGuards(ExportGuard)\n  createModalitiesExport(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/tools/create-archive')\n  @UseGuards(ExportGuard)\n  createArchive(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/tools/create-media')\n  @UseGuards(ExportGuard)\n  createMedia(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/tools/create-media-extended')\n  @UseGuards(ExportGuard)\n  createMediaExtended(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/peers*')\n  @UseGuards(ExportGuard)\n  getPeers(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/peers/*/store')\n  @UseGuards(ExportGuard)\n  createPeersStore(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/tasks/:user/export')\n  @UseGuards(ExportGuard)\n  createTasksUserExport(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrthancImportController.html":{"url":"controllers/OrthancImportController.html","title":"controller - OrthancImportController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrthancImportController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/orthanc-import.controller.ts\n        \n\n\n\n            \n                Description\n            \n            \n                Controller for reverse proxying route to importing resources routes in orthanc.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                createDicom\n                            \n                            \n                                    \n                                    \n                                    \n                                createInstances\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createDicom\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDicom(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/tools/create-dicom')@UseGuards(ImportGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-import.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createInstances\n                        \n                    \n                \n            \n            \n                \n                        \n                    createInstances(request: RawBodyRequest, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/instances')@UseGuards(ImportGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-import.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RawBodyRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Response,\n  UseGuards,\n  Post,\n  Request,\n  RawBodyRequest,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { Response as ResponseType, Request as RequestType } from 'express';\n\nimport OrthancClient from '../utils/orthanc-client';\nimport { ImportGuard } from '../guards/roles.guard';\nimport { doReverseProxy } from './utils';\n/**\n * Controller for reverse proxying route to importing resources routes in orthanc.\n */\n@ApiTags('orthanc')\n@Controller()\nexport class OrthancImportController {\n  constructor(private orthancClient: OrthancClient) {}\n\n  @ApiBearerAuth('access-token')\n  @Post('/instances')\n  @UseGuards(ImportGuard)\n  createInstances(\n    @Request() request: RawBodyRequest,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/tools/create-dicom')\n  @UseGuards(ImportGuard)\n  createDicom(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrthancModifyController.html":{"url":"controllers/OrthancModifyController.html","title":"controller - OrthancModifyController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrthancModifyController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/orthanc-modify.controller.ts\n        \n\n\n\n            \n                Description\n            \n            \n                Controller for the orthanc modifying ressources routes related APIs.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                createPatientsModify\n                            \n                            \n                                    \n                                    \n                                    \n                                createSeriesModify\n                            \n                            \n                                    \n                                    \n                                    \n                                createStudiesModify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createPatientsModify\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPatientsModify(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/patients/*/modify')@UseGuards(ModifyGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-modify.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createSeriesModify\n                        \n                    \n                \n            \n            \n                \n                        \n                    createSeriesModify(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/series/*/modify')@UseGuards(ModifyGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-modify.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createStudiesModify\n                        \n                    \n                \n            \n            \n                \n                        \n                    createStudiesModify(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/studies/*/modify')@UseGuards(ModifyGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-modify.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Response, Request, UseGuards, Post } from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { Response as ResponseType, Request as RequestType } from 'express';\n\nimport OrthancClient from '../utils/orthanc-client';\nimport { ModifyGuard } from '../guards/roles.guard';\nimport { doReverseProxy } from './utils';\n/**\n * Controller for the orthanc modifying ressources routes related APIs.\n */\n@ApiTags('orthanc')\n@Controller()\nexport class OrthancModifyController {\n  constructor(private orthancClient: OrthancClient) {}\n\n  @ApiBearerAuth('access-token')\n  @Post('/patients/*/modify')\n  @UseGuards(ModifyGuard)\n  createPatientsModify(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/studies/*/modify')\n  @UseGuards(ModifyGuard)\n  createStudiesModify(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/series/*/modify')\n  @UseGuards(ModifyGuard)\n  createSeriesModify(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrthancModule.html":{"url":"modules/OrthancModule.html","title":"module - OrthancModule","body":"\n                   \n\n\n\n\n    Modules\n    OrthancModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrthancModule\n\n\n\ncluster_OrthancModule_providers\n\n\n\ncluster_OrthancModule_imports\n\n\n\n\nRolesModule\n\nRolesModule\n\n\n\nOrthancModule\n\nOrthancModule\n\nOrthancModule -->\n\nRolesModule->OrthancModule\n\n\n\n\n\nOrthancClient\n\nOrthancClient\n\nOrthancModule -->\n\nOrthancClient->OrthancModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/orthanc/orthanc.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrthancClient\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrthancReadAllController\n                        \n                        \n                            OrthancController\n                        \n                        \n                            OrthancAdminController\n                        \n                        \n                            OrthancDeleteController\n                        \n                        \n                            OrthancExportController\n                        \n                        \n                            OrthancImportController\n                        \n                        \n                            OrthancModifyController\n                        \n                        \n                            OrthancQueryController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RolesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { OrthancAdminController } from './orthanc-admin.controller';\nimport { OrthancController } from './orthanc.controller';\nimport { OrthancDeleteController } from './orthanc-delete.controller';\nimport { OrthancExportController } from './orthanc-export.controller';\nimport { OrthancImportController } from './orthanc-import.controller';\nimport { OrthancModifyController } from './orthanc-modify.controller';\nimport { OrthancQueryController } from './orthanc-query.controller';\nimport OrthancClient from '../utils/orthanc-client';\nimport { RolesModule } from '../roles/roles.module';\nimport { OrthancReadAllController } from './orthanc-read-all.controller';\n\n@Module({\n  imports: [RolesModule],\n  providers: [OrthancClient],\n  controllers: [\n    OrthancReadAllController,\n    OrthancController,\n    OrthancAdminController,\n    OrthancDeleteController,\n    OrthancExportController,\n    OrthancImportController,\n    OrthancModifyController,\n    OrthancQueryController,\n  ],\n})\nexport class OrthancModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrthancMonitoringTask.html":{"url":"injectables/OrthancMonitoringTask.html","title":"injectable - OrthancMonitoringTask","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrthancMonitoringTask\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/orthanc-monitoring.task.ts\n        \n\n\n            \n                Description\n            \n            \n                CronJob checking for Orthanc Events using HTTP /changes API and emitting events to other GaelO-Flow backend services.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                lastChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                orthancMonitoringCron\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(orthancClient: OrthancClient, eventEmitter: EventEmitter2)\n                    \n                \n                        \n                            \n                                Defined in src/tasks/orthanc-monitoring.task.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        orthancClient\n                                                  \n                                                        \n                                                                        OrthancClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventEmitter\n                                                  \n                                                        \n                                                                    EventEmitter2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        orthancMonitoringCron\n                        \n                    \n                \n            \n            \n                \n                        \n                    orthancMonitoringCron()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron(CronExpression.EVERY_10_SECONDS)\n                \n            \n\n                    \n                        \n                            Defined in src/tasks/orthanc-monitoring.task.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lastChanges\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/tasks/orthanc-monitoring.task.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Cron, CronExpression } from '@nestjs/schedule';\nimport { EventEmitter2 } from '@nestjs/event-emitter';\n\nimport OrthancClient from '../utils/orthanc-client';\n/**\n * CronJob checking for Orthanc Events using HTTP /changes API and emitting events to other GaelO-Flow backend services.\n */\n@Injectable()\nexport class OrthancMonitoringTask {\n  private lastChanges: number = null;\n\n  constructor(\n    private orthancClient: OrthancClient,\n    private eventEmitter: EventEmitter2,\n  ) {}\n\n  @Cron(CronExpression.EVERY_10_SECONDS)\n  async orthancMonitoringCron() {\n    if (this.lastChanges === null) {\n      this.lastChanges = (await this.orthancClient.getLastChanges()).Last;\n    }\n\n    const changes = await this.orthancClient.getChangesSince(\n      this.lastChanges.toString(),\n    );\n\n    this.lastChanges = changes.Last;\n    changes.Changes.forEach((element: any) => {\n      this.eventEmitter.emit('orthanc.' + element.ChangeType, element);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrthancQueryController.html":{"url":"controllers/OrthancQueryController.html","title":"controller - OrthancQueryController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrthancQueryController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/orthanc-query.controller.ts\n        \n\n\n\n            \n                Description\n            \n            \n                Controller for reverse proxying route to DICOM querying resources routes in orthanc.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                createModalitiesQuery\n                            \n                            \n                                    \n                                    \n                                    \n                                getQueryAnswers\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getQueryParsedAnswer\n                            \n                            \n                                    \n                                    \n                                retrieve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createModalitiesQuery\n                        \n                    \n                \n            \n            \n                \n                        \n                    createModalitiesQuery(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/modalities/*/query')@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-query.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getQueryAnswers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getQueryAnswers(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/queries/*/answers*')@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-query.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        getQueryParsedAnswer\n                        \n                    \n                \n            \n            \n                \n                        \n                    getQueryParsedAnswer(id: string, queryParsedAnswer: QueryParsedAnswerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/modalities/:id/parsed-query')@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-query.controller.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                queryParsedAnswer\n                                            \n                                                            QueryParsedAnswerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        retrieve\n                        \n                    \n                \n            \n            \n                \n                        \n                    retrieve(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/queries/:id/answers/:index/retrieve')@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-query.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Response,\n  Request,\n  UseGuards,\n  Post,\n  Param,\n  Body,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { Response as ResponseType, Request as RequestType } from 'express';\n\nimport OrthancClient from '../utils/orthanc-client';\nimport { AutoQueryGuard, QueryGuard } from '../guards/roles.guard';\nimport { doReverseProxy } from './utils';\nimport {\n  QueryParsedAnswerDto,\n  QuerySeriesDto,\n  QueryStudyDto,\n} from './dto/query-parsed-answer.dto';\nimport { OrthancLevelType } from '../constants/enums';\nimport { OrGuard } from '../guards/or.guard';\n/**\n * Controller for reverse proxying route to DICOM querying resources routes in orthanc.\n */\n@ApiTags('orthanc')\n@Controller()\nexport class OrthancQueryController {\n  constructor(private orthancClient: OrthancClient) {}\n\n  @ApiBearerAuth('access-token')\n  @Post('/modalities/*/query')\n  @UseGuards(OrGuard([QueryGuard, AutoQueryGuard]))\n  createModalitiesQuery(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/queries/*/answers*')\n  @UseGuards(OrGuard([QueryGuard, AutoQueryGuard]))\n  getQueryAnswers(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @Post('/queries/:id/answers/:index/retrieve')\n  @UseGuards(OrGuard([QueryGuard, AutoQueryGuard]))\n  retrieve(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/modalities/:id/parsed-query')\n  @UseGuards(OrGuard([QueryGuard, AutoQueryGuard]))\n  async getQueryParsedAnswer(\n    @Param('id') id: string,\n    @Body() queryParsedAnswer: QueryParsedAnswerDto,\n  ) {\n    if (queryParsedAnswer.Level == OrthancLevelType.LEVEL_SERIES) {\n      const seriesDto = queryParsedAnswer.Query as QuerySeriesDto;\n      const seriesDetails = await this.orthancClient.querySeriesInAet(\n        seriesDto.StudyInstanceUID,\n        seriesDto.Modality,\n        seriesDto.ProtocolName,\n        seriesDto.SeriesDescription,\n        seriesDto.SeriesNumber,\n        seriesDto.SeriesInstanceUID,\n        id,\n      );\n      return seriesDetails;\n    } else if (queryParsedAnswer.Level == OrthancLevelType.LEVEL_STUDY) {\n      const studyDto = queryParsedAnswer.Query as QueryStudyDto;\n      const studyDetails = await this.orthancClient.queryStudiesInAet(\n        studyDto.PatientName,\n        studyDto.PatientID,\n        studyDto.StudyDate,\n        studyDto.Modality,\n        studyDto.StudyDescription,\n        studyDto.AccessionNb,\n        studyDto.StudyInstanceUID,\n        id,\n      );\n      return studyDetails;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrthancReadAllController.html":{"url":"controllers/OrthancReadAllController.html","title":"controller - OrthancReadAllController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrthancReadAllController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/orthanc-read-all.controller.ts\n        \n\n\n\n            \n                Description\n            \n            \n                Controller for reverse proxying route to DICOM access resources routes in orthanc.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                deleteLabels\n                            \n                            \n                                    \n                                    \n                                    \n                                find\n                            \n                            \n                                    \n                                    \n                                    \n                                getPatients\n                            \n                            \n                                    \n                                    \n                                    \n                                getPatientsArchive\n                            \n                            \n                                    \n                                    \n                                    \n                                updateLabels\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        deleteLabels\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteLabels(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Delete('/studies/*/labels/*')@UseGuards(ReadAllGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-read-all.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/tools/find')@UseGuards(ReadAllGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-read-all.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getPatients\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPatients(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Get('/patients/*')@UseGuards(ReadAllGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-read-all.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getPatientsArchive\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPatientsArchive(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Post('/patients/:id/archive')@UseGuards(ReadAllGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-read-all.controller.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        updateLabels\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateLabels(request: RequestType, response: ResponseType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@Put('/studies/*/labels/*')@UseGuards(ReadAllGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orthanc/orthanc-read-all.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        RequestType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        ResponseType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Response,\n  Request,\n  Post,\n  Delete,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { Response as ResponseType, Request as RequestType } from 'express';\n\nimport OrthancClient from '../utils/orthanc-client';\nimport { doReverseProxy } from './utils';\nimport { ReadAllGuard } from '../guards/roles.guard';\n/**\n * Controller for reverse proxying route to DICOM access resources routes in orthanc.\n */\n@ApiTags('orthanc')\n@Controller()\nexport class OrthancReadAllController {\n  constructor(private orthancClient: OrthancClient) {}\n\n  @ApiBearerAuth('access-token')\n  @Put('/studies/*/labels/*')\n  @UseGuards(ReadAllGuard)\n  updateLabels(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Delete('/studies/*/labels/*')\n  @UseGuards(ReadAllGuard)\n  deleteLabels(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/tools/find')\n  @UseGuards(ReadAllGuard)\n  find(@Request() request: RequestType, @Response() response: ResponseType) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Get('/patients/*')\n  @UseGuards(ReadAllGuard)\n  getPatients(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n\n  @ApiBearerAuth('access-token')\n  @Post('/patients/:id/archive')\n  @UseGuards(ReadAllGuard)\n  getPatientsArchive(\n    @Request() request: RequestType,\n    @Response() response: ResponseType,\n  ) {\n    doReverseProxy(request, response, this.orthancClient);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProcessingController.html":{"url":"controllers/ProcessingController.html","title":"controller - ProcessingController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProcessingController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/processing/processing.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /processing\n            \n\n\n            \n                Description\n            \n            \n                Controller for gaelo-processing task management APIs.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                addJob\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                flushQueue\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getJobs\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getUuid\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                removeJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        addJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    addJob(request: Request, processingJobDto: ProcessingJobDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 201, description: 'Add job and returns the JobId', type: Object})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(ReadAllGuard)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/processing/processing.controller.ts:116\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                processingJobDto\n                                            \n                                                            ProcessingJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        flushQueue\n                        \n                    \n                \n            \n            \n                \n                        \n                    flushQueue()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'queue flushed'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Delete()\n                \n            \n\n                    \n                        \n                            Defined in src/processing/processing.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(uuid: string, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all jobs for the uuid', type: Object})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiParam({name: 'uuid', required: true})@Get(':uuid')\n                \n            \n\n                    \n                        \n                            Defined in src/processing/processing.controller.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getUuid\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUuid(userId: number, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all uuids', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiQuery({name: 'userId', required: false})@UseGuards(undefined)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/processing/processing.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        removeJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeJob(uuid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Remove job'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden'})@UseGuards(AdminGuard)@Delete(':uuid')\n                \n            \n\n                    \n                        \n                            Defined in src/processing/processing.controller.ts:136\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Delete,\n  ForbiddenException,\n  Get,\n  Param,\n  Post,\n  Query,\n  Req,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiParam,\n  ApiQuery,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { Job } from 'bullmq';\n\nimport { AdminGuard, ReadAllGuard } from '../guards/roles.guard';\nimport { ProcessingQueueService } from './processing-queue.service';\nimport { ProcessingJobDto } from './processing-job.dto';\nimport { OrGuard } from '../guards/or.guard';\nimport { CheckUserIdQueryGuard } from '../guards/check-user-id-query.guard';\n\n/**\n * Controller for gaelo-processing task management APIs.\n */\n@ApiTags('processing')\n@Controller('/processing')\nexport class ProcessingController {\n  constructor(\n    private readonly processingQueueService: ProcessingQueueService,\n  ) {}\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'queue flushed' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Delete()\n  async flushQueue(): Promise {\n    await this.processingQueueService.flush();\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Get all uuids', type: [String] })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiQuery({ name: 'userId', required: false })\n  @UseGuards(OrGuard([AdminGuard, CheckUserIdQueryGuard]))\n  @Get()\n  async getUuid(\n    @Query('userId') userId: number,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (!userId && user.role.Admin) {\n      return await this.processingQueueService.getAllUuids();\n    } else {\n      return await this.processingQueueService.getUuidsOfUser(userId);\n    }\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'Get all jobs for the uuid',\n    type: Object,\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiParam({ name: 'uuid', required: true })\n  @Get(':uuid')\n  async getJobs(\n    @Param('uuid') uuid: string,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (!uuid) throw new BadRequestException('Uuid is required');\n\n    const uuidsOfUser = await this.processingQueueService.getUuidsOfUser(\n      user.userId,\n    );\n\n    if (user.role.Admin || uuidsOfUser.includes(uuid)) {\n      const jobs = await this.processingQueueService.getJobs(undefined, uuid);\n      const results = [];\n      jobs.forEach((job: Job) => {\n        results.push({\n          Progress: job.progress,\n          State: job.data.state,\n          Id: job.id,\n          Results: job.data.results,\n        });\n      });\n      return results;\n    } else {\n      throw new ForbiddenException(\"You don't have access to this resource\");\n    }\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 201,\n    description: 'Add job and returns the JobId',\n    type: Object,\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(ReadAllGuard)\n  @Post()\n  async addJob(\n    @Req() request: Request,\n    @Body() processingJobDto: ProcessingJobDto,\n  ): Promise {\n    const user = request['user'];\n\n    return {\n      JobId: await this.processingQueueService.addJob(\n        user.userId,\n        processingJobDto,\n      ),\n    };\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Remove job' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @UseGuards(AdminGuard)\n  @Delete(':uuid')\n  async removeJob(@Param('uuid') uuid: string): Promise {\n    this.processingQueueService.removeJob(uuid);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProcessingFile.html":{"url":"classes/ProcessingFile.html","title":"class - ProcessingFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProcessingFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/processing/processing.file.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                id\n                            \n                            \n                                    Private\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getId\n                            \n                            \n                                    Public\n                                getType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, type: string)\n                    \n                \n                        \n                            \n                                Defined in src/processing/processing.file.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/processing.file.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/processing.file.ts:3\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/processing.file.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getType\n                        \n                    \n                \n            \n            \n                \n                        \n                    getType()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/processing.file.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class ProcessingFile {\n  private id: string;\n  private type: string;\n\n  constructor(id: string, type: string) {\n    this.id = id;\n    this.type = type;\n  }\n\n  public getType(): string {\n    return this.type;\n  }\n\n  public getId(): string {\n    return this.id;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProcessingJobDto.html":{"url":"classes/ProcessingJobDto.html","title":"class - ProcessingJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProcessingJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/processing/processing-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                JobType\n                            \n                            \n                                    \n                                    \n                                Payload\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        JobType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessingJobType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true, enum: ProcessingJobType})@IsEnum(ProcessingJobType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/processing/processing-job.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TmtvJobDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@IsObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/processing/processing-job.dto.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsBoolean, IsEnum, IsObject, IsString } from 'class-validator';\nimport { ProcessingJobType, ProcessingMask } from '../constants/enums';\n\nexport class TmtvJobDto {\n  @ApiProperty({ required: true })\n  @IsString()\n  CtOrthancSeriesId: string;\n\n  @ApiProperty({ required: true })\n  @IsString()\n  PtOrthancSeriesId: string;\n\n  @ApiProperty({ required: true })\n  @IsEnum(ProcessingMask)\n  SendMaskToOrthancAs: ProcessingMask[];\n\n  @ApiProperty({ required: false, default: false })\n  @IsBoolean()\n  WithFragmentedMask: boolean;\n}\n\nexport class ProcessingJobDto {\n  @ApiProperty({ required: true, enum: ProcessingJobType })\n  @IsEnum(ProcessingJobType)\n  JobType: ProcessingJobType;\n\n  @ApiProperty({ required: false })\n  @IsObject()\n  Payload: TmtvJobDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProcessingModule.html":{"url":"modules/ProcessingModule.html","title":"module - ProcessingModule","body":"\n                   \n\n\n\n\n    Modules\n    ProcessingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProcessingModule\n\n\n\ncluster_ProcessingModule_providers\n\n\n\n\nProcessingQueueService\n\nProcessingQueueService\n\n\n\nProcessingModule\n\nProcessingModule\n\nProcessingModule -->\n\nProcessingQueueService->ProcessingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/processing/processing.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProcessingQueueService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProcessingController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProcessingController } from './processing.controller';\nimport { ProcessingQueueService } from './processing-queue.service';\n\n@Module({\n  imports: [],\n  providers: [ProcessingQueueService],\n  controllers: [ProcessingController],\n})\nexport class ProcessingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProcessingQueueService.html":{"url":"injectables/ProcessingQueueService.html","title":"injectable - ProcessingQueueService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProcessingQueueService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/processing/processing-queue.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service class to handle the gaelo-processing queue.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                processingQueue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addJob\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                    Async\n                                getAllUuids\n                            \n                            \n                                    Async\n                                getJobs\n                            \n                            \n                                    Async\n                                getUuidsOfUser\n                            \n                            \n                                    Async\n                                removeJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/processing/processing-queue.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    addJob(userId: number, processingJobDto: ProcessingJobDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/processing-queue.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                processingJobDto\n                                            \n                                                            ProcessingJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                        \n                    flush()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/processing-queue.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllUuids\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllUuids()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/processing-queue.service.ts:90\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(userId: number, jobId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/processing-queue.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                        \n                                                jobId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUuidsOfUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUuidsOfUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/processing-queue.service.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeJob(uuid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/processing-queue.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        processingQueue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Queue\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/processing-queue.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { Job, Queue } from 'bullmq';\n\nimport { ProcessingJobDto } from './processing-job.dto';\nimport { generateRandomUUID } from '../utils/passwords';\n/**\n * Service class to handle the gaelo-processing queue.\n */\n@Injectable()\nexport class ProcessingQueueService {\n  processingQueue: Queue;\n\n  constructor(private readonly configService: ConfigService) {\n    this.processingQueue = new Queue('processing', {\n      connection: {\n        host: this.configService.get('REDIS_ADDRESS', 'localhost'),\n        port: this.configService.get('REDIS_PORT', 6379),\n      },\n    });\n    this.processingQueue.resume();\n  }\n\n  async flush(): Promise {\n    await this.processingQueue.obliterate({ force: true });\n  }\n\n  async removeJob(uuid: string): Promise {\n    await this.processingQueue.remove(uuid);\n  }\n\n  async addJob(\n    userId: number,\n    processingJobDto: ProcessingJobDto,\n  ): Promise {\n    const jobId = generateRandomUUID();\n    const data = {\n      ...processingJobDto,\n      userId,\n    };\n\n    this.processingQueue.add(jobId, data, {\n      jobId: jobId,\n    });\n\n    return jobId;\n  }\n\n  async getJobs(\n    userId: number = undefined,\n    jobId: string = undefined,\n  ): Promise[]> {\n    const states = [\n      'completed',\n      'failed',\n      'delayed',\n      'active',\n      'wait',\n      'waiting-children',\n      'prioritized',\n      'paused',\n      'repeat',\n    ];\n    let jobs = [];\n\n    for (const state of states) {\n      const stateJobs = await this.processingQueue.getJobs(state as any);\n      stateJobs.forEach((job) => {\n        job.data.state = state;\n        jobs.push(job);\n      });\n    }\n\n    jobs = await Promise.all(\n      jobs.map(async (job) => {\n        return job;\n      }),\n    );\n\n    const filteredJob = jobs.filter((job) => {\n      return (\n        (job.data.userId == userId || userId == undefined) &&\n        (job.id == jobId || jobId == undefined)\n      );\n    });\n\n    return filteredJob;\n  }\n\n  async getAllUuids(): Promise {\n    const jobs: Job[] = await this.getJobs();\n    const uuids = jobs.map((job) => job.id);\n\n    return uuids;\n  }\n\n  async getUuidsOfUser(userId: number): Promise {\n    const jobs: Job[] = await this.getJobs();\n    const uuids = jobs\n      .filter((job) => job.data.userId == userId)\n      .map((job) => job.id);\n\n    return uuids;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryAnswer.html":{"url":"classes/QueryAnswer.html","title":"class - QueryAnswer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryAnswer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/query-answer/query.answer.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                AccessionNumber\n                            \n                            \n                                AnswerId\n                            \n                            \n                                AnswerNumber\n                            \n                            \n                                Level\n                            \n                            \n                                OriginAET\n                            \n                            \n                                PatientID\n                            \n                            \n                                PatientName\n                            \n                            \n                                RequestedProcedureDescription\n                            \n                            \n                                setAccessionNumber\n                            \n                            \n                                setAnswerId\n                            \n                            \n                                setAnswerNumber\n                            \n                            \n                                setLevel\n                            \n                            \n                                setOriginAET\n                            \n                            \n                                setPatientID\n                            \n                            \n                                setPatientName\n                            \n                            \n                                setRequestedProcedureDescription\n                            \n                            \n                                setStudyDate\n                            \n                            \n                                setStudyDescription\n                            \n                            \n                                StudyDate\n                            \n                            \n                                StudyDescription\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(level: QueryAnswerType, answerId: string, answerNumber: number, originAET: string, patientName: string | null, patientID: string, accessionNumber: string | null, studyDescription: string | null, studyDate: string | null, requestedProcedureDescription: string | null)\n                    \n                \n                        \n                            \n                                Defined in src/orthanc/query-answer/query.answer.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        level\n                                                  \n                                                        \n                                                                        QueryAnswerType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        answerId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        answerNumber\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        originAET\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientName\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientID\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessionNumber\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studyDescription\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studyDate\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        requestedProcedureDescription\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        AccessionNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AnswerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AnswerNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryAnswerType\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OriginAET\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PatientID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PatientName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RequestedProcedureDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAccessionNumber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAnswerId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAnswerNumber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLevel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setOriginAET\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPatientID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPatientName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRequestedProcedureDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStudyDate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStudyDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StudyDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StudyDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query.answer.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { QueryAnswerType } from '../../constants/enums';\n\nexport default abstract class QueryAnswer {\n  AnswerId: string;\n  AnswerNumber: number;\n  OriginAET: string;\n  PatientName: string | null;\n  PatientID: string;\n  AccessionNumber: string | null;\n  StudyDescription: string | null;\n  StudyDate: string | null;\n  RequestedProcedureDescription: string | null;\n\n  Level: QueryAnswerType;\n\n  constructor(\n    level: QueryAnswerType,\n    answerId: string,\n    answerNumber: number,\n    originAET: string,\n    patientName: string | null,\n    patientID: string,\n    accessionNumber: string | null,\n    studyDescription: string | null,\n    studyDate: string | null,\n    requestedProcedureDescription: string | null,\n  ) {\n    this.AnswerId = answerId;\n    this.AnswerNumber = answerNumber;\n    this.Level = level;\n    this.OriginAET = originAET;\n    this.PatientName = patientName;\n    this.PatientID = patientID;\n    this.AccessionNumber = accessionNumber;\n    this.StudyDescription = studyDescription;\n    this.StudyDate = studyDate;\n    this.RequestedProcedureDescription = requestedProcedureDescription;\n  }\n\n  setAnswerId = (answerId: string): void => {\n    this.AnswerId = answerId;\n  };\n\n  setAnswerNumber = (answerNumber: number): void => {\n    this.AnswerNumber = answerNumber;\n  };\n\n  setLevel = (level: QueryAnswerType): void => {\n    this.Level = level;\n  };\n\n  setOriginAET = (originAET: string): void => {\n    this.OriginAET = originAET;\n  };\n\n  setPatientName = (patientName: string): void => {\n    this.PatientName = patientName;\n  };\n\n  setPatientID = (patientID: string): void => {\n    this.PatientID = patientID;\n  };\n\n  setAccessionNumber = (accessionNumber: string | null): void => {\n    this.AccessionNumber = accessionNumber;\n  };\n\n  setStudyDescription = (studyDescription: string | null): void => {\n    this.StudyDescription = studyDescription;\n  };\n\n  setStudyDate = (studyDate: string | null): void => {\n    this.StudyDate = studyDate;\n  };\n\n  setRequestedProcedureDescription = (\n    requestedProcedureDescription: string | null,\n  ): void => {\n    this.RequestedProcedureDescription = requestedProcedureDescription;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/QueryGuard.html":{"url":"guards/QueryGuard.html","title":"guard - QueryGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    QueryGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard cheking user has query permission\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n/**\n * Guard cheking user has import permission\n */\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n/**\n * Guard cheking user has anonymize permission\n */\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n/**\n * Guard cheking user has export permission\n */\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n/**\n * Guard cheking user has query permission\n */\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n/**\n * Guard cheking user has autoquery permission\n */\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n/**\n * Guard cheking user has delete permission\n */\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n/**\n * Guard cheking user has admin permission\n */\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n/**\n * Guard cheking user has modify permission\n */\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n/**\n * Guard cheking user has cdBurner permission\n */\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n/**\n * Guard cheking user has autorouting permission\n */\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n/**\n * Guard cheking user has readall permission\n */\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryParsedAnswerDto.html":{"url":"classes/QueryParsedAnswerDto.html","title":"class - QueryParsedAnswerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryParsedAnswerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/dto/query-parsed-answer.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Level\n                            \n                            \n                                    \n                                    \n                                Query\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrthancLevelType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, enum: OrthancLevelType})@IsEnum(OrthancLevelType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Query\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QuerySeriesDto | QueryStudyDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:68\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEnum, IsObject, IsString } from 'class-validator';\nimport { OrthancLevelType } from '../../constants/enums';\n\nexport class QuerySeriesDto {\n  @ApiProperty({ example: 'study_uid' })\n  @IsString()\n  StudyInstanceUID: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'protocol_name' })\n  @IsString()\n  ProtocolName: string;\n\n  @ApiProperty({ example: 'series_description' })\n  @IsString()\n  SeriesDescription: string;\n\n  @ApiProperty({ example: 'series_number' })\n  @IsString()\n  SeriesNumber: string;\n\n  @ApiProperty({ example: 'series_instance_uid' })\n  @IsString()\n  SeriesInstanceUID: string;\n}\n\nexport class QueryStudyDto {\n  @ApiProperty({ example: 'patient_name' })\n  @IsString()\n  PatientName: string;\n\n  @ApiProperty({ example: 'patient_id' })\n  @IsString()\n  PatientID: string;\n\n  @ApiProperty({ example: 'patient_birthdate' })\n  @IsString()\n  StudyDate: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'study_description' })\n  @IsString()\n  StudyDescription: string;\n\n  @ApiProperty({ example: 'accession_nb' })\n  @IsString()\n  AccessionNb: string;\n\n  @ApiProperty({ example: 'study_instance_uid' })\n  @IsString()\n  StudyInstanceUID: string;\n}\n\nexport class QueryParsedAnswerDto {\n  @ApiProperty({ example: OrthancLevelType.LEVEL_SERIES, enum: OrthancLevelType })\n  @IsEnum(OrthancLevelType)\n  Level: OrthancLevelType;\n\n  @ApiProperty()\n  @IsObject()\n  Query: QuerySeriesDto | QueryStudyDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QueryQueueTask.html":{"url":"injectables/QueryQueueTask.html","title":"injectable - QueryQueueTask","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QueryQueueTask\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/query-queue.task.ts\n        \n\n\n            \n                Description\n            \n            \n                CronJob checking for the queue state and pausing/resuming it based on the options.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                queryQueueCron\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(optionRepository: Repository, queueQueryService: QueuesQueryService)\n                    \n                \n                        \n                            \n                                Defined in src/tasks/query-queue.task.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        optionRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queueQueryService\n                                                  \n                                                        \n                                                                        QueuesQueryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        queryQueueCron\n                        \n                    \n                \n            \n            \n                \n                        \n                    queryQueueCron()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron(CronExpression.EVERY_MINUTE)\n                \n            \n\n                    \n                        \n                            Defined in src/tasks/query-queue.task.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Cron, CronExpression } from '@nestjs/schedule';\nimport { Repository } from 'typeorm';\n\nimport { QueuesQueryService } from '../queues/query/queue-query.service';\nimport { Option } from '../options/option.entity';\n\nimport { isTimeBetween } from '../utils/is-time-between';\n/**\n * CronJob checking for the queue state and pausing/resuming it based on the options.\n */\n@Injectable()\nexport class QueryQueueTask {\n  constructor(\n    @InjectRepository(Option)\n    private optionRepository: Repository,\n    private queueQueryService: QueuesQueryService,\n  ) {}\n\n  @Cron(CronExpression.EVERY_MINUTE)\n  async queryQueueCron() {\n    const options: Option = (await this.optionRepository.find())[0];\n    const currentHour = new Date().getHours();\n    const currentMinute = new Date().getMinutes();\n    const isBetween = isTimeBetween(\n      options.AutoQueryHourStart,\n      options.AutoQueryMinuteStart,\n      options.AutoQueryHourStop,\n      options.AutoQueryMinuteStop,\n      currentHour,\n      currentMinute,\n    );\n    const queueState = await this.queueQueryService.isPaused();\n\n    if (queueState && isBetween) {\n      await this.queueQueryService.resume();\n    } else if (!queueState && !isBetween) {\n      await this.queueQueryService.pause();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuerySeriesAnswer.html":{"url":"classes/QuerySeriesAnswer.html","title":"class - QuerySeriesAnswer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuerySeriesAnswer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/query-answer/query-series.answer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            QueryAnswer\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Modality\n                            \n                            \n                                NumberOfSeriesRelatedInstances\n                            \n                            \n                                SeriesDescription\n                            \n                            \n                                SeriesInstanceUID\n                            \n                            \n                                SeriesNumber\n                            \n                            \n                                setModality\n                            \n                            \n                                setNumberOfSeriesRelatedInstances\n                            \n                            \n                                setSeriesDescription\n                            \n                            \n                                setSeriesInstanceUID\n                            \n                            \n                                setSeriesNumber\n                            \n                            \n                                setStudyInstanceUID\n                            \n                            \n                                StudyInstanceUID\n                            \n                            \n                                AccessionNumber\n                            \n                            \n                                AnswerId\n                            \n                            \n                                AnswerNumber\n                            \n                            \n                                Level\n                            \n                            \n                                OriginAET\n                            \n                            \n                                PatientID\n                            \n                            \n                                PatientName\n                            \n                            \n                                RequestedProcedureDescription\n                            \n                            \n                                setAccessionNumber\n                            \n                            \n                                setAnswerId\n                            \n                            \n                                setAnswerNumber\n                            \n                            \n                                setLevel\n                            \n                            \n                                setOriginAET\n                            \n                            \n                                setPatientID\n                            \n                            \n                                setPatientName\n                            \n                            \n                                setRequestedProcedureDescription\n                            \n                            \n                                setStudyDate\n                            \n                            \n                                setStudyDescription\n                            \n                            \n                                StudyDate\n                            \n                            \n                                StudyDescription\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(answerId: string, answerNumber: number, originAET: string, patientName: string | null, patientID: string, studyInstanceUID: string, seriesInstanceUID: string, accessionNumber: string | null, studyDescription: string | null, studyDate: string | null, requestedProcedureDescription: string | null, modality: string | null, seriesDescription: string | null, seriesNumber: number | null, numberOfSeriesRelatedInstances: number | null)\n                    \n                \n                        \n                            \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        answerId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        answerNumber\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        originAET\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientName\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientID\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studyInstanceUID\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seriesInstanceUID\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessionNumber\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studyDescription\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studyDate\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        requestedProcedureDescription\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modality\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seriesDescription\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seriesNumber\n                                                  \n                                                        \n                                                                    number | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        numberOfSeriesRelatedInstances\n                                                  \n                                                        \n                                                                    number | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Modality\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NumberOfSeriesRelatedInstances\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SeriesDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SeriesInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SeriesNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setModality\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setNumberOfSeriesRelatedInstances\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSeriesDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSeriesInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSeriesNumber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStudyInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StudyInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-series.answer.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AccessionNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AnswerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:4\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AnswerNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryAnswerType\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OriginAET\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PatientID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PatientName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RequestedProcedureDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAccessionNumber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:64\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAnswerId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:40\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAnswerNumber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:44\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLevel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:48\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setOriginAET\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:52\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPatientID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:60\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPatientName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:56\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRequestedProcedureDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:76\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStudyDate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:72\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStudyDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:68\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StudyDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StudyDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:10\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { QueryAnswerType } from '../../constants/enums';\nimport QueryAnswer from './query.answer';\n\nexport default class QuerySeriesAnswer extends QueryAnswer {\n  StudyInstanceUID: string;\n  SeriesInstanceUID: string;\n  Modality: string | null = null;\n  SeriesDescription: string | null = null;\n  SeriesNumber: number | null = null;\n  NumberOfSeriesRelatedInstances: number | null = null;\n\n  constructor(\n    answerId: string,\n    answerNumber: number,\n    originAET: string,\n    patientName: string|null,\n    patientID: string,\n    studyInstanceUID: string,\n    seriesInstanceUID: string,\n    accessionNumber: string | null = null,\n    studyDescription: string | null = null,\n    studyDate: string | null = null,\n    requestedProcedureDescription: string | null = null,\n    modality: string | null = null,\n    seriesDescription: string | null = null,\n    seriesNumber: number | null = null,\n    numberOfSeriesRelatedInstances: number | null = null,\n  ) {\n    super(\n      QueryAnswerType.LEVEL_SERIES,\n      answerId,\n      answerNumber,\n      originAET,\n      patientName,\n      patientID,\n      accessionNumber,\n      studyDescription,\n      studyDate,\n      requestedProcedureDescription,\n    );\n    this.StudyInstanceUID = studyInstanceUID;\n    this.SeriesInstanceUID = seriesInstanceUID;\n    this.Modality = modality;\n    this.SeriesDescription = seriesDescription;\n    this.SeriesNumber = seriesNumber;\n    this.NumberOfSeriesRelatedInstances = numberOfSeriesRelatedInstances;\n  }\n\n  setStudyInstanceUID = (studyInstanceUID: string): void => {\n    this.StudyInstanceUID = studyInstanceUID;\n  };\n\n  setSeriesInstanceUID = (seriesInstanceUID: string): void => {\n    this.SeriesInstanceUID = seriesInstanceUID;\n  };\n\n  setModality = (modality: string | null): void => {\n    this.Modality = modality;\n  };\n\n  setSeriesDescription = (seriesDescription: string | null): void => {\n    this.SeriesDescription = seriesDescription;\n  };\n\n  setSeriesNumber = (seriesNumber: number | null): void => {\n    this.SeriesNumber = seriesNumber;\n  };\n\n  setNumberOfSeriesRelatedInstances = (\n    numberOfSeriesRelatedInstances: number | null,\n  ): void => {\n    this.NumberOfSeriesRelatedInstances = numberOfSeriesRelatedInstances;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuerySeriesDto.html":{"url":"classes/QuerySeriesDto.html","title":"class - QuerySeriesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuerySeriesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/dto/query-parsed-answer.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Modality\n                            \n                            \n                                    \n                                    \n                                ProtocolName\n                            \n                            \n                                    \n                                    \n                                SeriesDescription\n                            \n                            \n                                    \n                                    \n                                SeriesInstanceUID\n                            \n                            \n                                    \n                                    \n                                SeriesNumber\n                            \n                            \n                                    \n                                    \n                                StudyInstanceUID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Modality\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'modality'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ProtocolName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'protocol_name'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SeriesDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'series_description'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SeriesInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'series_instance_uid'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SeriesNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'series_number'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        StudyInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'study_uid'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEnum, IsObject, IsString } from 'class-validator';\nimport { OrthancLevelType } from '../../constants/enums';\n\nexport class QuerySeriesDto {\n  @ApiProperty({ example: 'study_uid' })\n  @IsString()\n  StudyInstanceUID: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'protocol_name' })\n  @IsString()\n  ProtocolName: string;\n\n  @ApiProperty({ example: 'series_description' })\n  @IsString()\n  SeriesDescription: string;\n\n  @ApiProperty({ example: 'series_number' })\n  @IsString()\n  SeriesNumber: string;\n\n  @ApiProperty({ example: 'series_instance_uid' })\n  @IsString()\n  SeriesInstanceUID: string;\n}\n\nexport class QueryStudyDto {\n  @ApiProperty({ example: 'patient_name' })\n  @IsString()\n  PatientName: string;\n\n  @ApiProperty({ example: 'patient_id' })\n  @IsString()\n  PatientID: string;\n\n  @ApiProperty({ example: 'patient_birthdate' })\n  @IsString()\n  StudyDate: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'study_description' })\n  @IsString()\n  StudyDescription: string;\n\n  @ApiProperty({ example: 'accession_nb' })\n  @IsString()\n  AccessionNb: string;\n\n  @ApiProperty({ example: 'study_instance_uid' })\n  @IsString()\n  StudyInstanceUID: string;\n}\n\nexport class QueryParsedAnswerDto {\n  @ApiProperty({ example: OrthancLevelType.LEVEL_SERIES, enum: OrthancLevelType })\n  @IsEnum(OrthancLevelType)\n  Level: OrthancLevelType;\n\n  @ApiProperty()\n  @IsObject()\n  Query: QuerySeriesDto | QueryStudyDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryStudyAnswer.html":{"url":"classes/QueryStudyAnswer.html","title":"class - QueryStudyAnswer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryStudyAnswer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/query-answer/query-study.answer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            QueryAnswer\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ModalitiesInStudy\n                            \n                            \n                                NumberOfStudyRelatedInstances\n                            \n                            \n                                NumberOfStudyRelatedSeries\n                            \n                            \n                                setModalitiesInStudy\n                            \n                            \n                                setNumberOfStudyRelatedInstances\n                            \n                            \n                                setNumberOfStudyRelatedSeries\n                            \n                            \n                                setStudyInstanceUID\n                            \n                            \n                                StudyInstanceUID\n                            \n                            \n                                AccessionNumber\n                            \n                            \n                                AnswerId\n                            \n                            \n                                AnswerNumber\n                            \n                            \n                                Level\n                            \n                            \n                                OriginAET\n                            \n                            \n                                PatientID\n                            \n                            \n                                PatientName\n                            \n                            \n                                RequestedProcedureDescription\n                            \n                            \n                                setAccessionNumber\n                            \n                            \n                                setAnswerId\n                            \n                            \n                                setAnswerNumber\n                            \n                            \n                                setLevel\n                            \n                            \n                                setOriginAET\n                            \n                            \n                                setPatientID\n                            \n                            \n                                setPatientName\n                            \n                            \n                                setRequestedProcedureDescription\n                            \n                            \n                                setStudyDate\n                            \n                            \n                                setStudyDescription\n                            \n                            \n                                StudyDate\n                            \n                            \n                                StudyDescription\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(answerId: string, answerNumber: number, originAET: string, patientName: string | null, patientID: string, studyInstanceUID: string, accessionNumber: string | null, studyDescription: string | null, studyDate: string | null, requestedProcedureDescription: string | null, modalitiesInStudy: string | null, numberOfStudyRelatedSeries: number | null, numberOfStudyRelatedInstances: number | null)\n                    \n                \n                        \n                            \n                                Defined in src/orthanc/query-answer/query-study.answer.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        answerId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        answerNumber\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        originAET\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientName\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientID\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studyInstanceUID\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessionNumber\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studyDescription\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studyDate\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        requestedProcedureDescription\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalitiesInStudy\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        numberOfStudyRelatedSeries\n                                                  \n                                                        \n                                                                    number | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        numberOfStudyRelatedInstances\n                                                  \n                                                        \n                                                                    number | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ModalitiesInStudy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-study.answer.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NumberOfStudyRelatedInstances\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-study.answer.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NumberOfStudyRelatedSeries\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-study.answer.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setModalitiesInStudy\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-study.answer.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setNumberOfStudyRelatedInstances\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-study.answer.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setNumberOfStudyRelatedSeries\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-study.answer.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStudyInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-study.answer.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StudyInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/query-answer/query-study.answer.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AccessionNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AnswerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:4\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AnswerNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryAnswerType\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OriginAET\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PatientID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PatientName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RequestedProcedureDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAccessionNumber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:64\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAnswerId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:40\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAnswerNumber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:44\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLevel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:48\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setOriginAET\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:52\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPatientID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:60\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPatientName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:56\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRequestedProcedureDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:76\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStudyDate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:72\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStudyDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:68\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StudyDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StudyDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                Inherited from         QueryAnswer\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryAnswer:10\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { QueryAnswerType } from '../../constants/enums';\nimport QueryAnswer from './query.answer';\n\nexport default class QueryStudyAnswer extends QueryAnswer {\n  StudyInstanceUID: string;\n  ModalitiesInStudy: string | null = null;\n  NumberOfStudyRelatedSeries: number | null = null;\n  NumberOfStudyRelatedInstances: number | null = null;\n\n  constructor(\n    answerId: string,\n    answerNumber: number,\n    originAET: string,\n    patientName: string | null,\n    patientID: string,\n    studyInstanceUID: string,\n    accessionNumber: string | null = null,\n    studyDescription: string | null = null,\n    studyDate: string | null = null,\n    requestedProcedureDescription: string | null = null,\n    modalitiesInStudy: string | null = null,\n    numberOfStudyRelatedSeries: number | null = null,\n    numberOfStudyRelatedInstances: number | null = null,\n  ) {\n    super(\n      QueryAnswerType.LEVEL_STUDY,\n      answerId,\n      answerNumber,\n      originAET,\n      patientName,\n      patientID,\n      accessionNumber,\n      studyDescription,\n      studyDate,\n      requestedProcedureDescription,\n    );\n    this.ModalitiesInStudy = modalitiesInStudy;\n    this.StudyInstanceUID = studyInstanceUID;\n    this.NumberOfStudyRelatedSeries = numberOfStudyRelatedSeries;\n    this.NumberOfStudyRelatedInstances = numberOfStudyRelatedInstances;\n  }\n\n  setModalitiesInStudy = (modalitiesInStudy: string | null): void => {\n    this.ModalitiesInStudy = modalitiesInStudy;\n  };\n\n  setStudyInstanceUID = (studyInstanceUID: string): void => {\n    this.StudyInstanceUID = studyInstanceUID;\n  };\n\n  setNumberOfStudyRelatedSeries = (\n    numberOfStudyRelatedSeries: number | null,\n  ): void => {\n    this.NumberOfStudyRelatedSeries = numberOfStudyRelatedSeries;\n  };\n\n  setNumberOfStudyRelatedInstances = (\n    numberOfStudyRelatedInstances: number | null,\n  ): void => {\n    this.NumberOfStudyRelatedInstances = numberOfStudyRelatedInstances;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryStudyDto.html":{"url":"classes/QueryStudyDto.html","title":"class - QueryStudyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryStudyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/dto/query-parsed-answer.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                AccessionNb\n                            \n                            \n                                    \n                                    \n                                Modality\n                            \n                            \n                                    \n                                    \n                                PatientID\n                            \n                            \n                                    \n                                    \n                                PatientName\n                            \n                            \n                                    \n                                    \n                                StudyDate\n                            \n                            \n                                    \n                                    \n                                StudyDescription\n                            \n                            \n                                    \n                                    \n                                StudyInstanceUID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AccessionNb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'accession_nb'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Modality\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'modality'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        PatientID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'patient_id'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        PatientName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'patient_name'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        StudyDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'patient_birthdate'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        StudyDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'study_description'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        StudyInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'study_instance_uid'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orthanc/dto/query-parsed-answer.dto.ts:58\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEnum, IsObject, IsString } from 'class-validator';\nimport { OrthancLevelType } from '../../constants/enums';\n\nexport class QuerySeriesDto {\n  @ApiProperty({ example: 'study_uid' })\n  @IsString()\n  StudyInstanceUID: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'protocol_name' })\n  @IsString()\n  ProtocolName: string;\n\n  @ApiProperty({ example: 'series_description' })\n  @IsString()\n  SeriesDescription: string;\n\n  @ApiProperty({ example: 'series_number' })\n  @IsString()\n  SeriesNumber: string;\n\n  @ApiProperty({ example: 'series_instance_uid' })\n  @IsString()\n  SeriesInstanceUID: string;\n}\n\nexport class QueryStudyDto {\n  @ApiProperty({ example: 'patient_name' })\n  @IsString()\n  PatientName: string;\n\n  @ApiProperty({ example: 'patient_id' })\n  @IsString()\n  PatientID: string;\n\n  @ApiProperty({ example: 'patient_birthdate' })\n  @IsString()\n  StudyDate: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'study_description' })\n  @IsString()\n  StudyDescription: string;\n\n  @ApiProperty({ example: 'accession_nb' })\n  @IsString()\n  AccessionNb: string;\n\n  @ApiProperty({ example: 'study_instance_uid' })\n  @IsString()\n  StudyInstanceUID: string;\n}\n\nexport class QueryParsedAnswerDto {\n  @ApiProperty({ example: OrthancLevelType.LEVEL_SERIES, enum: OrthancLevelType })\n  @IsEnum(OrthancLevelType)\n  Level: OrthancLevelType;\n\n  @ApiProperty()\n  @IsObject()\n  Query: QuerySeriesDto | QueryStudyDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/QueueModule.html":{"url":"modules/QueueModule.html","title":"module - QueueModule","body":"\n                   \n\n\n\n\n    Modules\n    QueueModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_QueueModule\n\n\n\ncluster_QueueModule_providers\n\n\n\n\nQueuesAnonService\n\nQueuesAnonService\n\n\n\nQueueModule\n\nQueueModule\n\nQueueModule -->\n\nQueuesAnonService->QueueModule\n\n\n\n\n\nQueuesDeleteService\n\nQueuesDeleteService\n\nQueueModule -->\n\nQueuesDeleteService->QueueModule\n\n\n\n\n\nQueuesQueryService\n\nQueuesQueryService\n\nQueueModule -->\n\nQueuesQueryService->QueueModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/queues/queue.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            QueuesAnonService\n                        \n                        \n                            QueuesDeleteService\n                        \n                        \n                            QueuesQueryService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            QueuesAnonController\n                        \n                        \n                            QueuesDeleteController\n                        \n                        \n                            QueuesQueryController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { QueuesAnonController } from './anon/queue-anons.controller';\nimport { QueuesDeleteController } from './delete/queue-deletes.controller';\nimport { QueuesQueryController } from './query/queue-query.controller';\nimport { QueuesAnonService } from './anon/queue-anons.service';\nimport { QueuesDeleteService } from './delete/queue-deletes.service';\nimport { QueuesQueryService } from './query/queue-query.service';\n\n@Module({\n  imports: [],\n  providers: [QueuesAnonService, QueuesDeleteService, QueuesQueryService],\n  controllers: [\n    QueuesAnonController,\n    QueuesDeleteController,\n    QueuesQueryController,\n  ],\n})\nexport class QueueModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/QueuesAnonController.html":{"url":"controllers/QueuesAnonController.html","title":"controller - QueuesAnonController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  QueuesAnonController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/anon/queue-anons.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /queues/anon\n            \n\n\n            \n                Description\n            \n            \n                Controller for anon queue task management APIs.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                addAnonJob\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                flushQueue\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getJobs\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getUuid\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                removeAnonJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        addAnonJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    addAnonJob(queuesAnonsDto: QueuesAnonsDto, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Add job', type: Object})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden - User already has jobs'})@UseGuards(AnonymizeGuard)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/queues/anon/queue-anons.controller.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queuesAnonsDto\n                                            \n                                                            QueuesAnonsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        flushQueue\n                        \n                    \n                \n            \n            \n                \n                        \n                    flushQueue()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'queue flushed'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Delete()\n                \n            \n\n                    \n                        \n                            Defined in src/queues/anon/queue-anons.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(uuid: string, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all jobs for the uuid', type: Object})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiParam({name: 'uuid', required: true})@UseGuards(undefined)@Get(':uuid')\n                \n            \n\n                    \n                        \n                            Defined in src/queues/anon/queue-anons.controller.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getUuid\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUuid(userId: number, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all uuids', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiQuery({name: 'userId', required: false})@UseGuards(undefined)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/queues/anon/queue-anons.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        removeAnonJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeAnonJob(uuid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Remove job'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AnonymizeGuard)@Delete(':uuid')\n                \n            \n\n                    \n                        \n                            Defined in src/queues/anon/queue-anons.controller.ts:139\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Delete,\n  ForbiddenException,\n  Get,\n  Param,\n  Post,\n  Query,\n  Req,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiParam,\n  ApiQuery,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\n\nimport { QueuesAnonService } from './queue-anons.service';\nimport { QueuesAnonsDto } from './queue-anons.dto';\n\nimport { AdminGuard, AnonymizeGuard } from '../../guards/roles.guard';\nimport { OrGuard } from '../../guards/or.guard';\nimport { generateRandomUUID } from '../../utils/passwords';\n/**\n * Controller for anon queue task management APIs.\n */\n@ApiTags('queues/anon')\n@Controller('/queues/anon')\nexport class QueuesAnonController {\n  constructor(private readonly QueuesAnonService: QueuesAnonService) {}\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'queue flushed' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Delete()\n  async flushQueue(): Promise {\n    await this.QueuesAnonService.flush();\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Get all uuids', type: [String] })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiQuery({ name: 'userId', required: false })\n  @UseGuards(OrGuard([AdminGuard, AnonymizeGuard]))\n  @Get()\n  async getUuid(\n    @Query('userId') userId: number,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (!userId && user.role.Admin) {\n      return await this.QueuesAnonService.getAllUuids();\n    } else if (userId && (user.userId == userId || user.role.Admin)) {\n      const uuid = await this.QueuesAnonService.getUuidOfUser(userId);\n      return uuid ? [uuid] : [];\n    } else {\n      throw new ForbiddenException(\"You don't have access to this resource\");\n    }\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'Get all jobs for the uuid',\n    type: Object,\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiParam({ name: 'uuid', required: true })\n  @UseGuards(OrGuard([AdminGuard, AnonymizeGuard]))\n  @Get(':uuid')\n  async getJobs(\n    @Param('uuid') uuid: string,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (!uuid) throw new BadRequestException('Uuid is required');\n\n    const uuidOfUser = await this.QueuesAnonService.getUuidOfUser(user.userId);\n\n    if (user.role.Admin || uuidOfUser == uuid) {\n      return await this.QueuesAnonService.getJobsForUuid(uuid);\n    } else {\n      throw new ForbiddenException(\"You don't have access to this resource\");\n    }\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Add job', type: Object })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({\n    status: 403,\n    description: 'Forbidden - User already has jobs',\n  })\n  @UseGuards(AnonymizeGuard)\n  @Post()\n  async addAnonJob(\n    @Body() queuesAnonsDto: QueuesAnonsDto,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (await this.QueuesAnonService.checkIfUserIdHasJobs(user.userId))\n      throw new ForbiddenException('User already has jobs');\n\n    const anonymizes = queuesAnonsDto.Anonymizes;\n    const uuid = generateRandomUUID();\n    anonymizes.forEach((anonymize) => {\n      this.QueuesAnonService.addJob({\n        uuid: uuid,\n        userId: user.userId,\n        anonymize: {\n          orthancStudyID : anonymize.OrthancStudyID,\n          profile : anonymize.Profile,\n          newAccessionNumber : anonymize.NewAccessionNumber,\n          newPatientID : anonymize.NewPatientID,\n          newPatientName : anonymize.NewPatientName,\n          newStudyDescription : anonymize.NewStudyDescription\n        },\n        results: null,\n      });\n    });\n    return { Uuid: uuid };\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Remove job' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AnonymizeGuard)\n  @Delete(':uuid')\n  async removeAnonJob(@Param('uuid') uuid: string): Promise {\n    this.QueuesAnonService.removeJob({ Uuid: uuid });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueuesAnonDto.html":{"url":"classes/QueuesAnonDto.html","title":"class - QueuesAnonDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueuesAnonDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/anon/queue-anons.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                NewAccessionNumber\n                            \n                            \n                                    \n                                    \n                                NewPatientID\n                            \n                            \n                                    \n                                    \n                                NewPatientName\n                            \n                            \n                                    \n                                    \n                                NewStudyDescription\n                            \n                            \n                                    \n                                    \n                                OrthancStudyID\n                            \n                            \n                                    \n                                    \n                                Profile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        NewAccessionNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'new_accession_number'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/anon/queue-anons.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        NewPatientID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'new_patient_id'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/anon/queue-anons.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        NewPatientName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'new_patient_name'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/anon/queue-anons.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        NewStudyDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'new_study_description'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/anon/queue-anons.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        OrthancStudyID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'orthanc_study_id'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/anon/queue-anons.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'profile'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/anon/queue-anons.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsArray, IsObject, IsString } from 'class-validator';\n\nclass QueuesAnonDto {\n  @ApiProperty({ example: 'orthanc_study_id' })\n  @IsString()\n  OrthancStudyID: string;\n\n  @ApiProperty({ example: 'profile' })\n  @IsString()\n  Profile: string;\n\n  @ApiProperty({ example: 'new_accession_number' })\n  @IsString()\n  NewAccessionNumber: string;\n\n  @ApiProperty({ example: 'new_patient_id' })\n  @IsString()\n  NewPatientID: string;\n\n  @ApiProperty({ example: 'new_patient_name' })\n  @IsString()\n  NewPatientName: string;\n\n  @ApiProperty({ example: 'new_study_description' })\n  @IsString()\n  NewStudyDescription: string;\n}\n\nexport class QueuesAnonsDto {\n  @ApiProperty({\n    example: [QueuesAnonDto],\n  })\n  @IsArray()\n  @IsObject({ each: true })\n  Anonymizes: QueuesAnonDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QueuesAnonService.html":{"url":"injectables/QueuesAnonService.html","title":"injectable - QueuesAnonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QueuesAnonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/anon/queue-anons.service.ts\n        \n\n\n            \n                Description\n            \n            \n                implementation of the anonymization queue service.\n\n            \n\n            \n                Extends\n            \n            \n                            AbstractQueueService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                queue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addJob\n                            \n                            \n                                    Async\n                                checkIfUserIdHasJobs\n                            \n                            \n                                    Async\n                                closeQueueConnection\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                    Async\n                                getAllUuids\n                            \n                            \n                                    Async\n                                getJobs\n                            \n                            \n                                    Async\n                                getJobsForUuid\n                            \n                            \n                                    Async\n                                getUuidOfUser\n                            \n                            \n                                    Async\n                                removeJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/queues/anon/queue-anons.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    addJob(data: object)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:14\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkIfUserIdHasJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkIfUserIdHasJobs(userId: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:77\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        closeQueueConnection\n                        \n                    \n                \n            \n            \n                \n                        \n                    closeQueueConnection()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:99\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                        \n                    flush()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:103\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllUuids\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllUuids()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:92\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(uuid: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:40\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getJobsForUuid\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobsForUuid(uuid: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:107\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUuidOfUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUuidOfUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:84\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeJob(data: object | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:25\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        object | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        queue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Queue\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractQueueService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractQueueService:8\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\nimport { Queue } from 'bullmq';\nimport { AbstractQueueService } from '../queue.service';\n/**\n * implementation of the anonymization queue service.\n */\n@Injectable()\nexport class QueuesAnonService extends AbstractQueueService {\n  constructor(configService: ConfigService) {\n    const anonQueue = new Queue('anon', {\n      connection: {\n        host: configService.get('REDIS_ADDRESS', 'localhost'), // REDIS_ADDRESS\n        port: configService.get('REDIS_PORT', 6379), // REDIS_PORT\n      },\n    });\n    super(anonQueue);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueuesAnonsDto.html":{"url":"classes/QueuesAnonsDto.html","title":"class - QueuesAnonsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueuesAnonsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/anon/queue-anons.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                Anonymizes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Anonymizes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueuesAnonDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@IsArray()@IsObject({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/anon/queue-anons.dto.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsArray, IsObject, IsString } from 'class-validator';\n\nclass QueuesAnonDto {\n  @ApiProperty({ example: 'orthanc_study_id' })\n  @IsString()\n  OrthancStudyID: string;\n\n  @ApiProperty({ example: 'profile' })\n  @IsString()\n  Profile: string;\n\n  @ApiProperty({ example: 'new_accession_number' })\n  @IsString()\n  NewAccessionNumber: string;\n\n  @ApiProperty({ example: 'new_patient_id' })\n  @IsString()\n  NewPatientID: string;\n\n  @ApiProperty({ example: 'new_patient_name' })\n  @IsString()\n  NewPatientName: string;\n\n  @ApiProperty({ example: 'new_study_description' })\n  @IsString()\n  NewStudyDescription: string;\n}\n\nexport class QueuesAnonsDto {\n  @ApiProperty({\n    example: [QueuesAnonDto],\n  })\n  @IsArray()\n  @IsObject({ each: true })\n  Anonymizes: QueuesAnonDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/QueuesDeleteController.html":{"url":"controllers/QueuesDeleteController.html","title":"controller - QueuesDeleteController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  QueuesDeleteController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/delete/queue-deletes.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /queues/delete\n            \n\n\n            \n                Description\n            \n            \n                Controller for delete queue task management APIs.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                addDeleteJob\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                flushQueue\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getJobs\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getUuid\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                removeDeleteJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        addDeleteJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    addDeleteJob(queuesDeleteDto: QueuesDeleteDto, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Add job', type: Object})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden - User already has jobs'})@UseGuards(DeleteGuard)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/queues/delete/queue-deletes.controller.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queuesDeleteDto\n                                            \n                                                            QueuesDeleteDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        flushQueue\n                        \n                    \n                \n            \n            \n                \n                        \n                    flushQueue()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'queue flushed'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Delete()\n                \n            \n\n                    \n                        \n                            Defined in src/queues/delete/queue-deletes.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(uuid: string, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all jobs for the uuid', type: Object})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiParam({name: 'uuid', required: true})@UseGuards(undefined)@Get(':uuid')\n                \n            \n\n                    \n                        \n                            Defined in src/queues/delete/queue-deletes.controller.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getUuid\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUuid(userId: number, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all uuids', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiQuery({name: 'userId', required: false})@UseGuards(undefined)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/queues/delete/queue-deletes.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        removeDeleteJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeDeleteJob(uuid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Remove job'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(DeleteGuard)@Delete(':uuid')\n                \n            \n\n                    \n                        \n                            Defined in src/queues/delete/queue-deletes.controller.ts:133\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Delete,\n  ForbiddenException,\n  Get,\n  Param,\n  Post,\n  Query,\n  Req,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiParam,\n  ApiQuery,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\n\nimport { QueuesDeleteService } from './queue-deletes.service';\nimport { AdminGuard, DeleteGuard } from '../../guards/roles.guard';\nimport { QueuesDeleteDto } from './queue-deletes.dto';\nimport { OrGuard } from '../../guards/or.guard';\nimport { generateRandomUUID } from '../../utils/passwords';\n/**\n * Controller for delete queue task management APIs.\n */\n@ApiTags('queues/delete')\n@Controller('/queues/delete')\nexport class QueuesDeleteController {\n  constructor(private readonly QueuesDeleteService: QueuesDeleteService) {}\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'queue flushed' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Delete()\n  async flushQueue(): Promise {\n    await this.QueuesDeleteService.flush();\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Get all uuids', type: [String] })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiQuery({ name: 'userId', required: false })\n  @UseGuards(OrGuard([AdminGuard, DeleteGuard]))\n  @Get()\n  async getUuid(\n    @Query('userId') userId: number,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (!userId && user.role.Admin) {\n      return await this.QueuesDeleteService.getAllUuids();\n    } else if (userId && (user.userId == userId || user.role.Admin)) {\n      const uuid = await this.QueuesDeleteService.getUuidOfUser(userId);\n      return uuid ? [uuid] : [];\n    } else {\n      throw new ForbiddenException(\"You don't have access to this resource\");\n    }\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'Get all jobs for the uuid',\n    type: Object,\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiParam({ name: 'uuid', required: true })\n  @UseGuards(OrGuard([AdminGuard, DeleteGuard]))\n  @Get(':uuid')\n  async getJobs(\n    @Param('uuid') uuid: string,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (!uuid) throw new BadRequestException('Uuid is required');\n\n    const uuidOfUser = await this.QueuesDeleteService.getUuidOfUser(\n      user.userId,\n    );\n\n    if (user.role.Admin || uuidOfUser == uuid) {\n      return await this.QueuesDeleteService.getJobsForUuid(uuid);\n    } else {\n      throw new ForbiddenException(\"You don't have access to this resource\");\n    }\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Add job', type: Object })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({\n    status: 403,\n    description: 'Forbidden - User already has jobs',\n  })\n  @UseGuards(DeleteGuard)\n  @Post()\n  async addDeleteJob(\n    @Body() queuesDeleteDto: QueuesDeleteDto,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (await this.QueuesDeleteService.checkIfUserIdHasJobs(user.userId))\n      throw new ForbiddenException('User already has jobs');\n\n    const orthancSeriesIds = queuesDeleteDto.OrthancSeriesIds;\n    const uuid = generateRandomUUID();\n    orthancSeriesIds.forEach((orthancSeriesId) => {\n      this.QueuesDeleteService.addJob({\n        uuid: uuid,\n        userId: user.userId,\n        orthancSeriesId: orthancSeriesId,\n        results: null,\n      });\n    });\n    return { Uuid: uuid };\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Remove job' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(DeleteGuard)\n  @Delete(':uuid')\n  async removeDeleteJob(@Param('uuid') uuid: string): Promise {\n    this.QueuesDeleteService.removeJob({ Uuid: uuid });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueuesDeleteDto.html":{"url":"classes/QueuesDeleteDto.html","title":"class - QueuesDeleteDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueuesDeleteDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/delete/queue-deletes.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                OrthancSeriesIds\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        OrthancSeriesIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/delete/queue-deletes.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsArray } from 'class-validator';\nexport class QueuesDeleteDto {\n  @ApiProperty({ example: ['series_id_1', 'series_id_2'] })\n  @IsArray()\n  OrthancSeriesIds: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QueuesDeleteService.html":{"url":"injectables/QueuesDeleteService.html","title":"injectable - QueuesDeleteService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QueuesDeleteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/delete/queue-deletes.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Implementation of the Delete Queue service.\n\n            \n\n            \n                Extends\n            \n            \n                            AbstractQueueService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                queue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addJob\n                            \n                            \n                                    Async\n                                checkIfUserIdHasJobs\n                            \n                            \n                                    Async\n                                closeQueueConnection\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                    Async\n                                getAllUuids\n                            \n                            \n                                    Async\n                                getJobs\n                            \n                            \n                                    Async\n                                getJobsForUuid\n                            \n                            \n                                    Async\n                                getUuidOfUser\n                            \n                            \n                                    Async\n                                removeJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/queues/delete/queue-deletes.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    addJob(data: object)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:14\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkIfUserIdHasJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkIfUserIdHasJobs(userId: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:77\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        closeQueueConnection\n                        \n                    \n                \n            \n            \n                \n                        \n                    closeQueueConnection()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:99\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                        \n                    flush()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:103\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllUuids\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllUuids()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:92\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(uuid: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:40\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getJobsForUuid\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobsForUuid(uuid: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:107\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUuidOfUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUuidOfUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:84\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeJob(data: object | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:25\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        object | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        queue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Queue\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractQueueService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractQueueService:8\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { Queue } from 'bullmq';\n\nimport { AbstractQueueService } from '../queue.service';\n/**\n * Implementation of the Delete Queue service.\n */\n@Injectable()\nexport class QueuesDeleteService extends AbstractQueueService {\n  constructor(configService: ConfigService) {\n    const deleteQueue = new Queue('delete', {\n      connection: {\n        host: configService.get('REDIS_ADDRESS', 'localhost'), // REDIS_ADDRESS\n        port: configService.get('REDIS_PORT', 6379), // REDIS_PORT\n      },\n    });\n    super(deleteQueue);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/QueuesQueryController.html":{"url":"controllers/QueuesQueryController.html","title":"controller - QueuesQueryController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  QueuesQueryController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/query/queue-query.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /queues/query\n            \n\n\n            \n                Description\n            \n            \n                Controller for query queue task management APIs.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                addQueryJob\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                flushQueue\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getJobs\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getUuid\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                removeQueryJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        addQueryJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    addQueryJob(queuesQueryDto: QueuesQueryDto, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Add job', type: Object})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden - User already has jobs'})@UseGuards(QueryGuard)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/queues/query/queue-query.controller.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queuesQueryDto\n                                            \n                                                            QueuesQueryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        flushQueue\n                        \n                    \n                \n            \n            \n                \n                        \n                    flushQueue()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'queue flushed'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Delete()\n                \n            \n\n                    \n                        \n                            Defined in src/queues/query/queue-query.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(uuid: string, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all jobs for the uuid', type: Object})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiParam({name: 'uuid', required: true})@UseGuards(undefined)@Get(':uuid')\n                \n            \n\n                    \n                        \n                            Defined in src/queues/query/queue-query.controller.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getUuid\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUuid(userId: number, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all uuids', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiQuery({name: 'userId', required: false})@UseGuards(undefined)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/queues/query/queue-query.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        removeQueryJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeQueryJob(uuid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Remove job'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(QueryGuard)@Delete(':uuid')\n                \n            \n\n                    \n                        \n                            Defined in src/queues/query/queue-query.controller.ts:148\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Delete,\n  ForbiddenException,\n  Get,\n  Param,\n  Post,\n  Query,\n  Req,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiParam,\n  ApiQuery,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\n\nimport { QueuesQueryService } from './queue-query.service';\nimport { AdminGuard, QueryGuard } from '../../guards/roles.guard';\nimport {\n  QueuesQueryDto,\n  QueuesQueryStudyDto,\n  QueuesQuerySeriesDto,\n} from './queue-query.dto';\nimport { OrGuard } from '../../guards/or.guard';\nimport { generateRandomUUID } from '../../utils/passwords';\n/**\n * Controller for query queue task management APIs.\n */\n@ApiTags('queues/query')\n@Controller('/queues/query')\nexport class QueuesQueryController {\n  constructor(private readonly QueuesQueryService: QueuesQueryService) {}\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'queue flushed' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Delete()\n  async flushQueue(): Promise {\n    await this.QueuesQueryService.flush();\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Get all uuids', type: [String] })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiQuery({ name: 'userId', required: false })\n  @UseGuards(OrGuard([AdminGuard, QueryGuard]))\n  @Get()\n  async getUuid(\n    @Query('userId') userId: number,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (!userId && user.role.Admin) {\n      return await this.QueuesQueryService.getAllUuids();\n    } else if (userId && (user.userId == userId || user.role.Admin)) {\n      const uuid = await this.QueuesQueryService.getUuidOfUser(userId);\n      return uuid ? [uuid] : [];\n    } else {\n      throw new ForbiddenException(\"You don't have access to this resource\");\n    }\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'Get all jobs for the uuid',\n    type: Object,\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiParam({ name: 'uuid', required: true })\n  @UseGuards(OrGuard([AdminGuard, QueryGuard]))\n  @Get(':uuid')\n  async getJobs(\n    @Param('uuid') uuid: string,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (!uuid) throw new BadRequestException('Uuid is required');\n\n    const uuidOfUser = await this.QueuesQueryService.getUuidOfUser(user.userId);\n\n    if (user.role.Admin || uuidOfUser == uuid) {\n      return await this.QueuesQueryService.getJobsForUuid(uuid);\n    } else {\n      throw new ForbiddenException(\"You don't have access to this resource\");\n    }\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Add job', type: Object })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({\n    status: 403,\n    description: 'Forbidden - User already has jobs',\n  })\n  @UseGuards(QueryGuard)\n  @Post()\n  async addQueryJob(\n    @Body() queuesQueryDto: QueuesQueryDto,\n    @Req() request: Request,\n  ): Promise {\n    const user = request['user'];\n\n    if (await this.QueuesQueryService.checkIfUserIdHasJobs(user.userId))\n      throw new ForbiddenException('User already has jobs');\n\n    const queuesQueryStudy: QueuesQueryStudyDto[] = queuesQueryDto.Studies;\n    const queuesQuerySeries: QueuesQuerySeriesDto[] = queuesQueryDto.Series;\n\n    if (queuesQuerySeries.length === 0 && queuesQueryStudy.length === 0)\n      throw new BadRequestException('No studies or series found');\n\n    const uuid = generateRandomUUID();\n    queuesQueryStudy.forEach((study) => {\n      this.QueuesQueryService.addJob({\n        uuid: uuid,\n        userId: user.userId,\n        study: study,\n        results: null,\n      });\n    });\n    queuesQuerySeries.forEach((series) => {\n      this.QueuesQueryService.addJob({\n        uuid: uuid,\n        userId: user.userId,\n        series: series,\n        results: null,\n      });\n    });\n    return { Uuid: uuid };\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Remove job' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(QueryGuard)\n  @Delete(':uuid')\n  async removeQueryJob(@Param('uuid') uuid: string): Promise {\n    this.QueuesQueryService.removeJob({ uuid: uuid });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueuesQueryDto.html":{"url":"classes/QueuesQueryDto.html","title":"class - QueuesQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueuesQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/query/queue-query.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                Series\n                            \n                            \n                                    \n                                    \n                                    \n                                Studies\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Series\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QueuesQuerySeriesDto[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, required: false})@IsArray()@IsObject({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Studies\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QueuesQueryStudyDto[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, required: false})@IsArray()@IsObject({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:86\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsArray, IsObject, IsString } from 'class-validator';\n\nexport class QueuesQueryStudyDto {\n  @ApiProperty({ example: 'patient_name' })\n  @IsString()\n  PatientName: string;\n\n  @ApiProperty({ example: 'patient_id' })\n  @IsString()\n  PatientID: string;\n\n  @ApiProperty({ example: 'patient_birthdate' })\n  @IsString()\n  StudyDate: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'study_description' })\n  @IsString()\n  StudyDescription: string;\n\n  @ApiProperty({ example: 'accession_nb' })\n  @IsString()\n  AccessionNb: string;\n\n  @ApiProperty({ example: 'study_instance_uid' })\n  @IsString()\n  StudyInstanceUID: string;\n\n  @ApiProperty({ example: 'aet' })\n  @IsString()\n  Aet: string;\n}\n\nexport class QueuesQuerySeriesDto {\n  @ApiProperty({ example: 'study_uid' })\n  @IsString()\n  StudyInstanceUID: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'protocol_name' })\n  @IsString()\n  ProtocolName: string;\n\n  @ApiProperty({ example: 'series_description' })\n  @IsString()\n  SeriesDescription: string;\n\n  @ApiProperty({ example: 'series_number' })\n  @IsString()\n  SeriesNumber: string;\n\n  @ApiProperty({ example: 'series_instance_uid' })\n  @IsString()\n  SeriesInstanceUID: string;\n\n  @ApiProperty({ example: 'aet' })\n  @IsString()\n  Aet: string;\n}\n\nexport class QueuesQueryDto {\n  @ApiProperty({\n    example: [\n      {\n        PatientName: 'patient_name',\n        PatientID: 'patient_id',\n        StudyDate: 'patient_birthdate',\n        Modality: 'modality',\n        StudyDescription: 'study_description',\n        AccessionNb: 'accession_nb',\n        StudyInstanceUID: 'study_instance_uid',\n        Aet: 'aet',\n      },\n    ],\n    required: false,\n  })\n  @IsArray()\n  @IsObject({ each: true })\n  Studies: QueuesQueryStudyDto[] = [];\n\n  @ApiProperty({\n    example: [\n      {\n        StudyInstanceUID: 'study_uid',\n        Modality: 'modality',\n        ProtocolName: 'protocol_name',\n        SeriesDescription: 'series_description',\n        SeriesNumber: 'series_number',\n        SeriesInstanceUID: 'series_instance_uid',\n        Aet: 'aet',\n      },\n    ],\n    required: false,\n  })\n  @IsArray()\n  @IsObject({ each: true })\n  Series: QueuesQuerySeriesDto[] = [];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueuesQuerySeriesDto.html":{"url":"classes/QueuesQuerySeriesDto.html","title":"class - QueuesQuerySeriesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueuesQuerySeriesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/query/queue-query.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Aet\n                            \n                            \n                                    \n                                    \n                                Modality\n                            \n                            \n                                    \n                                    \n                                ProtocolName\n                            \n                            \n                                    \n                                    \n                                SeriesDescription\n                            \n                            \n                                    \n                                    \n                                SeriesInstanceUID\n                            \n                            \n                                    \n                                    \n                                SeriesNumber\n                            \n                            \n                                    \n                                    \n                                StudyInstanceUID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Aet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'aet'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Modality\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'modality'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ProtocolName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'protocol_name'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SeriesDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'series_description'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SeriesInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'series_instance_uid'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SeriesNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'series_number'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        StudyInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'study_uid'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsArray, IsObject, IsString } from 'class-validator';\n\nexport class QueuesQueryStudyDto {\n  @ApiProperty({ example: 'patient_name' })\n  @IsString()\n  PatientName: string;\n\n  @ApiProperty({ example: 'patient_id' })\n  @IsString()\n  PatientID: string;\n\n  @ApiProperty({ example: 'patient_birthdate' })\n  @IsString()\n  StudyDate: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'study_description' })\n  @IsString()\n  StudyDescription: string;\n\n  @ApiProperty({ example: 'accession_nb' })\n  @IsString()\n  AccessionNb: string;\n\n  @ApiProperty({ example: 'study_instance_uid' })\n  @IsString()\n  StudyInstanceUID: string;\n\n  @ApiProperty({ example: 'aet' })\n  @IsString()\n  Aet: string;\n}\n\nexport class QueuesQuerySeriesDto {\n  @ApiProperty({ example: 'study_uid' })\n  @IsString()\n  StudyInstanceUID: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'protocol_name' })\n  @IsString()\n  ProtocolName: string;\n\n  @ApiProperty({ example: 'series_description' })\n  @IsString()\n  SeriesDescription: string;\n\n  @ApiProperty({ example: 'series_number' })\n  @IsString()\n  SeriesNumber: string;\n\n  @ApiProperty({ example: 'series_instance_uid' })\n  @IsString()\n  SeriesInstanceUID: string;\n\n  @ApiProperty({ example: 'aet' })\n  @IsString()\n  Aet: string;\n}\n\nexport class QueuesQueryDto {\n  @ApiProperty({\n    example: [\n      {\n        PatientName: 'patient_name',\n        PatientID: 'patient_id',\n        StudyDate: 'patient_birthdate',\n        Modality: 'modality',\n        StudyDescription: 'study_description',\n        AccessionNb: 'accession_nb',\n        StudyInstanceUID: 'study_instance_uid',\n        Aet: 'aet',\n      },\n    ],\n    required: false,\n  })\n  @IsArray()\n  @IsObject({ each: true })\n  Studies: QueuesQueryStudyDto[] = [];\n\n  @ApiProperty({\n    example: [\n      {\n        StudyInstanceUID: 'study_uid',\n        Modality: 'modality',\n        ProtocolName: 'protocol_name',\n        SeriesDescription: 'series_description',\n        SeriesNumber: 'series_number',\n        SeriesInstanceUID: 'series_instance_uid',\n        Aet: 'aet',\n      },\n    ],\n    required: false,\n  })\n  @IsArray()\n  @IsObject({ each: true })\n  Series: QueuesQuerySeriesDto[] = [];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QueuesQueryService.html":{"url":"injectables/QueuesQueryService.html","title":"injectable - QueuesQueryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QueuesQueryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/query/queue-query.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Implementation of the Query Queue service.\n\n            \n\n            \n                Extends\n            \n            \n                            AbstractQueueService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                queue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                isPaused\n                            \n                            \n                                    Async\n                                pause\n                            \n                            \n                                    Async\n                                resume\n                            \n                            \n                                    Async\n                                addJob\n                            \n                            \n                                    Async\n                                checkIfUserIdHasJobs\n                            \n                            \n                                    Async\n                                closeQueueConnection\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                    Async\n                                getAllUuids\n                            \n                            \n                                    Async\n                                getJobs\n                            \n                            \n                                    Async\n                                getJobsForUuid\n                            \n                            \n                                    Async\n                                getUuidOfUser\n                            \n                            \n                                    Async\n                                removeJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/queues/query/queue-query.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        isPaused\n                        \n                    \n                \n            \n            \n                \n                        \n                    isPaused()\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/query/queue-query.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        pause\n                        \n                    \n                \n            \n            \n                \n                        \n                    pause()\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/query/queue-query.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        resume\n                        \n                    \n                \n            \n            \n                \n                        \n                    resume()\n                \n            \n\n\n                    \n                        \n                            Defined in src/queues/query/queue-query.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    addJob(data: object)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:14\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkIfUserIdHasJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkIfUserIdHasJobs(userId: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:77\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        closeQueueConnection\n                        \n                    \n                \n            \n            \n                \n                        \n                    closeQueueConnection()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:99\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                        \n                    flush()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:103\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllUuids\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllUuids()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:92\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getJobs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobs(uuid: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:40\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getJobsForUuid\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJobsForUuid(uuid: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:107\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUuidOfUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUuidOfUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:84\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeJob(data: object | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueService:25\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        object | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        queue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Queue\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractQueueService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractQueueService:8\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { Queue } from 'bullmq';\n\nimport { AbstractQueueService } from '../queue.service';\n/**\n * Implementation of the Query Queue service.\n */\n@Injectable()\nexport class QueuesQueryService extends AbstractQueueService {\n  constructor(configService: ConfigService) {\n    const queryQueue = new Queue('query', {\n      connection: {\n        host: configService.get('REDIS_ADDRESS', 'localhost'), // REDIS_ADDRESS\n        port: configService.get('REDIS_PORT', 6379), // REDIS_PORT\n      },\n    });\n    queryQueue.pause();\n    super(queryQueue);\n  }\n\n  async pause(): Promise {\n    await this.queue.pause();\n  }\n\n  async resume(): Promise {\n    await this.queue.resume();\n  }\n\n  async isPaused(): Promise {\n    return await this.queue.isPaused();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueuesQueryStudyDto.html":{"url":"classes/QueuesQueryStudyDto.html","title":"class - QueuesQueryStudyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueuesQueryStudyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queues/query/queue-query.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                AccessionNb\n                            \n                            \n                                    \n                                    \n                                Aet\n                            \n                            \n                                    \n                                    \n                                Modality\n                            \n                            \n                                    \n                                    \n                                PatientID\n                            \n                            \n                                    \n                                    \n                                PatientName\n                            \n                            \n                                    \n                                    \n                                StudyDate\n                            \n                            \n                                    \n                                    \n                                StudyDescription\n                            \n                            \n                                    \n                                    \n                                StudyInstanceUID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AccessionNb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'accession_nb'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Aet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'aet'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Modality\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'modality'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        PatientID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'patient_id'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        PatientName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'patient_name'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        StudyDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'patient_birthdate'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        StudyDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'study_description'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        StudyInstanceUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'study_instance_uid'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/queues/query/queue-query.dto.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsArray, IsObject, IsString } from 'class-validator';\n\nexport class QueuesQueryStudyDto {\n  @ApiProperty({ example: 'patient_name' })\n  @IsString()\n  PatientName: string;\n\n  @ApiProperty({ example: 'patient_id' })\n  @IsString()\n  PatientID: string;\n\n  @ApiProperty({ example: 'patient_birthdate' })\n  @IsString()\n  StudyDate: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'study_description' })\n  @IsString()\n  StudyDescription: string;\n\n  @ApiProperty({ example: 'accession_nb' })\n  @IsString()\n  AccessionNb: string;\n\n  @ApiProperty({ example: 'study_instance_uid' })\n  @IsString()\n  StudyInstanceUID: string;\n\n  @ApiProperty({ example: 'aet' })\n  @IsString()\n  Aet: string;\n}\n\nexport class QueuesQuerySeriesDto {\n  @ApiProperty({ example: 'study_uid' })\n  @IsString()\n  StudyInstanceUID: string;\n\n  @ApiProperty({ example: 'modality' })\n  @IsString()\n  Modality: string;\n\n  @ApiProperty({ example: 'protocol_name' })\n  @IsString()\n  ProtocolName: string;\n\n  @ApiProperty({ example: 'series_description' })\n  @IsString()\n  SeriesDescription: string;\n\n  @ApiProperty({ example: 'series_number' })\n  @IsString()\n  SeriesNumber: string;\n\n  @ApiProperty({ example: 'series_instance_uid' })\n  @IsString()\n  SeriesInstanceUID: string;\n\n  @ApiProperty({ example: 'aet' })\n  @IsString()\n  Aet: string;\n}\n\nexport class QueuesQueryDto {\n  @ApiProperty({\n    example: [\n      {\n        PatientName: 'patient_name',\n        PatientID: 'patient_id',\n        StudyDate: 'patient_birthdate',\n        Modality: 'modality',\n        StudyDescription: 'study_description',\n        AccessionNb: 'accession_nb',\n        StudyInstanceUID: 'study_instance_uid',\n        Aet: 'aet',\n      },\n    ],\n    required: false,\n  })\n  @IsArray()\n  @IsObject({ each: true })\n  Studies: QueuesQueryStudyDto[] = [];\n\n  @ApiProperty({\n    example: [\n      {\n        StudyInstanceUID: 'study_uid',\n        Modality: 'modality',\n        ProtocolName: 'protocol_name',\n        SeriesDescription: 'series_description',\n        SeriesNumber: 'series_number',\n        SeriesInstanceUID: 'series_instance_uid',\n        Aet: 'aet',\n      },\n    ],\n    required: false,\n  })\n  @IsArray()\n  @IsObject({ each: true })\n  Series: QueuesQuerySeriesDto[] = [];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ReadAllGuard.html":{"url":"guards/ReadAllGuard.html","title":"guard - ReadAllGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    ReadAllGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard cheking user has readall permission\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:137\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\n/**\n * Guard cheking user has import permission\n */\n@Injectable()\nexport class ImportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Import;\n  }\n}\n\n/**\n * Guard cheking user has anonymize permission\n */\n@Injectable()\nexport class AnonymizeGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Anonymize;\n  }\n}\n\n/**\n * Guard cheking user has export permission\n */\n@Injectable()\nexport class ExportGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Export;\n  }\n}\n\n/**\n * Guard cheking user has query permission\n */\n@Injectable()\nexport class QueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Query;\n  }\n}\n\n/**\n * Guard cheking user has autoquery permission\n */\n@Injectable()\nexport class AutoQueryGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoQuery;\n  }\n}\n\n/**\n * Guard cheking user has delete permission\n */\n@Injectable()\nexport class DeleteGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Delete;\n  }\n}\n\n/**\n * Guard cheking user has admin permission\n */\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Admin;\n  }\n}\n\n/**\n * Guard cheking user has modify permission\n */\n@Injectable()\nexport class ModifyGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.Modify;\n  }\n}\n\n/**\n * Guard cheking user has cdBurner permission\n */\n@Injectable()\nexport class CdBurnerGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.CdBurner;\n  }\n}\n\n/**\n * Guard cheking user has autorouting permission\n */\n@Injectable()\nexport class AutoRoutingGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.AutoRouting;\n  }\n}\n\n/**\n * Guard cheking user has readall permission\n */\n@Injectable()\nexport class ReadAllGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return user && user.role.ReadAll;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/register.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Email\n                            \n                            \n                                    \n                                    \n                                Firstname\n                            \n                            \n                                    \n                                    \n                                Lastname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'mail@example.com'})@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'firstname'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'lastname'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty } from 'class-validator';\n\nexport class RegisterDto {\n  @ApiProperty({ example: 'mail@example.com' })\n  @IsEmail()\n  Email: string;\n\n  @ApiProperty({ example: 'firstname' })\n  @IsNotEmpty()\n  Firstname: string;\n\n  @ApiProperty({ example: 'lastname' })\n  @IsNotEmpty()\n  Lastname: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Role.html":{"url":"entities/Role.html","title":"entity - Role","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/role.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Admin\n                            \n                            \n                                    \n                                    \n                                Anonymize\n                            \n                            \n                                    \n                                    \n                                AutoQuery\n                            \n                            \n                                    \n                                    \n                                AutoRouting\n                            \n                            \n                                    \n                                    \n                                CdBurner\n                            \n                            \n                                    \n                                    \n                                Delete\n                            \n                            \n                                    \n                                    \n                                Export\n                            \n                            \n                                    \n                                    \n                                Import\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                Labels\n                            \n                            \n                                    \n                                    \n                                Modify\n                            \n                            \n                                    \n                                    \n                                Name\n                            \n                            \n                                    \n                                    \n                                Query\n                            \n                            \n                                    \n                                    \n                                ReadAll\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Admin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'admin'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Anonymize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'anonymize'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'auto_query'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AutoRouting\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'auto_routing'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        CdBurner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'cd_burner'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Delete\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'delete'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Export\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'export'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Import\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'import'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        Labels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Label[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, required: false, default: undefined})@ManyToMany(undefined, label => label.Roles)@JoinTable({name: 'role_label'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Modify\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'modify'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'admin'})@PrimaryColumn({name: 'name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Query\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'query'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ReadAll\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})@Column({default: false, name: 'read_all'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/role.entity.ts:53\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Label } from '../labels/label.entity';\nimport { Entity, Column, PrimaryColumn, ManyToMany, JoinTable } from 'typeorm';\n\n@Entity()\nexport class Role {\n  @ApiProperty({ example: 'admin' })\n  @PrimaryColumn({ name: 'name' })\n  Name: string;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'import' })\n  Import: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'anonymize' })\n  Anonymize: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'export' })\n  Export: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'query' })\n  Query: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'auto_query' })\n  AutoQuery: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'delete' })\n  Delete: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'admin' })\n  Admin: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'modify' })\n  Modify: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'cd_burner' })\n  CdBurner: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'auto_routing' })\n  AutoRouting: boolean;\n\n  @ApiProperty({ example: true })\n  @Column({ default: false, name: 'read_all' })\n  ReadAll: boolean;\n\n  @ApiProperty({ example: [], required: false, default: [] })\n  @ManyToMany(() => Label, (label) => label.Roles)\n  @JoinTable({ name: 'role_label' })\n  Labels?: Label[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RolesController.html":{"url":"controllers/RolesController.html","title":"controller - RolesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RolesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /roles\n            \n\n\n            \n                Description\n            \n            \n                Controller for the roles related APIs.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                addLabelToRole\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                createRole\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                delete\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getRoleLabels\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                removeLabelFromRole\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        addLabelToRole\n                        \n                    \n                \n            \n            \n                \n                        \n                    addLabelToRole(roleName: string, labelDto: LabelDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Add label to role'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiBody({schema: undefined})@UseGuards(undefined)@Post('/:roleName/labels')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roleName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                labelDto\n                                            \n                                                            LabelDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        createRole\n                        \n                    \n                \n            \n            \n                \n                        \n                    createRole(createRoleDto: CreateRoleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 201, description: 'Create role'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@ApiBody({type: CreateRoleDto})@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(name: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Delete role'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Delete('/:name')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(withLabels: WithLabels)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all roles', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                withLabels\n                                            \n                                                            WithLabels\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(name: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get role by name', type: Role})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Get('/:name')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getRoleLabels\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRoleLabels(roleName: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all labels from role'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(undefined)@Get('/:roleName/labels')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roleName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        removeLabelFromRole\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeLabelFromRole(roleName: string, label: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Remove label from role'})@ApiResponse({status: 404, description: 'Label does not exist for this role'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(undefined)@Delete('/:roleName/labels/:label')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:150\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roleName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                label\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(name: string, createRoleDto: CreateRoleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Update role'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Put('/:name')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Post,\n  Param,\n  Delete,\n  Put,\n  ForbiddenException,\n  ConflictException,\n  BadRequestException,\n  UseGuards,\n  Query,\n  NotFoundException,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiBody, ApiResponse, ApiTags } from '@nestjs/swagger';\n\nimport { UsersService } from '../users/users.service';\nimport { LabelsService } from '../labels/labels.service';\nimport { RolesService } from './roles.service';\n\nimport { Role } from './role.entity';\n\nimport { AdminGuard } from '../guards/roles.guard';\nimport { OrGuard } from '../guards/or.guard';\nimport { CheckUserRoleGuard } from '../guards/check-user-role.guard';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { GetRoleDto } from './dto/get-role.dto';\nimport { WithLabels } from './dto/with-labels.dto';\nimport { LabelDto } from '../labels/labels.dto';\n/**\n * Controller for the roles related APIs.\n */\n@ApiTags('roles')\n@Controller('/roles')\nexport class RolesController {\n  constructor(\n    private readonly roleService: RolesService,\n    private readonly labelService: LabelsService,\n    private readonly userService: UsersService,\n  ) {}\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'Get all roles',\n    type: [GetRoleDto],\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Get()\n  async findAll(@Query() withLabels: WithLabels): Promise {\n    if (withLabels.WithLabels)\n      return await this.roleService.findAllWithLabels();\n    return await this.roleService.findAll();\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Get role by name', type: Role })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Get('/:name')\n  async findOne(@Param('name') name: string): Promise {\n    const role = await this.roleService.findOneByOrFail(name);\n    return role;\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 201, description: 'Create role' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @ApiBody({ type: CreateRoleDto })\n  @Post()\n  async createRole(@Body() createRoleDto: CreateRoleDto): Promise {\n    if (createRoleDto.Name == undefined)\n      throw new BadRequestException(\"Missing Primary Key 'name'\");\n\n    if (await this.roleService.isRoleExist(createRoleDto.Name))\n      throw new ConflictException('Role with this name already exists');\n\n    await this.roleService.create(createRoleDto);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Delete role' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Delete('/:name')\n  async delete(@Param('name') name: string): Promise {\n    const role = await this.roleService.findOneByOrFail(name);\n\n    if (await this.userService.isRoleUsed(role.Name))\n      throw new ForbiddenException('Role is used');\n\n    return this.roleService.remove(name);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Update role' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Put('/:name')\n  async update(\n    @Param('name') name: string,\n    @Body() createRoleDto: CreateRoleDto,\n  ): Promise {\n    if ((await this.roleService.isRoleExist(name)) == false)\n      throw new NotFoundException('Role not found');\n\n    await this.roleService.update(name, createRoleDto);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Add label to role' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiBody({ schema: { example: { Name: 'label' } } })\n  @UseGuards(OrGuard([AdminGuard, CheckUserRoleGuard]))\n  @Post('/:roleName/labels')\n  async addLabelToRole(\n    @Param('roleName') roleName: string,\n    @Body() labelDto: LabelDto,\n  ): Promise {\n    await this.roleService.findOneByOrFail(roleName);\n    if ((await this.labelService.isLabelExist(labelDto.Name)) == false)\n      throw new NotFoundException('Label not found');\n\n    await this.roleService.addRoleLabel(roleName, labelDto.Name);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Get all labels from role' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(OrGuard([AdminGuard, CheckUserRoleGuard]))\n  @Get('/:roleName/labels')\n  async getRoleLabels(@Param('roleName') roleName: string): Promise {\n    return (await this.roleService.getRoleLabels(roleName)).map(\n      (label) => label.Name,\n    );\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Remove label from role' })\n  @ApiResponse({\n    status: 404,\n    description: 'Label does not exist for this role',\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(OrGuard([AdminGuard, CheckUserRoleGuard]))\n  @Delete('/:roleName/labels/:label')\n  async removeLabelFromRole(\n    @Param('roleName') roleName: string,\n    @Param('label') label: string,\n  ): Promise {\n    await this.roleService.findOneByOrFail(roleName);\n    await this.labelService.findOneByOrFail(label);\n\n    await this.roleService.removeRoleLabel(roleName, label);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RolesModule.html":{"url":"modules/RolesModule.html","title":"module - RolesModule","body":"\n                   \n\n\n\n\n    Modules\n    RolesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_exports\n\n\n\ncluster_RolesModule_providers\n\n\n\n\nRolesService \n\nRolesService \n\n\n\nRolesModule\n\nRolesModule\n\nRolesService  -->\n\nRolesModule->RolesService \n\n\n\n\n\nLabelsService\n\nLabelsService\n\nRolesModule -->\n\nLabelsService->RolesModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nRolesModule -->\n\nUsersService->RolesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/roles/roles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LabelsService\n                        \n                        \n                            RolesService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RolesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RolesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { RolesService } from './roles.service';\nimport { RolesController } from './roles.controller';\n\nimport { Role } from './role.entity';\nimport { Label } from '../labels/label.entity';\nimport { LabelsService } from '../labels/labels.service';\nimport { UsersService } from '../users/users.service';\nimport { User } from '../users/user.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Role, Label, User])],\n  providers: [RolesService, LabelsService, UsersService],\n  controllers: [RolesController],\n  exports: [RolesService],\n})\nexport class RolesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RolesService.html":{"url":"injectables/RolesService.html","title":"injectable - RolesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RolesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Database access to role related data.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addRoleLabel\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findAllWithLabels\n                            \n                            \n                                    Async\n                                findOneByOrFail\n                            \n                            \n                                    Async\n                                getRoleLabels\n                            \n                            \n                                    Async\n                                isRoleExist\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                removeRoleLabel\n                            \n                            \n                                    Public\n                                    Async\n                                seed\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rolesRepository: Repository, labelsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/roles/roles.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rolesRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        labelsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addRoleLabel\n                        \n                    \n                \n            \n            \n                \n                        \n                    addRoleLabel(roleName: string, labelName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roleName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                labelName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(role: Role)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                role\n                                            \n                                                            Role\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllWithLabels\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllWithLabels()\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByOrFail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByOrFail(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getRoleLabels\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRoleLabels(roleName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roleName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        isRoleExist\n                        \n                    \n                \n            \n            \n                \n                        \n                    isRoleExist(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeRoleLabel\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeRoleLabel(roleName: string, labelName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roleName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                labelName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        seed\n                        \n                    \n                \n            \n            \n                \n                        \n                    seed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(name: string, role: Role)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                role\n                                            \n                                                            Role\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { Role } from './role.entity';\nimport { Label } from '../labels/label.entity';\n/**\n * Database access to role related data.\n */\n@Injectable()\nexport class RolesService {\n  constructor(\n    @InjectRepository(Role)\n    private rolesRepository: Repository,\n    @InjectRepository(Label)\n    private labelsRepository: Repository,\n  ) {}\n\n  async findAll(): Promise {\n    return await this.rolesRepository.find();\n  }\n\n  async findAllWithLabels(): Promise {\n    const allRoles = await this.rolesRepository.find({\n      relations: ['Labels'],\n    });\n    return allRoles;\n  }\n\n  async findOneByOrFail(name: string): Promise {\n    return await this.rolesRepository.findOneByOrFail({ Name: name });\n  }\n\n  async isRoleExist(name: string): Promise {\n    return (await this.rolesRepository.findOneBy({ Name: name })) != null;\n  }\n\n  async create(role: Role): Promise {\n    await this.rolesRepository.save(role);\n  }\n\n  async remove(name: string): Promise {\n    await this.rolesRepository.delete(name);\n  }\n\n  async update(name: string, role: Role): Promise {\n    await this.rolesRepository.update(name, role);\n  }\n\n  async addRoleLabel(roleName: string, labelName: string): Promise {\n    const role = await this.rolesRepository.findOneOrFail({\n      where: { Name: roleName },\n      relations: ['Labels'],\n    });\n    const label = await this.labelsRepository.findOneOrFail({\n      where: { Name: labelName },\n    });\n    if (role.Labels.find((label) => label.Name == labelName))\n      throw new ConflictException('Label already exists for role');\n\n    role.Labels.push(label);\n    await this.rolesRepository.save(role);\n  }\n\n  async getRoleLabels(roleName: string): Promise {\n    const role = await this.rolesRepository.findOneOrFail({\n      where: { Name: roleName },\n      relations: ['Labels'],\n    });\n    return role.Labels;\n  }\n\n  async removeRoleLabel(roleName: string, labelName: string): Promise {\n    const role = await this.rolesRepository.findOneOrFail({\n      where: { Name: roleName },\n      relations: ['Labels'],\n    });\n\n    role.Labels = role.Labels.filter((label) => label.Name != labelName);\n    await this.rolesRepository.save(role);\n  }\n\n  /* istanbul ignore next */\n  public async seed() {\n    const admin = this.rolesRepository.create({\n      Name: 'Admin',\n      Import: true,\n      Anonymize: true,\n      Export: true,\n      Query: true,\n      AutoQuery: true,\n      Delete: true,\n      Admin: true,\n      Modify: true,\n      CdBurner: true,\n      AutoRouting: true,\n      ReadAll: true,\n      Labels: [],\n    });\n\n    const user = this.rolesRepository.create({\n      Name: 'User',\n      Import: true,\n      Anonymize: true,\n      Export: true,\n      Query: true,\n      AutoQuery: true,\n      Delete: true,\n      Admin: false,\n      Modify: true,\n      CdBurner: true,\n      AutoRouting: true,\n      ReadAll: true,\n      Labels: [],\n    });\n\n    await this.rolesRepository.insert([admin, user]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Router.html":{"url":"classes/Router.html","title":"class - Router","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Router\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/autorouting/autorouting.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                Destinations\n                            \n                            \n                                    \n                                    \n                                    \n                                RuleCondition\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                Rules\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        Destinations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Destination[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Column({name: 'destinations', type: 'jsonb'})@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        RuleCondition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RuleCondition\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Column({name: 'rule_condition'})@IsEnum(RuleCondition)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        Rules\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Rule[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Column({name: 'rules', type: 'jsonb'})@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:74\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsBoolean,\n  IsEnum,\n  IsString,\n  Validate,\n  ValidateNested,\n} from 'class-validator';\nimport {\n  AutoroutingEventType,\n  Condition,\n  DestinationType,\n  DicomTag,\n  RuleCondition,\n  ValueRepresentation,\n} from './autorouting.enum';\nimport { Type } from 'class-transformer';\nimport { IsNumberOrString } from '../validators/string-or-number';\n\nexport class Rule {\n  @ApiProperty({ example: DicomTag.PATIENT_NAME })\n  @Column({ name: 'dicom_tag' })\n  @IsEnum(DicomTag)\n  DicomTag: DicomTag;\n\n  @ApiProperty({ example: ValueRepresentation.STRING })\n  @Column({ name: 'value_representation' })\n  @IsEnum(ValueRepresentation)\n  ValueRepresentation: ValueRepresentation;\n\n  @ApiProperty()\n  @Column({ name: 'value' })\n  @Validate(IsNumberOrString)\n  Value: string | number;\n\n  @ApiProperty({ example: Condition.EQUALS })\n  @Column({ name: 'condition' })\n  @IsEnum(Condition)\n  Condition: Condition;\n}\n\nexport class Destination {\n  @ApiProperty({ example: DestinationType.AET })\n  @Column({ name: 'type' })\n  @IsEnum(DestinationType)\n  Destination: DestinationType;\n\n  @ApiProperty()\n  @Column({ name: 'name' })\n  @IsString()\n  Name: string;\n}\n\nexport class Router {\n  @ApiProperty({ example: RuleCondition.AND })\n  @Column({ name: 'rule_condition' })\n  @IsEnum(RuleCondition)\n  RuleCondition: RuleCondition;\n\n  @ApiProperty({\n    example: [\n      {\n        DicomTag: DicomTag.PATIENT_NAME,\n        ValueRepresentation: ValueRepresentation.STRING,\n        Value: 'value',\n        Condition: Condition.EQUALS,\n      },\n    ],\n  })\n  @Column({ name: 'rules', type: 'jsonb' })\n  @ValidateNested({ each: true })\n  @Type(() => Rule)\n  Rules: Rule[];\n\n  @ApiProperty({\n    example: [\n      {\n        Destination: DestinationType.AET,\n        Name: 'value',\n      },\n    ],\n  })\n  @Column({ name: 'destinations', type: 'jsonb' })\n  @ValidateNested({ each: true })\n  @Type(() => Destination)\n  Destinations: Destination[];\n}\n\n@Entity()\nexport class Autorouting {\n  @ApiProperty()\n  @PrimaryGeneratedColumn({ name: 'id' })\n  Id?: number;\n\n  @ApiProperty()\n  @Column({ name: 'name' })\n  @IsString()\n  Name: string;\n\n  @ApiProperty({ example: AutoroutingEventType.NEW_INSTANCE })\n  @Column({ name: 'event_type' })\n  @IsEnum(AutoroutingEventType)\n  EventType: AutoroutingEventType;\n\n  @ApiProperty()\n  @Column({ name: 'activated' })\n  @IsBoolean()\n  Activated: boolean;\n\n  @ApiProperty()\n  @Column({ name: 'router', type: 'jsonb' })\n  @ValidateNested()\n  @Type(() => Router)\n  Router: Router;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Rule.html":{"url":"classes/Rule.html","title":"class - Rule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Rule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/autorouting/autorouting.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                Condition\n                            \n                            \n                                    \n                                    \n                                    \n                                DicomTag\n                            \n                            \n                                    \n                                    \n                                    \n                                Value\n                            \n                            \n                                    \n                                    \n                                    \n                                ValueRepresentation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Condition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Condition\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Column({name: 'condition'})@IsEnum(Condition)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        DicomTag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DicomTag\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Column({name: 'dicom_tag'})@IsEnum(DicomTag)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Value\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column({name: 'value'})@Validate(IsNumberOrString)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        ValueRepresentation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ValueRepresentation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Column({name: 'value_representation'})@IsEnum(ValueRepresentation)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/autorouting/autorouting.entity.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsBoolean,\n  IsEnum,\n  IsString,\n  Validate,\n  ValidateNested,\n} from 'class-validator';\nimport {\n  AutoroutingEventType,\n  Condition,\n  DestinationType,\n  DicomTag,\n  RuleCondition,\n  ValueRepresentation,\n} from './autorouting.enum';\nimport { Type } from 'class-transformer';\nimport { IsNumberOrString } from '../validators/string-or-number';\n\nexport class Rule {\n  @ApiProperty({ example: DicomTag.PATIENT_NAME })\n  @Column({ name: 'dicom_tag' })\n  @IsEnum(DicomTag)\n  DicomTag: DicomTag;\n\n  @ApiProperty({ example: ValueRepresentation.STRING })\n  @Column({ name: 'value_representation' })\n  @IsEnum(ValueRepresentation)\n  ValueRepresentation: ValueRepresentation;\n\n  @ApiProperty()\n  @Column({ name: 'value' })\n  @Validate(IsNumberOrString)\n  Value: string | number;\n\n  @ApiProperty({ example: Condition.EQUALS })\n  @Column({ name: 'condition' })\n  @IsEnum(Condition)\n  Condition: Condition;\n}\n\nexport class Destination {\n  @ApiProperty({ example: DestinationType.AET })\n  @Column({ name: 'type' })\n  @IsEnum(DestinationType)\n  Destination: DestinationType;\n\n  @ApiProperty()\n  @Column({ name: 'name' })\n  @IsString()\n  Name: string;\n}\n\nexport class Router {\n  @ApiProperty({ example: RuleCondition.AND })\n  @Column({ name: 'rule_condition' })\n  @IsEnum(RuleCondition)\n  RuleCondition: RuleCondition;\n\n  @ApiProperty({\n    example: [\n      {\n        DicomTag: DicomTag.PATIENT_NAME,\n        ValueRepresentation: ValueRepresentation.STRING,\n        Value: 'value',\n        Condition: Condition.EQUALS,\n      },\n    ],\n  })\n  @Column({ name: 'rules', type: 'jsonb' })\n  @ValidateNested({ each: true })\n  @Type(() => Rule)\n  Rules: Rule[];\n\n  @ApiProperty({\n    example: [\n      {\n        Destination: DestinationType.AET,\n        Name: 'value',\n      },\n    ],\n  })\n  @Column({ name: 'destinations', type: 'jsonb' })\n  @ValidateNested({ each: true })\n  @Type(() => Destination)\n  Destinations: Destination[];\n}\n\n@Entity()\nexport class Autorouting {\n  @ApiProperty()\n  @PrimaryGeneratedColumn({ name: 'id' })\n  Id?: number;\n\n  @ApiProperty()\n  @Column({ name: 'name' })\n  @IsString()\n  Name: string;\n\n  @ApiProperty({ example: AutoroutingEventType.NEW_INSTANCE })\n  @Column({ name: 'event_type' })\n  @IsEnum(AutoroutingEventType)\n  EventType: AutoroutingEventType;\n\n  @ApiProperty()\n  @Column({ name: 'activated' })\n  @IsBoolean()\n  Activated: boolean;\n\n  @ApiProperty()\n  @Column({ name: 'router', type: 'jsonb' })\n  @ValidateNested()\n  @Type(() => Router)\n  Router: Router;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SeederModule.html":{"url":"modules/SeederModule.html","title":"module - SeederModule","body":"\n                   \n\n\n\n\n    Modules\n    SeederModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SeederModule\n\n\n\ncluster_SeederModule_providers\n\n\n\n\nOauthConfigService\n\nOauthConfigService\n\n\n\nSeederModule\n\nSeederModule\n\nSeederModule -->\n\nOauthConfigService->SeederModule\n\n\n\n\n\nOptionsService\n\nOptionsService\n\nSeederModule -->\n\nOptionsService->SeederModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nSeederModule -->\n\nRolesService->SeederModule\n\n\n\n\n\nSeederService\n\nSeederService\n\nSeederModule -->\n\nSeederService->SeederModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nSeederModule -->\n\nUsersService->SeederModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/seeder/seeder.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OauthConfigService\n                        \n                        \n                            OptionsService\n                        \n                        \n                            RolesService\n                        \n                        \n                            SeederService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SeederService } from './seeder.service';\nimport { RolesService } from '../roles/roles.service';\nimport { UsersService } from '../users/users.service';\nimport { OptionsService } from '../options/options.service';\nimport { OauthConfigService } from '../oauth-configs/oauth-configs.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from '../users/user.entity';\nimport { Role } from '../roles/role.entity';\nimport { Label } from '../labels/label.entity';\nimport { OauthConfig } from '../oauth-configs/oauth-config.entity';\nimport { Autorouting } from '../autorouting/autorouting.entity';\nimport { Option } from '../options/option.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      User,\n      Role,\n      Option,\n      Label,\n      OauthConfig,\n      Autorouting,\n    ]),\n  ],\n  providers: [\n    SeederService,\n    RolesService,\n    UsersService,\n    OptionsService,\n    OauthConfigService,\n  ],\n  controllers: [],\n})\nexport class SeederModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeederService.html":{"url":"injectables/SeederService.html","title":"injectable - SeederService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SeederService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/seeder/seeder.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Execute the seeding of the database.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                seed\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(rolesService: RolesService, usersService: UsersService, optionService: OptionsService, oauthConfigService: OauthConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/seeder/seeder.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rolesService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        optionService\n                                                  \n                                                        \n                                                                        OptionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        oauthConfigService\n                                                  \n                                                        \n                                                                        OauthConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        seed\n                        \n                    \n                \n            \n            \n                \n                        \n                    seed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/seeder/seeder.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { RolesService } from '../roles/roles.service';\nimport { UsersService } from '../users/users.service';\nimport { OptionsService } from '../options/options.service';\nimport { OauthConfigService } from '../oauth-configs/oauth-configs.service';\n/**\n * Execute the seeding of the database.\n */\n@Injectable()\nexport class SeederService {\n  public constructor(\n    private readonly rolesService: RolesService,\n    private readonly usersService: UsersService,\n    private readonly optionService: OptionsService,\n    private readonly oauthConfigService: OauthConfigService,\n  ) {}\n\n  public async seed() {\n    await this.rolesService.seed();\n    await this.usersService.seed();\n    await this.optionService.seed();\n    await this.oauthConfigService.seed();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeriesGuard.html":{"url":"injectables/SeriesGuard.html","title":"injectable - SeriesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SeriesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guards/series.guard.ts\n        \n\n\n            \n                Description\n            \n            \n                Guard checking parent study of a dicom series has a label belonging to the user calling role\n\n            \n\n            \n                Extends\n            \n            \n                            StudyGuard\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/series.guard.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { StudyGuard } from './study.guard';\nimport { checkLabelRoleStudy } from '../utils/check-label-role-study';\n\n/**\n * Guard checking parent study of a dicom series has a label belonging to the user calling role\n */\n@Injectable()\nexport class SeriesGuard extends StudyGuard {\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    const userRole = request.user.role.Name;\n    const orthancID = request.params.id;\n\n    const parentStudy = await this.orthancClient\n      .getParentStudy('series', orthancID)\n      .catch(() => null);\n\n    if (!parentStudy) return false;\n    return checkLabelRoleStudy(\n      parentStudy.ID,\n      userRole,\n      this.rolesService,\n      this.orthancClient,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/StudyGuard.html":{"url":"guards/StudyGuard.html","title":"guard - StudyGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    StudyGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/study.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard a dicomstudy has a label belonging to the user calling role\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(rolesService: RolesService, orthancClient: OrthancClient)\n                    \n                \n                        \n                            \n                                Defined in src/guards/study.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rolesService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        orthancClient\n                                                  \n                                                        \n                                                                        OrthancClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/study.guard.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { RolesService } from '../roles/roles.service';\nimport OrthancClient from '../utils/orthanc-client';\nimport { checkLabelRoleStudy } from '../utils/check-label-role-study';\n/**\n * Guard a dicomstudy has a label belonging to the user calling role\n */\n@Injectable()\nexport class StudyGuard implements CanActivate {\n  constructor(\n    protected rolesService: RolesService,\n    protected orthancClient: OrthancClient,\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    const userRole = request.user.role.Name;\n    const orthancID = request.params.id;\n\n    return checkLabelRoleStudy(\n      orthancID,\n      userRole,\n      this.rolesService,\n      this.orthancClient,\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TagAnon.html":{"url":"classes/TagAnon.html","title":"class - TagAnon","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TagAnon\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orthanc/tag-anon.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                replaceValue\n                            \n                            \n                                tag\n                            \n                            \n                                tagPolicy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tag: string, tagPolicy: TagPolicies, replaceValue: string | number | undefined)\n                    \n                \n                        \n                            \n                                Defined in src/orthanc/tag-anon.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tag\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tagPolicy\n                                                  \n                                                        \n                                                                        TagPolicies\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        replaceValue\n                                                  \n                                                        \n                                                                    string | number | undefined\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        replaceValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | number | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/tag-anon.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/tag-anon.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tagPolicy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TagPolicies\n\n                    \n                \n                    \n                        \n                                Defined in src/orthanc/tag-anon.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TagPolicies } from '../constants/enums';\n\nexport default class TagAnon {\n  tagPolicy: TagPolicies;\n  tag: string;\n  replaceValue: string | number | undefined;\n\n  constructor(\n    tag: string,\n    tagPolicy: TagPolicies,\n    replaceValue: string | number | undefined = undefined,\n  ) {\n    this.tagPolicy = tagPolicy;\n    this.tag = tag;\n    this.replaceValue = replaceValue;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksModule.html":{"url":"modules/TasksModule.html","title":"module - TasksModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_exports\n\n\n\ncluster_TasksModule_providers\n\n\n\n\nOrthancMonitoringTask \n\nOrthancMonitoringTask \n\n\n\nQueryQueueTask \n\nQueryQueueTask \n\n\n\nTasksModule\n\nTasksModule\n\nOrthancMonitoringTask  -->\n\nTasksModule->OrthancMonitoringTask \n\n\n\nQueryQueueTask  -->\n\nTasksModule->QueryQueueTask \n\n\n\n\n\nOrthancClient\n\nOrthancClient\n\nTasksModule -->\n\nOrthancClient->TasksModule\n\n\n\n\n\nOrthancMonitoringTask\n\nOrthancMonitoringTask\n\nTasksModule -->\n\nOrthancMonitoringTask->TasksModule\n\n\n\n\n\nQueryQueueTask\n\nQueryQueueTask\n\nTasksModule -->\n\nQueryQueueTask->TasksModule\n\n\n\n\n\nQueuesQueryService\n\nQueuesQueryService\n\nTasksModule -->\n\nQueuesQueryService->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tasks/tasks.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrthancClient\n                        \n                        \n                            OrthancMonitoringTask\n                        \n                        \n                            QueryQueueTask\n                        \n                        \n                            QueuesQueryService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OrthancMonitoringTask\n                        \n                        \n                            QueryQueueTask\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { Option } from '../options/option.entity';\nimport { QueuesQueryService } from '../queues/query/queue-query.service';\nimport OrthancClient from '../utils/orthanc-client';\nimport { QueryQueueTask } from './query-queue.task';\nimport { OrthancMonitoringTask } from './orthanc-monitoring.task';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Option])],\n  providers: [\n    QueuesQueryService,\n    OrthancClient,\n    QueryQueueTask,\n    OrthancMonitoringTask,\n  ],\n  exports: [QueryQueueTask, OrthancMonitoringTask],\n})\nexport class TasksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TmtvJobDto.html":{"url":"classes/TmtvJobDto.html","title":"class - TmtvJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TmtvJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/processing/processing-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                CtOrthancSeriesId\n                            \n                            \n                                    \n                                    \n                                PtOrthancSeriesId\n                            \n                            \n                                    \n                                    \n                                SendMaskToOrthancAs\n                            \n                            \n                                    \n                                    \n                                WithFragmentedMask\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        CtOrthancSeriesId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/processing/processing-job.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        PtOrthancSeriesId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/processing/processing-job.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SendMaskToOrthancAs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessingMask[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})@IsEnum(ProcessingMask)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/processing/processing-job.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        WithFragmentedMask\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, default: false})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/processing/processing-job.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsBoolean, IsEnum, IsObject, IsString } from 'class-validator';\nimport { ProcessingJobType, ProcessingMask } from '../constants/enums';\n\nexport class TmtvJobDto {\n  @ApiProperty({ required: true })\n  @IsString()\n  CtOrthancSeriesId: string;\n\n  @ApiProperty({ required: true })\n  @IsString()\n  PtOrthancSeriesId: string;\n\n  @ApiProperty({ required: true })\n  @IsEnum(ProcessingMask)\n  SendMaskToOrthancAs: ProcessingMask[];\n\n  @ApiProperty({ required: false, default: false })\n  @IsBoolean()\n  WithFragmentedMask: boolean;\n}\n\nexport class ProcessingJobDto {\n  @ApiProperty({ required: true, enum: ProcessingJobType })\n  @IsEnum(ProcessingJobType)\n  JobType: ProcessingJobType;\n\n  @ApiProperty({ required: false })\n  @IsObject()\n  Payload: TmtvJobDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TmtvService.html":{"url":"classes/TmtvService.html","title":"class - TmtvService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TmtvService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/processing/tmtv.service.ts\n        \n\n\n            \n                Description\n            \n            \n                TMTV Service class to handle the TMTV processing.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createdFiles\n                            \n                            \n                                    Private\n                                ctOrthancSeriesId\n                            \n                            \n                                    Private\n                                ctSeriesId\n                            \n                            \n                                    Private\n                                fragmentedMask\n                            \n                            \n                                    Private\n                                ptOrthancSeriesId\n                            \n                            \n                                    Private\n                                ptSeriesId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createSeries\n                            \n                            \n                                    Async\n                                deleteAllRessources\n                            \n                            \n                                getCreatedFiles\n                            \n                            \n                                    Async\n                                runInference\n                            \n                            \n                                    Async\n                                sendDicomToProcessing\n                            \n                            \n                                    Async\n                                sendMaskAsRtssToOrthanc\n                            \n                            \n                                    Async\n                                sendMaskAsSegToOrthanc\n                            \n                            \n                                setCtOrthancSeriesId\n                            \n                            \n                                setPtOrthancSeriesId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(orthancClient: OrthancClient, processingClient: ProcessingClient)\n                    \n                \n                        \n                            \n                                Defined in src/processing/tmtv.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        orthancClient\n                                                  \n                                                        \n                                                                        OrthancClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        processingClient\n                                                  \n                                                        \n                                                                        ProcessingClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createdFiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessingFile[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/processing/tmtv.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ctOrthancSeriesId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/tmtv.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ctSeriesId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/tmtv.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fragmentedMask\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MaskProcessingService\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/tmtv.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ptOrthancSeriesId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/tmtv.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ptSeriesId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/processing/tmtv.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createSeries\n                        \n                    \n                \n            \n            \n                \n                        \n                    createSeries()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/tmtv.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteAllRessources\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteAllRessources()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/tmtv.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCreatedFiles\n                        \n                    \n                \n            \n            \n                \ngetCreatedFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/tmtv.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         ProcessingFile[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        runInference\n                        \n                    \n                \n            \n            \n                \n                        \n                    runInference(fragmented: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/tmtv.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                fragmented\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendDicomToProcessing\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendDicomToProcessing()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/tmtv.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendMaskAsRtssToOrthanc\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendMaskAsRtssToOrthanc()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/tmtv.service.ts:97\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendMaskAsSegToOrthanc\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendMaskAsSegToOrthanc()\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/tmtv.service.ts:103\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCtOrthancSeriesId\n                        \n                    \n                \n            \n            \n                \nsetCtOrthancSeriesId(orthancSeriesId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/tmtv.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orthancSeriesId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPtOrthancSeriesId\n                        \n                    \n                \n            \n            \n                \nsetPtOrthancSeriesId(orthancSeriesId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/processing/tmtv.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orthancSeriesId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import OrthancClient from '../utils/orthanc-client';\nimport ProcessingClient from '../utils/processing.client';\nimport { ProcessingFile } from './processing.file';\nimport { MaskProcessingService } from './mask-processing.service';\nimport { ProcessingMask } from '../constants/enums';\n/**\n * TMTV Service class to handle the TMTV processing.\n */\nexport class TmtvService {\n  private ptOrthancSeriesId: string;\n  private ctOrthancSeriesId: string;\n  private ptSeriesId: string;\n  private ctSeriesId: string;\n\n  private fragmentedMask: MaskProcessingService;\n\n  private createdFiles: ProcessingFile[] = [];\n\n  constructor(\n    private readonly orthancClient: OrthancClient,\n    private readonly processingClient: ProcessingClient,\n  ) {}\n\n  setPtOrthancSeriesId(orthancSeriesId: string): void {\n    this.ptOrthancSeriesId = orthancSeriesId;\n  }\n\n  setCtOrthancSeriesId(orthancSeriesId: string): void {\n    this.ctOrthancSeriesId = orthancSeriesId;\n  }\n\n  getCreatedFiles(): ProcessingFile[] {\n    return this.createdFiles;\n  }\n\n  async sendDicomToProcessing() {\n    await this.orthancClient\n      .getArchiveDicomAsBuffer([this.ptOrthancSeriesId])\n      .then(async (result) => {\n        const ptResponse = await this.processingClient.createDicom(result);\n        this.createdFiles.push(new ProcessingFile(ptResponse, 'dicoms'));\n      });\n\n    await this.orthancClient\n      .getArchiveDicomAsBuffer([this.ctOrthancSeriesId])\n      .then(async (result) => {\n        const ctResponse = await this.processingClient.createDicom(result);\n        this.createdFiles.push(new ProcessingFile(ctResponse, 'dicoms'));\n      });\n  }\n\n  async createSeries() {\n    await this.processingClient\n      .createSeriesFromOrthanc(this.ctOrthancSeriesId, false, false)\n      .then((ctSeriesId) => {\n        this.ctSeriesId = ctSeriesId;\n\n        this.createdFiles.push(new ProcessingFile(this.ctSeriesId, 'series'));\n      });\n\n    await this.processingClient\n      .createSeriesFromOrthanc(this.ptOrthancSeriesId, true, true)\n      .then((ptSeriesId) => {\n        this.ptSeriesId = ptSeriesId;\n        this.createdFiles.push(new ProcessingFile(this.ptSeriesId, 'series'));\n      });\n  }\n\n  async runInference(fragmented: boolean = false) {\n    const maskId = (\n      await this.processingClient.executeInference('pt_seg_attentionunet', {\n        idCT: this.ctSeriesId,\n        idPT: this.ptSeriesId,\n      })\n    )['id_mask'];\n    const mask = new MaskProcessingService(this.processingClient);\n\n    mask.setMaskId(maskId);\n    mask.setPetId(this.ptSeriesId, this.ptOrthancSeriesId);\n    this.createdFiles.push(new ProcessingFile(maskId, 'masks'));\n\n    if (fragmented) {\n      const fragmentedMaskId = await this.processingClient.fragmentMask(\n        this.ptSeriesId,\n        maskId,\n        true,\n      );\n      const fragmentedMask = new MaskProcessingService(this.processingClient);\n\n      this.createdFiles.push(new ProcessingFile(fragmentedMaskId, 'masks'));\n      fragmentedMask.setMaskId(fragmentedMaskId);\n      fragmentedMask.setPetId(this.ptSeriesId, this.ptOrthancSeriesId);\n      this.fragmentedMask = fragmentedMask;\n    }\n  }\n\n  async sendMaskAsRtssToOrthanc(): Promise {\n    const rtssData = await this.fragmentedMask.getMaskAs(ProcessingMask.RTSS);\n\n    return await this.orthancClient.sendDicomToOrthanc(rtssData);\n  }\n\n  async sendMaskAsSegToOrthanc(): Promise {\n    const segData = await this.fragmentedMask.getMaskAs(ProcessingMask.SEG);\n\n    return await this.orthancClient.sendDicomToOrthanc(segData);\n  }\n\n  async deleteAllRessources() {\n    this.createdFiles.forEach((file) => {\n      this.processingClient.deleteRessource(file.getType(), file.getId());\n    });\n    this.createdFiles = [];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOptionDto.html":{"url":"classes/UpdateOptionDto.html","title":"class - UpdateOptionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOptionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/options/dto/update-option.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateOptionDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateOptionDto } from './create-option.dto';\n\nexport class UpdateOptionDto extends PartialType(CreateOptionDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Email\n                            \n                            \n                                    \n                                    \n                                Firstname\n                            \n                            \n                                    \n                                    \n                                Lastname\n                            \n                            \n                                    \n                                    \n                                RoleName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'john.doe@gaelo.fr', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'John', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Doe', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        RoleName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Admin', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class UpdateUserDto {\n  @ApiProperty({ example: 'John', required: true })\n  @IsString()\n  Firstname: string;\n\n  @ApiProperty({ example: 'Doe', required: true })\n  @IsString()\n  Lastname: string;\n\n  @ApiProperty({ example: 'john.doe@gaelo.fr', required: true })\n  @IsString()\n  Email: string;\n\n  @ApiProperty({ example: 'Admin', required: true })\n  @IsString()\n  RoleName: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                Email\n                            \n                            \n                                    \n                                    \n                                Firstname\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                Id\n                            \n                            \n                                    \n                                    \n                                Lastname\n                            \n                            \n                                    \n                                    \n                                Password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                Role\n                            \n                            \n                                    \n                                    \n                                RoleName\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                Token\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                TokenExpiration\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'john.doe@gmail.com'})@Column({unique: true, name: 'email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'John'})@Column({name: 'firstname'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        Id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@PrimaryGeneratedColumn({name: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Doe'})@Column({name: 'lastname'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, name: 'password'})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        Role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@ManyToOne(undefined, role => role.Name)@JoinColumn({name: 'role_name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        RoleName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'admin'})@Column({name: 'role_name', unique: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        Token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        TokenExpiration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:68\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  PrimaryGeneratedColumn,\n  JoinColumn,\n  ManyToOne,\n} from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { Exclude } from 'class-transformer';\n\nimport { Role } from '../roles/role.entity';\n\n@Entity()\nexport class User {\n  @ApiProperty()\n  @PrimaryGeneratedColumn({ name: 'id' })\n  Id?: number;\n\n  @ApiProperty({ example: 'John' })\n  @Column({\n    name: 'firstname',\n  })\n  Firstname: string;\n\n  @ApiProperty({ example: 'Doe' })\n  @Column({\n    name: 'lastname',\n  })\n  Lastname: string;\n\n  @Column({\n    nullable: true,\n    name: 'password',\n  })\n  @Exclude()\n  Password: string;\n\n  @ApiProperty({ example: 'john.doe@gmail.com' })\n  @Column({\n    unique: true,\n    name: 'email',\n  })\n  Email: string;\n\n  @ApiProperty({ example: 'admin' })\n  @Column({\n    name: 'role_name',\n    unique: false,\n    nullable: true,\n  })\n  RoleName: string;\n\n  @ApiProperty()\n  @ManyToOne(() => Role, (role) => role.Name)\n  @JoinColumn({ name: 'role_name' })\n  Role?: Role;\n\n  @ApiProperty()\n  @Column({\n    nullable: true,\n  })\n  Token?: string;\n\n  @ApiProperty()\n  @Column({\n    nullable: true,\n  })\n  TokenExpiration?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserInfoResponse.html":{"url":"interfaces/UserInfoResponse.html","title":"interface - UserInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-oauth.strategy.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            email_verified\n                                        \n                                \n                                \n                                        \n                                            family_name\n                                        \n                                \n                                \n                                        \n                                            given_name\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            preferred_username\n                                        \n                                \n                                \n                                        \n                                            sub\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email_verified\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email_verified:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        family_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        family_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        given_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        given_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        preferred_username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        preferred_username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { JwtService } from '@nestjs/jwt';\nimport { HttpService } from '@nestjs/axios';\n\nimport { Strategy } from 'passport-http-bearer';\nimport { firstValueFrom } from 'rxjs';\n\nimport { OauthConfigService } from '../oauth-configs/oauth-configs.service';\n\ninterface UserInfoResponse {\n  sub: string;\n  email_verified: boolean;\n  name: string;\n  preferred_username: string;\n  given_name: string;\n  family_name: string;\n  email: string;\n}\n\n/**\n * This class is a Passport strategy that validates a JWT from an OAuth2 provider.\n */\n@Injectable()\nexport class JwtOauthStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private readonly jwtService: JwtService,\n    private readonly httpService: HttpService,\n    private readonly oauthConfigService: OauthConfigService,\n  ) {\n    super();\n  }\n\n  async getWellKnown(iss: string): Promise {\n    try {\n      const wellKnown = await firstValueFrom(\n        this.httpService.get(iss + '/.well-known/openid-configuration'),\n      );\n      return wellKnown.data;\n    } catch (error) {\n      throw new UnauthorizedException('Invalid token');\n    }\n  }\n\n  async validateIssuer(wellKnown: object): Promise {\n    const authorizationUrl = wellKnown['authorization_endpoint'];\n    const config =\n      await this.oauthConfigService.findOneByAuthorizationUrl(authorizationUrl);\n    return !!config;\n  }\n\n  async getUserInfoUrl(wellKnown: object): Promise {\n    return wellKnown['userinfo_endpoint'];\n  }\n\n  async verifyToken(token: string): Promise {\n    const decoded = await this.jwtService.decode(token);\n    const wellKnown = await this.getWellKnown(decoded.iss);\n    const url = await this.getUserInfoUrl(wellKnown);\n\n    if (!(await this.validateIssuer(wellKnown))) {\n      throw new UnauthorizedException('Unknown issuer');\n    }\n\n    try {\n      const response = await firstValueFrom(\n        this.httpService.get(url, {\n          headers: {\n            authorization: `Bearer ${token}`,\n          },\n        }),\n      );\n      return {\n        email: response.data.email,\n        firstname: response.data.given_name,\n        lastname: response.data.family_name,\n      };\n    } catch (error) {\n      throw new UnauthorizedException('Invalid token');\n    }\n  }\n\n  async validate(token: string): Promise {\n    const userData = await this.verifyToken(token);\n    if (!userData || !userData.email) {\n      throw new UnauthorizedException('Invalid token');\n    }\n    return userData;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /users\n            \n\n\n            \n                Description\n            \n            \n                Controller for the users related APIs.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                createUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                delete\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getUsers\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getUsersId\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(userDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 201, description: 'Create user'})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 409, description: 'Conflict'})@UseGuards(AdminGuard)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:126\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Delete user'})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(undefined)@Delete('/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get all users', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(AdminGuard)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getUsersId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsersId(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Get user by id', type: GetUserDto})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(undefined)@Get('/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, userDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('access-token')@ApiResponse({status: 200, description: 'Update user'})@ApiResponse({status: 401, description: 'Unauthorized'})@UseGuards(undefined)@Put('/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Param,\n  Put,\n  Delete,\n  UseGuards,\n  NotFoundException,\n  BadRequestException,\n  ConflictException,\n  Body,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiResponse, ApiTags } from '@nestjs/swagger';\n\nimport { UsersService } from './users.service';\nimport { RolesService } from '../roles/roles.service';\n\nimport { User } from './user.entity';\nimport { GetUserDto } from './dto/get-user.dto';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\n\nimport { AdminGuard } from '../guards/roles.guard';\nimport { OrGuard } from '../guards/or.guard';\nimport { CheckUserIdParamsGuard } from '../guards/check-user-id-params.guard';\n\nimport { hashPassword } from '../utils/passwords';\n\n/**\n * Controller for the users related APIs.\n */\n@ApiTags('users')\n@Controller('/users')\nexport class UsersController {\n  constructor(\n    private readonly userService: UsersService,\n    private readonly roleService: RolesService,\n  ) {}\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({\n    status: 200,\n    description: 'Get all users',\n    type: [GetUserDto],\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(AdminGuard)\n  @Get()\n  async getUsers(): Promise {\n    const allUsers = await this.userService.findAll();\n    return allUsers.map((user) => {\n      return {\n        Id: user.Id,\n        Firstname: user.Firstname,\n        Lastname: user.Lastname,\n        Email: user.Email,\n        RoleName: user.RoleName,\n        Role: user.Role,\n      };\n    });\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Get user by id', type: GetUserDto })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(OrGuard([AdminGuard, CheckUserIdParamsGuard]))\n  @Get('/:id')\n  async getUsersId(@Param('id') id: number): Promise {\n    const user = await this.userService.findOne(id);\n    return {\n      Id: user.Id,\n      Firstname: user.Firstname,\n      Lastname: user.Lastname,\n      Email: user.Email,\n      RoleName: user.RoleName,\n      Role: user.Role,\n    };\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Update user' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(OrGuard([AdminGuard, CheckUserIdParamsGuard]))\n  @Put('/:id')\n  async update(\n    @Param('id') id: number,\n    @Body() userDto: UpdateUserDto,\n  ): Promise {\n    const user = await this.userService.findOne(id);\n\n    if (!user) throw new NotFoundException('User not found');\n\n    user.Firstname = userDto.Firstname;\n    user.Lastname = userDto.Lastname;\n    user.Role = await this.roleService.findOneByOrFail(userDto.RoleName);\n\n    const existingUser = await this.userService.findOneByEmail(userDto.Email);\n    if (existingUser && existingUser.Id != id)\n      throw new ConflictException('Email already used');\n    user.Email = userDto.Email;\n\n    await this.userService.update(id, user);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 200, description: 'Delete user' })\n  @ApiResponse({ status: 400, description: 'Bad Request' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @UseGuards(OrGuard([AdminGuard, CheckUserIdParamsGuard]))\n  @Delete('/:id')\n  async delete(@Param('id') id: number): Promise {\n    const existingUser = await this.userService.isExistingUser(id);\n\n    if (!existingUser) throw new NotFoundException('User not found');\n    return await this.userService.remove(id);\n  }\n\n  @ApiBearerAuth('access-token')\n  @ApiResponse({ status: 201, description: 'Create user' })\n  @ApiResponse({ status: 400, description: 'Bad Request' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 409, description: 'Conflict' })\n  @UseGuards(AdminGuard)\n  @Post()\n  async createUser(@Body() userDto: CreateUserDto): Promise {\n    let user = new User();\n    const existingUser = await this.userService.findOneByEmail(userDto.Email);\n    const role = await this.roleService.isRoleExist(userDto.RoleName);\n\n    if (!role) {\n      throw new BadRequestException('Role not found');\n    }\n    if (existingUser) {\n      throw new ConflictException('Email already used');\n    }\n    user = { ...userDto, Password: await hashPassword(userDto.Password) };\n    return (await this.userService.create(user)).Id;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nRolesService\n\nRolesService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nRolesService->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RolesService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { UsersService } from './users.service';\nimport { RolesService } from '../roles/roles.service';\n\nimport { UsersController } from './users.controller';\n\nimport { User } from './user.entity';\nimport { Role } from '../roles/role.entity';\nimport { Label } from '../labels/label.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User, Role, Label])],\n  providers: [UsersService, RolesService],\n  controllers: [UsersController],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Database access to user related data.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneByEmail\n                            \n                            \n                                    Async\n                                isExistingUser\n                            \n                            \n                                    Async\n                                isRoleUsed\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Public\n                                    Async\n                                seed\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateUserPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number, withRole: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                withRole\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByEmail(email: string, withRole: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                withRole\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        isExistingUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isExistingUser(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        isRoleUsed\n                        \n                    \n                \n            \n            \n                \n                        \n                    isRoleUsed(roleName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roleName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        seed\n                        \n                    \n                \n            \n            \n                \n                        \n                    seed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUserPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUserPassword(id: number, newPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { User } from './user.entity';\nimport { hashPassword } from '../utils/passwords';\n/**\n * Database access to user related data.\n */\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectRepository(User)\n    private usersRepository: Repository,\n  ) {}\n\n  async isRoleUsed(roleName: string): Promise {\n    const roleCount = await this.usersRepository.findAndCount({\n      where: {\n        RoleName: roleName,\n      },\n    });\n    return roleCount[1] > 0;\n  }\n\n  async findAll(): Promise {\n    return await this.usersRepository.find({\n      relations: { Role: true },\n    });\n  }\n\n  async findOne(id: number, withRole: boolean = true): Promise {\n    const user = await this.usersRepository.findOne({\n      where: { Id: id },\n      relations: {\n        Role: withRole,\n      },\n    });\n    if (!user) throw new NotFoundException('User not found');\n    return user;\n  }\n\n  async isExistingUser(id: number): Promise {\n    const user = await this.usersRepository.findOne({\n      where: { Id: id },\n    });\n    return user ? true : false;\n  }\n\n  async findOneByEmail(\n    email: string,\n    withRole: boolean = true,\n  ): Promise | undefined {\n    if (email === undefined) return undefined;\n    const user = await this.usersRepository.findOne({\n      where: { Email: email },\n      relations: {\n        Role: withRole,\n      },\n    });\n    return user;\n  }\n\n  async update(id: number, user: User): Promise {\n    await this.usersRepository.update(id, user);\n  }\n\n  async updateUserPassword(id: number, newPassword: string): Promise {\n    const hashedPassword = await hashPassword(newPassword);\n    const findUser = await this.findOne(id);\n    const userWithPasswordUpdated = { ...findUser, Password: hashedPassword };\n    await this.update(id, userWithPasswordUpdated);\n  }\n\n  async create(user: User): Promise {\n    return await this.usersRepository.save(user);\n  }\n\n  async remove(id: number): Promise {\n    await this.usersRepository.delete(id);\n  }\n\n  /* istanbul ignore next */\n  public async seed() {\n    const hashAdmin = await hashPassword('administrator');\n\n    const hashUser = await hashPassword('user');\n\n    const admin = this.usersRepository.create({\n      Firstname: 'Admin',\n      Lastname: 'Admin',\n      Email: 'administrator@gaelo.fr',\n      Password: hashAdmin,\n      RoleName: 'Admin',\n    });\n\n    const user = this.usersRepository.create({\n      Firstname: 'User',\n      Lastname: 'User',\n      Email: 'user@gaelo.fr',\n      Password: hashUser,\n      RoleName: 'User',\n    });\n\n    await this.usersRepository.insert([admin, user]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WithLabels.html":{"url":"classes/WithLabels.html","title":"class - WithLabels","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WithLabels\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/with-labels.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                WithLabels\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        WithLabels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@ApiProperty({example: true})@Transform( => , {toClassOnly: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/with-labels.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Transform } from 'class-transformer';\nimport { IsBoolean, IsOptional } from 'class-validator';\n\nexport class WithLabels {\n  @IsOptional()\n  @ApiProperty({ example: true })\n  @Transform(\n    ({ value }) => {\n      return value === 'true' || value === '';\n    },\n    { toClassOnly: true },\n  )\n  @IsBoolean()\n  WithLabels: boolean = false;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/auth/dto/change-password.dto.ts\n            \n            class\n            ChangePasswordDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/lost-password.dto.ts\n            \n            class\n            LostPassworDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/dto/register.dto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/jwt-oauth.strategy.ts\n            \n            injectable\n            JwtOauthStrategy\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/auth/jwt-oauth.strategy.ts\n            \n            interface\n            UserInfoResponse\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/auth/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/autorouting/autorouting.entity.ts\n            \n            entity\n            Autorouting\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/autorouting/autorouting.entity.ts\n            \n            class\n            Destination\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/autorouting/autorouting.entity.ts\n            \n            class\n            Router\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/autorouting/autorouting.entity.ts\n            \n            class\n            Rule\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/autorouting/autorouting.handler.ts\n            \n            injectable\n            AutoroutingHandler\n            \n                6 %\n                (1/15)\n            \n        \n        \n            \n                \n                src/autorouting/autoroutings.controller.ts\n            \n            controller\n            AutoroutingsController\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/autorouting/autoroutings.service.ts\n            \n            injectable\n            AutoroutingsService\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/autorouting/dto/create-autorouting.dto.ts\n            \n            class\n            CreateAutoroutingDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/autorouting/dto/orthanc-event-payload.dto.ts\n            \n            class\n            OrthancEventPayloadDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/build_docs.ts\n            \n            variable\n            buildDocs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants/constants.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/check-label-in-role.guard.ts\n            \n            guard\n            CheckLabelInRole\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/guards/check-user-id-params.guard.ts\n            \n            guard\n            CheckUserIdParamsGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/guards/check-user-id-query.guard.ts\n            \n            guard\n            CheckUserIdQueryGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/guards/check-user-role.guard.ts\n            \n            guard\n            CheckUserRoleGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/guards/dicom-web.guard.ts\n            \n            guard\n            DicomWebGuard\n            \n                16 %\n                (2/12)\n            \n        \n        \n            \n                \n                src/guards/instance.guard.ts\n            \n            injectable\n            InstanceGuard\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/guards/jwt-oauth.guard.ts\n            \n            injectable\n            JwtOAuthGuard\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/guards/jwt.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/guards/local.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/guards/or.guard.ts\n            \n            interface\n            OrGuardOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/guards/or.guard.ts\n            \n            function\n            OrGuard\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            AdminGuard\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            AnonymizeGuard\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            AutoQueryGuard\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            AutoRoutingGuard\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            CdBurnerGuard\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            DeleteGuard\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            ExportGuard\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            ImportGuard\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            ModifyGuard\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            QueryGuard\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            ReadAllGuard\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/guards/series.guard.ts\n            \n            injectable\n            SeriesGuard\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/guards/study.guard.ts\n            \n            guard\n            StudyGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/interceptors/not-found.interceptor.ts\n            \n            injectable\n            NotFoundInterceptor\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/interceptors/public.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/labels/label.entity.ts\n            \n            entity\n            Label\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/labels/labels.controller.ts\n            \n            controller\n            LabelsController\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/labels/labels.dto.ts\n            \n            class\n            LabelDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/labels/labels.service.ts\n            \n            injectable\n            LabelsService\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            buildSwagger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            main\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            setupWorkers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/oauth-configs/oauth-config.dto.ts\n            \n            class\n            OauthConfigDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/oauth-configs/oauth-config.entity.ts\n            \n            entity\n            OauthConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/oauth-configs/oauth-configs.controller.ts\n            \n            controller\n            OauthConfigController\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/oauth-configs/oauth-configs.service.ts\n            \n            injectable\n            OauthConfigService\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/options/dto/create-option.dto.ts\n            \n            class\n            CreateOptionDto\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/options/dto/get-option.dto.ts\n            \n            class\n            GetOptionDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/options/dto/update-option.dto.ts\n            \n            class\n            UpdateOptionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/options/option.entity.ts\n            \n            entity\n            Option\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/options/options.controller.ts\n            \n            controller\n            OptionsController\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/options/options.service.ts\n            \n            injectable\n            OptionsService\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/orthanc/dto/query-parsed-answer.dto.ts\n            \n            class\n            QueryParsedAnswerDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/orthanc/dto/query-parsed-answer.dto.ts\n            \n            class\n            QuerySeriesDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/orthanc/dto/query-parsed-answer.dto.ts\n            \n            class\n            QueryStudyDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/orthanc/orthanc-admin.controller.ts\n            \n            controller\n            OrthancAdminController\n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                src/orthanc/orthanc-delete.controller.ts\n            \n            controller\n            OrthancDeleteController\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/orthanc/orthanc-export.controller.ts\n            \n            controller\n            OrthancExportController\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/orthanc/orthanc-import.controller.ts\n            \n            controller\n            OrthancImportController\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/orthanc/orthanc-modify.controller.ts\n            \n            controller\n            OrthancModifyController\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/orthanc/orthanc-query.controller.ts\n            \n            controller\n            OrthancQueryController\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/orthanc/orthanc-read-all.controller.ts\n            \n            controller\n            OrthancReadAllController\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/orthanc/orthanc.controller.ts\n            \n            controller\n            OrthancController\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/orthanc/query-answer/query-series.answer.ts\n            \n            class\n            QuerySeriesAnswer\n            \n                0 %\n                (0/34)\n            \n        \n        \n            \n                \n                src/orthanc/query-answer/query-study.answer.ts\n            \n            class\n            QueryStudyAnswer\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                src/orthanc/query-answer/query.answer.ts\n            \n            class\n            QueryAnswer\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/orthanc/tag-anon.ts\n            \n            class\n            TagAnon\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/orthanc/utils.ts\n            \n            variable\n            doReverseProxy\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/processing/mask-processing.service.ts\n            \n            injectable\n            MaskProcessingService\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                src/processing/processing-job.dto.ts\n            \n            class\n            ProcessingJobDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/processing/processing-job.dto.ts\n            \n            class\n            TmtvJobDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/processing/processing-queue.service.ts\n            \n            injectable\n            ProcessingQueueService\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/processing/processing.controller.ts\n            \n            controller\n            ProcessingController\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/processing/processing.file.ts\n            \n            class\n            ProcessingFile\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/processing/processing.worker.ts\n            \n            function\n            setupProcessingWorker\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/processing/processing.worker.ts\n            \n            function\n            tmtvJob\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/processing/tmtv.service.ts\n            \n            class\n            TmtvService\n            \n                5 %\n                (1/17)\n            \n        \n        \n            \n                \n                src/queues/anon/anon.worker.ts\n            \n            function\n            isSecondaryCapture\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/queues/anon/anon.worker.ts\n            \n            function\n            setupAnonWorker\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/queues/anon/queue-anons.controller.ts\n            \n            controller\n            QueuesAnonController\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/queues/anon/queue-anons.dto.ts\n            \n            class\n            QueuesAnonDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/queues/anon/queue-anons.dto.ts\n            \n            class\n            QueuesAnonsDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/queues/anon/queue-anons.service.ts\n            \n            injectable\n            QueuesAnonService\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                src/queues/delete/delete.worker.ts\n            \n            function\n            setupDeleteWorker\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/queues/delete/queue-deletes.controller.ts\n            \n            controller\n            QueuesDeleteController\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/queues/delete/queue-deletes.dto.ts\n            \n            class\n            QueuesDeleteDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/queues/delete/queue-deletes.service.ts\n            \n            injectable\n            QueuesDeleteService\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                src/queues/query/query.worker.ts\n            \n            function\n            processSeries\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/queues/query/query.worker.ts\n            \n            function\n            processStudy\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/queues/query/query.worker.ts\n            \n            function\n            setupQueryWorker\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/queues/query/queue-query.controller.ts\n            \n            controller\n            QueuesQueryController\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/queues/query/queue-query.dto.ts\n            \n            class\n            QueuesQueryDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/queues/query/queue-query.dto.ts\n            \n            class\n            QueuesQuerySeriesDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/queues/query/queue-query.dto.ts\n            \n            class\n            QueuesQueryStudyDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/queues/query/queue-query.service.ts\n            \n            injectable\n            QueuesQueryService\n            \n                6 %\n                (1/15)\n            \n        \n        \n            \n                \n                src/queues/queue.service.ts\n            \n            injectable\n            AbstractQueueService\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                src/roles/dto/create-role.dto.ts\n            \n            class\n            CreateRoleDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/roles/dto/get-role.dto.ts\n            \n            class\n            GetRoleDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/roles/dto/with-labels.dto.ts\n            \n            class\n            WithLabels\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/roles/role.entity.ts\n            \n            entity\n            Role\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/roles/roles.controller.ts\n            \n            controller\n            RolesController\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/roles/roles.service.ts\n            \n            injectable\n            RolesService\n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                src/seeder/seed.ts\n            \n            variable\n            seeder\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/seeder/seeder.service.ts\n            \n            injectable\n            SeederService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/tasks/orthanc-monitoring.task.ts\n            \n            injectable\n            OrthancMonitoringTask\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/tasks/query-queue.task.ts\n            \n            injectable\n            QueryQueueTask\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/dto/get-user.dto.ts\n            \n            class\n            GetUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                src/utils/check-label-role-study.ts\n            \n            variable\n            checkLabelRoleStudy\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils/http.client.ts\n            \n            class\n            HttpClient\n            \n                5 %\n                (1/19)\n            \n        \n        \n            \n                \n                src/utils/is-time-between.ts\n            \n            function\n            isTimeBetween\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/logger.middleware.ts\n            \n            function\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/orthanc-client.ts\n            \n            injectable\n            OrthancClient\n            \n                2 %\n                (1/50)\n            \n        \n        \n            \n                \n                src/utils/passwords.ts\n            \n            variable\n            comparePasswords\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/passwords.ts\n            \n            variable\n            generateRandomUUID\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/passwords.ts\n            \n            variable\n            generateToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/passwords.ts\n            \n            variable\n            getTokenExpiration\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/passwords.ts\n            \n            variable\n            hashPassword\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/processing.client.ts\n            \n            injectable\n            ProcessingClient\n            \n                2 %\n                (1/37)\n            \n        \n        \n            \n                \n                src/validators/string-or-number.ts\n            \n            class\n            IsNumberOrString\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs-modules/mailer : ^2.0.2\n        \n            @nestjs/axios : ^3.0.3\n        \n            @nestjs/bullmq : ^10.2.1\n        \n            @nestjs/common : ^10.4.1\n        \n            @nestjs/config : ^3.2.3\n        \n            @nestjs/core : ^10.4.1\n        \n            @nestjs/event-emitter : ^2.0.4\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mapped-types : ^2.0.2\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.4.1\n        \n            @nestjs/schedule : ^4.1.0\n        \n            @nestjs/swagger : ^7.4.0\n        \n            @nestjs/typeorm : ^10.0.0\n        \n            axios : ^1.7.7\n        \n            bcryptjs : ^2.4.3\n        \n            bullmq : ^5.12.12\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            css-inline : ^0.11.2\n        \n            handlebars : ^4.7.8\n        \n            moment : ^2.30.1\n        \n            nodemailer : ^6.9.14\n        \n            passport : ^0.7.0\n        \n            passport-http-bearer : ^1.0.1\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            passport-oauth2 : ^1.8.0\n        \n            pg : ^8.12.0\n        \n            postgres : ^3.3.5\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n        \n            sqlite : ^5.0.1\n        \n            sqlite3 : ^5.1.6\n        \n            tmp : ^0.2.1\n        \n            typeorm : ^0.3.17\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AutoroutingEventType   (src/.../autorouting.enum.ts)\n                        \n                        \n                            Condition   (src/.../autorouting.enum.ts)\n                        \n                        \n                            DestinationType   (src/.../autorouting.enum.ts)\n                        \n                        \n                            DicomTag   (src/.../autorouting.enum.ts)\n                        \n                        \n                            LevelType   (src/.../autorouting.enum.ts)\n                        \n                        \n                            OrthancLevelType   (src/.../enums.ts)\n                        \n                        \n                            ProcessingJobType   (src/.../enums.ts)\n                        \n                        \n                            ProcessingMask   (src/.../enums.ts)\n                        \n                        \n                            QueryAnswerType   (src/.../enums.ts)\n                        \n                        \n                            RuleCondition   (src/.../autorouting.enum.ts)\n                        \n                        \n                            TagPolicies   (src/.../enums.ts)\n                        \n                        \n                            ValueRepresentation   (src/.../autorouting.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/autorouting/autorouting.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        AutoroutingEventType\n                    \n                \n                        \n                            \n                                 NEW_INSTANCE\n                            \n                        \n                        \n                            \n                                Value : NewInstance\n                            \n                        \n                        \n                            \n                                 NEW_SERIES\n                            \n                        \n                        \n                            \n                                Value : NewSeries\n                            \n                        \n                        \n                            \n                                 NEW_STUDY\n                            \n                        \n                        \n                            \n                                Value : NewStudy\n                            \n                        \n                        \n                            \n                                 NEW_PATIENT\n                            \n                        \n                        \n                            \n                                Value : NewPatient\n                            \n                        \n                        \n                            \n                                 STABLE_SERIES\n                            \n                        \n                        \n                            \n                                Value : StableSeries\n                            \n                        \n                        \n                            \n                                 STABLE_STUDY\n                            \n                        \n                        \n                            \n                                Value : StableStudy\n                            \n                        \n                        \n                            \n                                 STABLE_PATIENT\n                            \n                        \n                        \n                            \n                                Value : StablePatient\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Condition\n                    \n                \n                        \n                            \n                                 EQUALS\n                            \n                        \n                        \n                            \n                                Value : EQUALS\n                            \n                        \n                        \n                            \n                                 DIFFERENT\n                            \n                        \n                        \n                            \n                                Value : DIFFERENT\n                            \n                        \n                        \n                            \n                                 IN\n                            \n                        \n                        \n                            \n                                Value : IN\n                            \n                        \n                        \n                            \n                                 NOT_IN\n                            \n                        \n                        \n                            \n                                Value : NOT_IN\n                            \n                        \n                        \n                            \n                                 LESS_THAN\n                            \n                        \n                        \n                            \n                                Value : LESS_THAN\n                            \n                        \n                        \n                            \n                                 GREATER_THAN\n                            \n                        \n                        \n                            \n                                Value : GREATER_THAN\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        DestinationType\n                    \n                \n                        \n                            \n                                 AET\n                            \n                        \n                        \n                            \n                                Value : AET\n                            \n                        \n                        \n                            \n                                 TMTVJOB\n                            \n                        \n                        \n                            \n                                Value : TMTVJob\n                            \n                        \n                        \n                            \n                                 PEER\n                            \n                        \n                        \n                            \n                                Value : Peer\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        DicomTag\n                    \n                \n                        \n                            \n                                 PATIENT_NAME\n                            \n                        \n                        \n                            \n                                Value : PatientName\n                            \n                        \n                        \n                            \n                                 PATIENT_ID\n                            \n                        \n                        \n                            \n                                Value : PatientID\n                            \n                        \n                        \n                            \n                                 PATIENT_BIRTHDATE\n                            \n                        \n                        \n                            \n                                Value : PatientBirthDate\n                            \n                        \n                        \n                            \n                                 PATIENT_SEX\n                            \n                        \n                        \n                            \n                                Value : PatientSex\n                            \n                        \n                        \n                            \n                                 OTHER_PATIENT_IDS\n                            \n                        \n                        \n                            \n                                Value : OtherPatientIDs\n                            \n                        \n                        \n                            \n                                 STUDY_DATE\n                            \n                        \n                        \n                            \n                                Value : StudyDate\n                            \n                        \n                        \n                            \n                                 STUDY_TIME\n                            \n                        \n                        \n                            \n                                Value : StudyTime\n                            \n                        \n                        \n                            \n                                 STUDY_ID\n                            \n                        \n                        \n                            \n                                Value : StudyID\n                            \n                        \n                        \n                            \n                                 STUDY_DESCRIPTION\n                            \n                        \n                        \n                            \n                                Value : StudyDescription\n                            \n                        \n                        \n                            \n                                 ACCESSION_NUMBER\n                            \n                        \n                        \n                            \n                                Value : AccessionNumber\n                            \n                        \n                        \n                            \n                                 STUDY_INSTANCE_UID\n                            \n                        \n                        \n                            \n                                Value : StudyInstanceUID\n                            \n                        \n                        \n                            \n                                 REQUESTED_PROCEDURE_DESCRIPTION\n                            \n                        \n                        \n                            \n                                Value : RequestedProcedureDescription\n                            \n                        \n                        \n                            \n                                 INSTITUTION_NAME\n                            \n                        \n                        \n                            \n                                Value : InstitutionName\n                            \n                        \n                        \n                            \n                                 REQUESTING_PHYSICIAN\n                            \n                        \n                        \n                            \n                                Value : RequestingPhysician\n                            \n                        \n                        \n                            \n                                 REFERRING_PHYSICIAN_NAME\n                            \n                        \n                        \n                            \n                                Value : ReferringPhysicianName\n                            \n                        \n                        \n                            \n                                 SERIES_DATE\n                            \n                        \n                        \n                            \n                                Value : SeriesDate\n                            \n                        \n                        \n                            \n                                 SERIES_TIME\n                            \n                        \n                        \n                            \n                                Value : SeriesTime\n                            \n                        \n                        \n                            \n                                 MODALITY\n                            \n                        \n                        \n                            \n                                Value : Modality\n                            \n                        \n                        \n                            \n                                 MANUFACTURER\n                            \n                        \n                        \n                            \n                                Value : Manufacturer\n                            \n                        \n                        \n                            \n                                 STATION_NAME\n                            \n                        \n                        \n                            \n                                Value : StationName\n                            \n                        \n                        \n                            \n                                 SERIES_DESCRIPTION\n                            \n                        \n                        \n                            \n                                Value : SeriesDescription\n                            \n                        \n                        \n                            \n                                 BODY_PART_EXAMINED\n                            \n                        \n                        \n                            \n                                Value : BodyPartExamined\n                            \n                        \n                        \n                            \n                                 SEQUENCE_NAME\n                            \n                        \n                        \n                            \n                                Value : SequenceName\n                            \n                        \n                        \n                            \n                                 PROTOCOL_NAME\n                            \n                        \n                        \n                            \n                                Value : ProtocolName\n                            \n                        \n                        \n                            \n                                 SERIES_NUMBER\n                            \n                        \n                        \n                            \n                                Value : SeriesNumber\n                            \n                        \n                        \n                            \n                                 CARDIAC_NUMBER_OF_IMAGES\n                            \n                        \n                        \n                            \n                                Value : CardiacNumberOfImages\n                            \n                        \n                        \n                            \n                                 IMAGES_IN_ACQUISITION\n                            \n                        \n                        \n                            \n                                Value : ImagesInAcquisition\n                            \n                        \n                        \n                            \n                                 NUMBER_OF_TEMPORAL_POSITIONS\n                            \n                        \n                        \n                            \n                                Value : NumberOfTemporalPositions\n                            \n                        \n                        \n                            \n                                 NUMBER_OF_SLICES\n                            \n                        \n                        \n                            \n                                Value : NumberOfSlices\n                            \n                        \n                        \n                            \n                                 NUMBER_OF_TIME_SLICES\n                            \n                        \n                        \n                            \n                                Value : NumberOfTimeSlices\n                            \n                        \n                        \n                            \n                                 SERIES_INSTANCE_UID\n                            \n                        \n                        \n                            \n                                Value : SeriesInstanceUID\n                            \n                        \n                        \n                            \n                                 IMAGE_ORIENTATION_PATIENT\n                            \n                        \n                        \n                            \n                                Value : ImageOrientationPatient\n                            \n                        \n                        \n                            \n                                 SERIES_TYPE\n                            \n                        \n                        \n                            \n                                Value : SeriesType\n                            \n                        \n                        \n                            \n                                 OPERATORS_NAME\n                            \n                        \n                        \n                            \n                                Value : OperatorsName\n                            \n                        \n                        \n                            \n                                 PERFORMED_PROCEDURE_STEP_DESCRIPTION\n                            \n                        \n                        \n                            \n                                Value : PerformedProcedureStepDescription\n                            \n                        \n                        \n                            \n                                 ACQUISITION_DEVICE_PROCESSING_DESCRIPTION\n                            \n                        \n                        \n                            \n                                Value : AcquisitionDeviceProcessingDescription\n                            \n                        \n                        \n                            \n                                 CONTRAST_BOLUS_AGENT\n                            \n                        \n                        \n                            \n                                Value : ContrastBolusAgent\n                            \n                        \n                        \n                            \n                                 INSTANCE_CREATION_DATE\n                            \n                        \n                        \n                            \n                                Value : InstanceCreationDate\n                            \n                        \n                        \n                            \n                                 INSTANCE_CREATION_TIME\n                            \n                        \n                        \n                            \n                                Value : InstanceCreationTime\n                            \n                        \n                        \n                            \n                                 ACQUISITION_NUMBER\n                            \n                        \n                        \n                            \n                                Value : AcquisitionNumber\n                            \n                        \n                        \n                            \n                                 IMAGE_INDEX\n                            \n                        \n                        \n                            \n                                Value : ImageIndex\n                            \n                        \n                        \n                            \n                                 INSTANCE_NUMBER\n                            \n                        \n                        \n                            \n                                Value : InstanceNumber\n                            \n                        \n                        \n                            \n                                 NUMBER_OF_FRAMES\n                            \n                        \n                        \n                            \n                                Value : NumberOfFrames\n                            \n                        \n                        \n                            \n                                 TEMPORAL_POSITION_IDENTIFIER\n                            \n                        \n                        \n                            \n                                Value : TemporalPositionIdentifier\n                            \n                        \n                        \n                            \n                                 SOP_INSTANCE_UID\n                            \n                        \n                        \n                            \n                                Value : SOPInstanceUID\n                            \n                        \n                        \n                            \n                                 IMAGE_POSITION_PATIENT\n                            \n                        \n                        \n                            \n                                Value : ImagePositionPatient\n                            \n                        \n                        \n                            \n                                 IMAGE_COMMENTS\n                            \n                        \n                        \n                            \n                                Value : ImageComments\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        LevelType\n                    \n                \n                        \n                            \n                                 INSTANCES\n                            \n                        \n                        \n                            \n                                Value : instances\n                            \n                        \n                        \n                            \n                                 SERIES\n                            \n                        \n                        \n                            \n                                Value : series\n                            \n                        \n                        \n                            \n                                 STUDIES\n                            \n                        \n                        \n                            \n                                Value : studies\n                            \n                        \n                        \n                            \n                                 PATIENTS\n                            \n                        \n                        \n                            \n                                Value : patients\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        RuleCondition\n                    \n                \n                        \n                            \n                                 AND\n                            \n                        \n                        \n                            \n                                Value : AND\n                            \n                        \n                        \n                            \n                                 OR\n                            \n                        \n                        \n                            \n                                Value : OR\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ValueRepresentation\n                    \n                \n                        \n                            \n                                 STRING\n                            \n                        \n                        \n                            \n                                Value : string\n                            \n                        \n                        \n                            \n                                 NUMBER\n                            \n                        \n                        \n                            \n                                Value : number\n                            \n                        \n                        \n                            \n                                 DATE\n                            \n                        \n                        \n                            \n                                Value : date\n                            \n                        \n            \n        \n\n    src/constants/enums.ts\n    \n        \n            \n                \n                    \n                        \n                        OrthancLevelType\n                    \n                \n                        \n                            \n                                 LEVEL_SERIES\n                            \n                        \n                        \n                            \n                                Value : Series\n                            \n                        \n                        \n                            \n                                 LEVEL_STUDY\n                            \n                        \n                        \n                            \n                                Value : Study\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ProcessingJobType\n                    \n                \n                        \n                            \n                                 TMTV\n                            \n                        \n                        \n                            \n                                Value : tmtv\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ProcessingMask\n                    \n                \n                        \n                            \n                                 RTSS\n                            \n                        \n                        \n                            \n                                Value : rtss\n                            \n                        \n                        \n                            \n                                 SEG\n                            \n                        \n                        \n                            \n                                Value : seg\n                            \n                        \n                        \n                            \n                                 NIFTI\n                            \n                        \n                        \n                            \n                                Value : nifti\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        QueryAnswerType\n                    \n                \n                        \n                            \n                                 LEVEL_SERIES\n                            \n                        \n                        \n                            \n                                Value : series\n                            \n                        \n                        \n                            \n                                 LEVEL_STUDY\n                            \n                        \n                        \n                            \n                                Value : study\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TagPolicies\n                    \n                \n                        \n                            \n                                 KEEP\n                            \n                        \n                        \n                            \n                                Value : Keep\n                            \n                        \n                        \n                            \n                                 REPLACE\n                            \n                        \n                        \n                            \n                                Value : Replace\n                            \n                        \n                        \n                            \n                                 REMOVE\n                            \n                        \n                        \n                            \n                                Value : Remove\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            buildSwagger   (src/.../main.ts)\n                        \n                        \n                            isSecondaryCapture   (src/.../anon.worker.ts)\n                        \n                        \n                            isTimeBetween   (src/.../is-time-between.ts)\n                        \n                        \n                            logger   (src/.../logger.middleware.ts)\n                        \n                        \n                            main   (src/.../main.ts)\n                        \n                        \n                            OrGuard   (src/.../or.guard.ts)\n                        \n                        \n                            processSeries   (src/.../query.worker.ts)\n                        \n                        \n                            processStudy   (src/.../query.worker.ts)\n                        \n                        \n                            setupAnonWorker   (src/.../anon.worker.ts)\n                        \n                        \n                            setupDeleteWorker   (src/.../delete.worker.ts)\n                        \n                        \n                            setupProcessingWorker   (src/.../processing.worker.ts)\n                        \n                        \n                            setupQueryWorker   (src/.../query.worker.ts)\n                        \n                        \n                            setupWorkers   (src/.../main.ts)\n                        \n                        \n                            tmtvJob   (src/.../processing.worker.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        buildSwagger\n                        \n                    \n                \n            \n            \n                \nbuildSwagger(app: INestApplication)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                app\n                                            \n                                                        INestApplication\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        main\n                        \n                    \n                \n            \n            \n                \nmain()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupWorkers\n                        \n                    \n                \n            \n            \n                \nsetupWorkers(app: INestApplication)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                app\n                                            \n                                                        INestApplication\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/queues/anon/anon.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isSecondaryCapture\n                        \n                    \n                \n            \n            \n                \nisSecondaryCapture(sopClassUid: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sopClassUid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupAnonWorker\n                        \n                    \n                \n            \n            \n                \nsetupAnonWorker(orthancClient: OrthancClient, configService: ConfigService)\n                \n            \n\n\n\n\n            \n                \n                        Definition and redis connexion of the anonymization job.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orthancClient\n                                            \n                                                            OrthancClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                configService\n                                            \n                                                        ConfigService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/utils/is-time-between.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isTimeBetween\n                        \n                    \n                \n            \n            \n                \nisTimeBetween(startHour: number, startMinute: number, endHour: number, endMinute: number, currentHour: number, currentMinute: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                startHour\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                startMinute\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endHour\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endMinute\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentHour\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentMinute\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/utils/logger.middleware.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n            \n                \nlogger(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        NextFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/guards/or.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OrGuard\n                        \n                    \n                \n            \n            \n                \nOrGuard(guards: Array, orGuardOptions?: OrGuardOptions)\n                \n            \n\n\n\n\n            \n                \n                        Guard testing an array of guards, activate at the first guard activation granted\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                guards\n                                            \n                                                        Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Array of guards to be tested\n\n                                            \n                                        \n                                        \n                                                orGuardOptions\n                                            \n                                                            OrGuardOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    : optional}\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/queues/query/query.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        processSeries\n                        \n                    \n                \n            \n            \n                \nprocessSeries(orthancClient: OrthancClient, job: Job)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orthancClient\n                                            \n                                                            OrthancClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                job\n                                            \n                                                        Job\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        processStudy\n                        \n                    \n                \n            \n            \n                \nprocessStudy(orthancClient: OrthancClient, job: Job)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orthancClient\n                                            \n                                                            OrthancClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                job\n                                            \n                                                        Job\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupQueryWorker\n                        \n                    \n                \n            \n            \n                \nsetupQueryWorker(orthancClient: OrthancClient, configService: ConfigService)\n                \n            \n\n\n\n\n            \n                \n                        Definition and redis connexion of the query job.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orthancClient\n                                            \n                                                            OrthancClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                configService\n                                            \n                                                        ConfigService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/queues/delete/delete.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setupDeleteWorker\n                        \n                    \n                \n            \n            \n                \nsetupDeleteWorker(orthancClient: OrthancClient, configService: ConfigService)\n                \n            \n\n\n\n\n            \n                \n                        Definition and redis connexion of the delete job.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orthancClient\n                                            \n                                                            OrthancClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                configService\n                                            \n                                                        ConfigService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/processing/processing.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setupProcessingWorker\n                        \n                    \n                \n            \n            \n                \nsetupProcessingWorker(orthancClient: OrthancClient, configService: ConfigService, processingClient: ProcessingClient)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orthancClient\n                                            \n                                                            OrthancClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                configService\n                                            \n                                                        ConfigService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                processingClient\n                                            \n                                                            ProcessingClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tmtvJob\n                        \n                    \n                \n            \n            \n                \ntmtvJob(job: Job, orthancClient: OrthancClient, processingClient: ProcessingClient)\n                \n            \n\n\n\n\n            \n                \n                        GaelO Processing related Jobs (currently only TMTV)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                job\n                                            \n                                                        Job\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                orthancClient\n                                            \n                                                            OrthancClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                processingClient\n                                            \n                                                            ProcessingClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ npm installRunning the app\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AutoroutingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GuardsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LabelsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OauthConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OptionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrthancModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProcessingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        QueueModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RolesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SeederModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AutoroutingsModule\n\n\n\ncluster_AutoroutingsModule_providers\n\n\n\ncluster_GuardsModule\n\n\n\ncluster_GuardsModule_providers\n\n\n\ncluster_LabelsModule\n\n\n\ncluster_LabelsModule_providers\n\n\n\ncluster_OptionsModule\n\n\n\ncluster_OptionsModule_providers\n\n\n\ncluster_QueueModule\n\n\n\ncluster_QueueModule_providers\n\n\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_exports\n\n\n\ncluster_RolesModule_providers\n\n\n\ncluster_SeederModule\n\n\n\ncluster_SeederModule_providers\n\n\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_exports\n\n\n\ncluster_TasksModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAutoroutingsModule\n\nAutoroutingsModule\n\nAppModule -->\n\nAutoroutingsModule->AppModule\n\n\n\n\n\nGuardsModule\n\nGuardsModule\n\nAppModule -->\n\nGuardsModule->AppModule\n\n\n\n\n\nLabelsModule\n\nLabelsModule\n\nAppModule -->\n\nLabelsModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nOauthConfigModule\n\nOauthConfigModule\n\nAppModule -->\n\nOauthConfigModule->AppModule\n\n\n\n\n\nOptionsModule\n\nOptionsModule\n\nAppModule -->\n\nOptionsModule->AppModule\n\n\n\n\n\nOrthancModule\n\nOrthancModule\n\nAppModule -->\n\nOrthancModule->AppModule\n\n\n\n\n\nProcessingModule\n\nProcessingModule\n\nAppModule -->\n\nProcessingModule->AppModule\n\n\n\n\n\nQueueModule\n\nQueueModule\n\nAppModule -->\n\nQueueModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nGuardsModule -->\n\nRolesModule->GuardsModule\n\n\n\nOrthancModule -->\n\nRolesModule->OrthancModule\n\n\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nRolesService \n\nRolesService \n\nRolesService  -->\n\nRolesModule->RolesService \n\n\n\n\n\nSeederModule\n\nSeederModule\n\nAppModule -->\n\nSeederModule->AppModule\n\n\n\n\n\nTasksModule\n\nTasksModule\n\nAppModule -->\n\nTasksModule->AppModule\n\n\n\n\n\nOrthancMonitoringTask \n\nOrthancMonitoringTask \n\nOrthancMonitoringTask  -->\n\nTasksModule->OrthancMonitoringTask \n\n\n\n\n\nQueryQueueTask \n\nQueryQueueTask \n\nQueryQueueTask  -->\n\nTasksModule->QueryQueueTask \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nProcessingClient\n\nProcessingClient\n\nAppModule -->\n\nProcessingClient->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtOauthStrategy\n\nJwtOauthStrategy\n\nAuthModule -->\n\nJwtOauthStrategy->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nMailService\n\nMailService\n\nAuthModule -->\n\nMailService->AuthModule\n\n\n\n\n\nOauthConfigService\n\nOauthConfigService\n\nAuthModule -->\n\nOauthConfigService->AuthModule\n\n\n\nOauthConfigModule -->\n\nOauthConfigService->OauthConfigModule\n\n\n\nSeederModule -->\n\nOauthConfigService->SeederModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAuthModule -->\n\nUsersService->AuthModule\n\n\n\nRolesModule -->\n\nUsersService->RolesModule\n\n\n\nSeederModule -->\n\nUsersService->SeederModule\n\n\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nAutoroutingHandler\n\nAutoroutingHandler\n\nAutoroutingsModule -->\n\nAutoroutingHandler->AutoroutingsModule\n\n\n\n\n\nAutoroutingsService\n\nAutoroutingsService\n\nAutoroutingsModule -->\n\nAutoroutingsService->AutoroutingsModule\n\n\n\n\n\nOrthancClient\n\nOrthancClient\n\nAutoroutingsModule -->\n\nOrthancClient->AutoroutingsModule\n\n\n\nGuardsModule -->\n\nOrthancClient->GuardsModule\n\n\n\nOrthancModule -->\n\nOrthancClient->OrthancModule\n\n\n\nTasksModule -->\n\nOrthancClient->TasksModule\n\n\n\n\n\nProcessingQueueService\n\nProcessingQueueService\n\nAutoroutingsModule -->\n\nProcessingQueueService->AutoroutingsModule\n\n\n\nProcessingModule -->\n\nProcessingQueueService->ProcessingModule\n\n\n\n\n\nInstanceGuard\n\nInstanceGuard\n\nGuardsModule -->\n\nInstanceGuard->GuardsModule\n\n\n\n\n\nJwtAuthGuard\n\nJwtAuthGuard\n\nGuardsModule -->\n\nJwtAuthGuard->GuardsModule\n\n\n\n\n\nJwtOAuthGuard\n\nJwtOAuthGuard\n\nGuardsModule -->\n\nJwtOAuthGuard->GuardsModule\n\n\n\n\n\nLocalAuthGuard\n\nLocalAuthGuard\n\nGuardsModule -->\n\nLocalAuthGuard->GuardsModule\n\n\n\n\n\nSeriesGuard\n\nSeriesGuard\n\nGuardsModule -->\n\nSeriesGuard->GuardsModule\n\n\n\n\n\nLabelsService\n\nLabelsService\n\nLabelsModule -->\n\nLabelsService->LabelsModule\n\n\n\nRolesModule -->\n\nLabelsService->RolesModule\n\n\n\n\n\nOptionsService\n\nOptionsService\n\nOptionsModule -->\n\nOptionsService->OptionsModule\n\n\n\nSeederModule -->\n\nOptionsService->SeederModule\n\n\n\n\n\nQueuesAnonService\n\nQueuesAnonService\n\nQueueModule -->\n\nQueuesAnonService->QueueModule\n\n\n\n\n\nQueuesDeleteService\n\nQueuesDeleteService\n\nQueueModule -->\n\nQueuesDeleteService->QueueModule\n\n\n\n\n\nQueuesQueryService\n\nQueuesQueryService\n\nQueueModule -->\n\nQueuesQueryService->QueueModule\n\n\n\nTasksModule -->\n\nQueuesQueryService->TasksModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\nSeederModule -->\n\nRolesService->SeederModule\n\n\n\nUsersModule -->\n\nRolesService->UsersModule\n\n\n\n\n\nSeederService\n\nSeederService\n\nSeederModule -->\n\nSeederService->SeederModule\n\n\n\n\n\nOrthancMonitoringTask\n\nOrthancMonitoringTask\n\nTasksModule -->\n\nOrthancMonitoringTask->TasksModule\n\n\n\n\n\nQueryQueueTask\n\nQueryQueueTask\n\nTasksModule -->\n\nQueryQueueTask->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        15 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    20 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    29 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    39 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    17 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : AGPLv3\n        \n            Author : Pixilib SAS\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            buildDocs   (src/.../build_docs.ts)\n                        \n                        \n                            checkLabelRoleStudy   (src/.../check-label-role-study.ts)\n                        \n                        \n                            comparePasswords   (src/.../passwords.ts)\n                        \n                        \n                            doReverseProxy   (src/.../utils.ts)\n                        \n                        \n                            generateRandomUUID   (src/.../passwords.ts)\n                        \n                        \n                            generateToken   (src/.../passwords.ts)\n                        \n                        \n                            getTokenExpiration   (src/.../passwords.ts)\n                        \n                        \n                            hashPassword   (src/.../passwords.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (src/.../constants.ts)\n                        \n                        \n                            Public   (src/.../public.ts)\n                        \n                        \n                            seeder   (src/.../seed.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/build_docs.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        buildDocs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async () => {\n  const app = await NestFactory.create(AppModule);\n  app.setGlobalPrefix('api');\n  const config = new DocumentBuilder()\n    .setTitle('GaelO Flow API')\n    .setDescription('The GaelO Flow API description')\n    .setVersion('2.0')\n    .addBearerAuth(\n      { type: 'http', scheme: 'bearer', bearerFormat: 'JWT' },\n      'access-token',\n    )\n    .build();\n  const document = SwaggerModule.createDocument(app, config);\n  writeFileSync('../openapi.json', JSON.stringify(document));\n  await app.close();\n  console.log('Documentation built -> openapi.json');\n  exit(0);\n}\n                    \n                \n\n\n        \n    \n\n    src/utils/check-label-role-study.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        checkLabelRoleStudy\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (\n  studyID: string,\n  role: string,\n  rolesService: RolesService,\n  orthancClient: OrthancClient,\n) => {\n  const labelsOfRole = (await rolesService.getRoleLabels(role)).map(\n    (label) => label.Name,\n  );\n  const labelsOfStudy = await orthancClient\n    .listLabels('studies', studyID)\n    .catch(() => {\n      return [];\n    });\n\n  return (\n    labelsOfRole.filter((value: string) => labelsOfStudy.includes(value))\n      .length > 0\n  );\n}\n                    \n                \n\n            \n                \n                    Utils fonction checking a Orthanc Study has at least one label of a role.\n\n                \n            \n\n        \n    \n\n    src/utils/passwords.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        comparePasswords\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (password: string, hash: string) => {\n  return bcryptjs.compare(password, hash);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateRandomUUID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  const jobId = randomUUID();\n  return jobId;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async () => {\n  const token = crypto.randomBytes(32).toString('hex');\n  const hash = await hashPassword(token);\n  return { token, hash };\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTokenExpiration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (hours = 24): Date => {\n  return new Date(Date.now() + hours * 60 * 60 * 1000);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hashPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (password: string) => {\n  const saltTest = await bcryptjs.genSalt();\n  const hash = await bcryptjs.hash(password, saltTest);\n  return hash;\n}\n                    \n                \n\n\n        \n    \n\n    src/orthanc/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        doReverseProxy\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  request: Request | RawBodyRequest,\n  response: Response,\n  orthancClient: OrthancClient,\n) => {\n  const url = request.url;\n  const orthancCalledApi = url.replace('/api', '');\n  const method = request.method;\n  const body = request.body;\n  orthancClient.streamAnswerToRes(orthancCalledApi, method, body, response, {\n    'Content-Type': request.headers['content-type'],\n    accept: request.headers.accept,\n  });\n}\n                    \n                \n\n            \n                \n                    Utility function to reverse proxy a request to orthanc.\n\n                \n            \n\n        \n    \n\n    src/constants/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n\n    src/interceptors/public.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n\n    src/seeder/seed.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        seeder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async () => {\n  const app = await NestFactory.createApplicationContext(AppModule);\n  const seedservice = app.get(SeederService);\n\n  await seedservice.seed();\n  await app.close();\n\n  console.log('Seeding complete');\n  exit(0);\n}\n                    \n                \n\n            \n                \n                    Execute the seeding of the database.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
